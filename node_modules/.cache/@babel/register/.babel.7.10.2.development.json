{
  "{\"sourceRoot\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require(\"express\");\n\nvar app = express();\n\nvar cors = require(\"cors\");\n\nvar session = require(\"express-session\"); //MySql\n\n\nvar MysqlStore = require(\"express-mysql-session\")(session);\n\nvar db = require(__dirname + \"/db_connect\"); // const sessionFileStore = require(\"session-file-store\"); //暫時本地端存儲\n//Top-Level middleware\n//parse application/x-www-form-urlencoded\n\n\napp.use(express.urlencoded({\n  extended: false\n})); //parse application/json\n\napp.use(express.json()); //cors\n\nvar whitelist = [undefined, \"http://localhost:3000\", \"http://localhost:3001\", \"http://localhost:3002\", \"http://127.0.0.1:5500\", \"http://localhost:3030\"];\nvar corsOptions = {\n  credentials: true,\n  origin: function origin(_origin, cb) {\n    // console.log(origin);\n    if (whitelist.indexOf(_origin) !== -1) {\n      cb(null, true);\n    } else {\n      cb(null, false);\n    }\n  }\n};\napp.use(cors(corsOptions)); //Session\n// const FileStore = sessionFileStore(session); //暫時本地端存儲\n\nvar identityKey = \"skey\";\nvar sessionStore = new MysqlStore({}, db);\napp.use(session({\n  name: identityKey,\n  secret: \"SECRET\",\n  // 用來對session id相關的cookie進行簽名\n  store: sessionStore,\n  // store: new FileStore(), // 本地儲存session（純文字文件，也可以選擇其他store，例如redis的）\n  saveUninitialized: false,\n  // 是否自動儲存未初始化的會話，建議false\n  resave: false,\n  // 是否每次都重新儲存會話，建議false\n  cookie: {\n    maxAge: 60000 // 1分鐘 有效期，單位是毫秒\n    // domain:\"localhost\"\n    // sameSite: false, // this may need to be false is you are accessing from another React app\n    // httpOnly: false, // this must be false if you want to access the cookie\n    // secure: process.env.NODE_ENV === \"production\",\n\n  }\n})); // //設定ejs路徑(暫時用不到)\n\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", __dirname + \"/../views\"); //各功能路由\n//商品\n\napp.use(\"/itemlist\", require(__dirname + \"/itemlist\")); //會員\n\napp.use(\"/users\", require(__dirname + \"/users\")); //課程\n\napp.use('/class', require(__dirname + '/class')); //測試Post\n\napp.post(\"/echo\", function (req, res) {\n  // console.log(req.body)\n  // console.log(db);\n  req.session.my_var = req.session.my_var || 0;\n  req.session.my_var++; // res.cookie(\"test\", \"test\");\n\n  res.json(req.session);\n}); //測試Get\n\napp.get(\"/main\", function (req, res) {\n  res.render(\"test\");\n});\napp.get(\"/\", function (req, res) {\n  var output = {\n    text: \"ok from node\",\n    session: req.session\n  };\n  res.json(output);\n}); //靜態頁面\n\napp.use(express[\"static\"](\"public\")); //404\n\napp.use(function (req, res) {\n  res.type(\"text/html\");\n  res.status(404);\n  res.send(\"<h1>404</h1><h1>Not Found</h1>\");\n}); //設定Port號\n\napp.listen(3030, function () {\n  console.log(\"Server Started\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "session",
        "MysqlStore",
        "db",
        "__dirname",
        "use",
        "urlencoded",
        "extended",
        "json",
        "whitelist",
        "undefined",
        "corsOptions",
        "credentials",
        "origin",
        "cb",
        "indexOf",
        "identityKey",
        "sessionStore",
        "name",
        "secret",
        "store",
        "saveUninitialized",
        "resave",
        "cookie",
        "maxAge",
        "set",
        "post",
        "req",
        "res",
        "my_var",
        "get",
        "render",
        "output",
        "text",
        "type",
        "status",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst app = express();\nconst cors = require(\"cors\");\nconst session = require(\"express-session\");\n\n//MySql\nconst MysqlStore = require(\"express-mysql-session\")(session);\nconst db = require(__dirname + \"/db_connect\");\n\n// const sessionFileStore = require(\"session-file-store\"); //暫時本地端存儲\n\n//Top-Level middleware\n//parse application/x-www-form-urlencoded\napp.use(express.urlencoded({ extended: false }));\n\n//parse application/json\napp.use(express.json());\n\n//cors\nconst whitelist = [\n  undefined,\n  \"http://localhost:3000\",\n  \"http://localhost:3001\",\n  \"http://localhost:3002\",\n  \"http://127.0.0.1:5500\",\n  \"http://localhost:3030\",\n];\nconst corsOptions = {\n  credentials: true,\n  origin: function (origin, cb) {\n    // console.log(origin);\n    if (whitelist.indexOf(origin) !== -1) {\n      cb(null, true);\n    } else {\n      cb(null, false);\n    }\n  },\n};\napp.use(cors(corsOptions));\n\n//Session\n// const FileStore = sessionFileStore(session); //暫時本地端存儲\nconst identityKey = \"skey\";\n\nconst sessionStore = new MysqlStore({}, db);\napp.use(\n  session({\n    name: identityKey,\n    secret: \"SECRET\", // 用來對session id相關的cookie進行簽名\n    store: sessionStore,\n    // store: new FileStore(), // 本地儲存session（純文字文件，也可以選擇其他store，例如redis的）\n    saveUninitialized: false, // 是否自動儲存未初始化的會話，建議false\n    resave: false, // 是否每次都重新儲存會話，建議false\n    cookie: {\n      maxAge: 60000, // 1分鐘 有效期，單位是毫秒\n      // domain:\"localhost\"\n      // sameSite: false, // this may need to be false is you are accessing from another React app\n      // httpOnly: false, // this must be false if you want to access the cookie\n      // secure: process.env.NODE_ENV === \"production\",\n    },\n  })\n);\n\n// //設定ejs路徑(暫時用不到)\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", __dirname + \"/../views\");\n\n//各功能路由\n//商品\napp.use(\"/itemlist\", require(__dirname + \"/itemlist\"));\n//會員\napp.use(\"/users\", require(__dirname + \"/users\"));\n//課程\napp.use('/class', require(__dirname + '/class'));\n\n//測試Post\napp.post(\"/echo\", (req, res) => {\n  // console.log(req.body)\n  // console.log(db);\n  req.session.my_var = req.session.my_var || 0;\n  req.session.my_var++;\n  // res.cookie(\"test\", \"test\");\n  res.json(req.session);\n});\n\n//測試Get\napp.get(\"/main\", (req, res) => {\n  res.render(\"test\");\n});\n\napp.get(\"/\", (req, res) => {\n  const output = {\n    text: \"ok from node\",\n    session: req.session,\n  };\n  res.json(output);\n});\n\n//靜態頁面\napp.use(express.static(\"public\"));\n\n//404\napp.use((req, res) => {\n  res.type(\"text/html\");\n  res.status(404);\n  res.send(\"<h1>404</h1><h1>Not Found</h1>\");\n});\n\n//設定Port號\napp.listen(3030, function () {\n  console.log(\"Server Started\");\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592823215311
  },
  "{\"sourceRoot\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "db_connect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mysql = require(\"mysql2\");\n\nvar pool = mysql.createPool({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"InSense\",\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0\n});\nmodule.exports = pool.promise();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiX2Nvbm5lY3QuanMiXSwibmFtZXMiOlsibXlzcWwiLCJyZXF1aXJlIiwicG9vbCIsImNyZWF0ZVBvb2wiLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJ3YWl0Rm9yQ29ubmVjdGlvbnMiLCJjb25uZWN0aW9uTGltaXQiLCJxdWV1ZUxpbWl0IiwibW9kdWxlIiwiZXhwb3J0cyIsInByb21pc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFFQSxJQUFNQyxJQUFJLEdBQUdGLEtBQUssQ0FBQ0csVUFBTixDQUFpQjtBQUM1QkMsRUFBQUEsSUFBSSxFQUFFLFdBRHNCO0FBRTVCQyxFQUFBQSxJQUFJLEVBQUUsTUFGc0I7QUFHNUJDLEVBQUFBLFFBQVEsRUFBRSxFQUhrQjtBQUk1QkMsRUFBQUEsUUFBUSxFQUFFLFNBSmtCO0FBSzVCQyxFQUFBQSxrQkFBa0IsRUFBRSxJQUxRO0FBTTVCQyxFQUFBQSxlQUFlLEVBQUUsRUFOVztBQU81QkMsRUFBQUEsVUFBVSxFQUFFO0FBUGdCLENBQWpCLENBQWI7QUFVQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVixJQUFJLENBQUNXLE9BQUwsRUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL21hYy9Eb2N1bWVudHMvVlNfY29kZS9yZWFjdC9JblNlbnNlLW5vZGUvSW5TZW5zZV9Ob2RlL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbCA9IHJlcXVpcmUoXCJteXNxbDJcIik7XG5cbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcbiAgaG9zdDogXCJsb2NhbGhvc3RcIixcbiAgdXNlcjogXCJyb290XCIsXG4gIHBhc3N3b3JkOiBcIlwiLFxuICBkYXRhYmFzZTogXCJJblNlbnNlXCIsXG4gIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcbiAgY29ubmVjdGlvbkxpbWl0OiAxMCxcbiAgcXVldWVMaW1pdDogMCxcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvb2wucHJvbWlzZSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "db_connect.js"
      ],
      "names": [
        "mysql",
        "require",
        "pool",
        "createPool",
        "host",
        "user",
        "password",
        "database",
        "waitForConnections",
        "connectionLimit",
        "queueLimit",
        "module",
        "exports",
        "promise"
      ],
      "mappings": ";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,IAAMC,IAAI,GAAGF,KAAK,CAACG,UAAN,CAAiB;AAC5BC,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,IAAI,EAAE,MAFsB;AAG5BC,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,QAAQ,EAAE,SAJkB;AAK5BC,EAAAA,kBAAkB,EAAE,IALQ;AAM5BC,EAAAA,eAAe,EAAE,EANW;AAO5BC,EAAAA,UAAU,EAAE;AAPgB,CAAjB,CAAb;AAUAC,MAAM,CAACC,OAAP,GAAiBV,IAAI,CAACW,OAAL,EAAjB",
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const mysql = require(\"mysql2\");\n\nconst pool = mysql.createPool({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"InSense\",\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0,\n});\n\nmodule.exports = pool.promise();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592822004759
  },
  "{\"sourceRoot\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "itemlist.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar router = express.Router(); //商品分類\n//依品牌\n\nrouter.get(\"/brand/:brand?\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var getBrand, brandResponse, getItems, itemsResponse;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //   res.json(req.params.brand)\n            console.log(req.params.brand); //取得品牌資訊\n\n            getBrand = \"SELECT `Brand`.`brandId`, `Brand`.`brandName`, `Brand`.`brandBanner`,`Brand`.`brandDiscription`,`Brand`.`brandCode` FROM `Brand` WHERE `Brand`.`brandCode`= ? \";\n            _context.next = 4;\n            return db.query(getBrand, [req.params.brand]);\n\n          case 4:\n            brandResponse = _context.sent;\n            //依據品牌，選定商品\n            getItems = \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Items`.`brandId` = `Brand`.`brandId` WHERE `Brand`.`brandCode`= ?\";\n            _context.next = 8;\n            return db.query(getItems, [req.params.brand]);\n\n          case 8:\n            itemsResponse = _context.sent;\n            res.json([brandResponse[0], itemsResponse[0]]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //依分類\n\nrouter.get(\"/category/:category?\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var getCategory, categoryResponse, getItems, itemsResponse;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //   res.json(req.params.brand)\n            console.log(req.params.brand); //取得分類資訊\n\n            getCategory = \"SELECT `IC`.`itemCategoryId`,`IC`.`itemCategoryName`, `IC`.`itemCategoryBanner` FROM `itemCategories` AS `IC` WHERE `IC`.`itemCategoryCode`=  ? \";\n            _context2.next = 4;\n            return db.query(getCategory, [req.params.category]);\n\n          case 4:\n            categoryResponse = _context2.sent;\n            //依據分類，選定商品\n            getItems = \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`, `Items`.`itemQty`, `ItemCategories`.`itemCategoryName` FROM `Items` INNER JOIN `ItemCategories` ON `Items`.`itemCategoryId` = `ItemCategories`.`itemCategoryId` WHERE `ItemCategories`.`itemCategoryCode`= ? \";\n            _context2.next = 8;\n            return db.query(getItems, [req.params.category]);\n\n          case 8:\n            itemsResponse = _context2.sent;\n            res.json([categoryResponse[0], itemsResponse[0]]);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.get(\"/\", function (req, res) {\n  res.json(\"this is itemslist\");\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW1saXN0LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiZGIiLCJfX2Rpcm5hbWUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwicGFyYW1zIiwiYnJhbmQiLCJnZXRCcmFuZCIsInF1ZXJ5IiwiYnJhbmRSZXNwb25zZSIsImdldEl0ZW1zIiwiaXRlbXNSZXNwb25zZSIsImpzb24iLCJnZXRDYXRlZ29yeSIsImNhdGVnb3J5IiwiY2F0ZWdvcnlSZXNwb25zZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUNFLFNBQVMsR0FBRyxhQUFiLENBQWxCOztBQUNBLElBQU1DLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWYsQyxDQUVBO0FBQ0E7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLGdCQUFYO0FBQUEscUVBQTZCLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3pCO0FBRUFDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFHLENBQUNJLE1BQUosQ0FBV0MsS0FBdkIsRUFIeUIsQ0FLekI7O0FBQ01DLFlBQUFBLFFBTm1CLEdBT3JCLGdLQVBxQjtBQUFBO0FBQUEsbUJBU0dYLEVBQUUsQ0FBQ1ksS0FBSCxDQUFTRCxRQUFULEVBQW1CLENBQUNOLEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxLQUFaLENBQW5CLENBVEg7O0FBQUE7QUFTbkJHLFlBQUFBLGFBVG1CO0FBV3pCO0FBQ01DLFlBQUFBLFFBWm1CLEdBYXJCLDhNQWJxQjtBQUFBO0FBQUEsbUJBZUdkLEVBQUUsQ0FBQ1ksS0FBSCxDQUFTRSxRQUFULEVBQW1CLENBQUNULEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxLQUFaLENBQW5CLENBZkg7O0FBQUE7QUFlbkJLLFlBQUFBLGFBZm1CO0FBZ0J6QlQsWUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVMsQ0FBQ0gsYUFBYSxDQUFDLENBQUQsQ0FBZCxFQUFtQkUsYUFBYSxDQUFDLENBQUQsQ0FBaEMsQ0FBVDs7QUFoQnlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTdCOztBQUFBO0FBQUE7QUFBQTtBQUFBLEssQ0FtQkE7O0FBQ0FiLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLHNCQUFYO0FBQUEsc0VBQW1DLGtCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQy9CO0FBRUFDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFHLENBQUNJLE1BQUosQ0FBV0MsS0FBdkIsRUFIK0IsQ0FLL0I7O0FBQ01PLFlBQUFBLFdBTnlCLEdBTzNCLGtKQVAyQjtBQUFBO0FBQUEsbUJBU0FqQixFQUFFLENBQUNZLEtBQUgsQ0FBU0ssV0FBVCxFQUFzQixDQUFDWixHQUFHLENBQUNJLE1BQUosQ0FBV1MsUUFBWixDQUF0QixDQVRBOztBQUFBO0FBU3pCQyxZQUFBQSxnQkFUeUI7QUFXL0I7QUFDTUwsWUFBQUEsUUFaeUIsR0FhM0IsbVNBYjJCO0FBQUE7QUFBQSxtQkFlSGQsRUFBRSxDQUFDWSxLQUFILENBQVNFLFFBQVQsRUFBbUIsQ0FBQ1QsR0FBRyxDQUFDSSxNQUFKLENBQVdTLFFBQVosQ0FBbkIsQ0FmRzs7QUFBQTtBQWV6QkgsWUFBQUEsYUFmeUI7QUFnQi9CVCxZQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBUyxDQUFDRyxnQkFBZ0IsQ0FBQyxDQUFELENBQWpCLEVBQXNCSixhQUFhLENBQUMsQ0FBRCxDQUFuQyxDQUFUOztBQWhCK0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBbkM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFtQkFiLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDMUJBLEVBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTLG1CQUFUO0FBQ0gsQ0FGRDtBQUlBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbWFjL0RvY3VtZW50cy9WU19jb2RlL3JlYWN0L0luU2Vuc2Utbm9kZS9JblNlbnNlX05vZGUvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IGRiID0gcmVxdWlyZShfX2Rpcm5hbWUgKyBcIi9kYl9jb25uZWN0XCIpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy/llYblk4HliIbpoZ5cbi8v5L6d5ZOB54mMXG5yb3V0ZXIuZ2V0KFwiL2JyYW5kLzpicmFuZD9cIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgLy8gICByZXMuanNvbihyZXEucGFyYW1zLmJyYW5kKVxuXG4gICAgY29uc29sZS5sb2cocmVxLnBhcmFtcy5icmFuZCk7XG5cbiAgICAvL+WPluW+l+WTgeeJjOizh+ioilxuICAgIGNvbnN0IGdldEJyYW5kID1cbiAgICAgICAgXCJTRUxFQ1QgYEJyYW5kYC5gYnJhbmRJZGAsIGBCcmFuZGAuYGJyYW5kTmFtZWAsIGBCcmFuZGAuYGJyYW5kQmFubmVyYCxgQnJhbmRgLmBicmFuZERpc2NyaXB0aW9uYCxgQnJhbmRgLmBicmFuZENvZGVgIEZST00gYEJyYW5kYCBXSEVSRSBgQnJhbmRgLmBicmFuZENvZGVgPSA/IFwiO1xuXG4gICAgY29uc3QgYnJhbmRSZXNwb25zZSA9IGF3YWl0IGRiLnF1ZXJ5KGdldEJyYW5kLCBbcmVxLnBhcmFtcy5icmFuZF0pO1xuXG4gICAgLy/kvp3mk5rlk4HniYzvvIzpgbjlrprllYblk4FcbiAgICBjb25zdCBnZXRJdGVtcyA9XG4gICAgICAgIFwiU0VMRUNUIGBJdGVtc2AuYGl0ZW1JZGAsIGBJdGVtc2AuYGl0ZW1OYW1lYCwgYEl0ZW1zYC5gaXRlbUltZ2AsYEl0ZW1zYC5gaXRlbVByaWNlYCxgQnJhbmRgLmBicmFuZE5hbWVgIEZST00gYEl0ZW1zYCBJTk5FUiBKT0lOIGBCcmFuZGAgT04gYEl0ZW1zYC5gYnJhbmRJZGAgPSBgQnJhbmRgLmBicmFuZElkYCBXSEVSRSBgQnJhbmRgLmBicmFuZENvZGVgPSA/XCI7XG5cbiAgICBjb25zdCBpdGVtc1Jlc3BvbnNlID0gYXdhaXQgZGIucXVlcnkoZ2V0SXRlbXMsIFtyZXEucGFyYW1zLmJyYW5kXSk7XG4gICAgcmVzLmpzb24oW2JyYW5kUmVzcG9uc2VbMF0sIGl0ZW1zUmVzcG9uc2VbMF1dKTtcbn0pO1xuXG4vL+S+neWIhumhnlxucm91dGVyLmdldChcIi9jYXRlZ29yeS86Y2F0ZWdvcnk/XCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIC8vICAgcmVzLmpzb24ocmVxLnBhcmFtcy5icmFuZClcblxuICAgIGNvbnNvbGUubG9nKHJlcS5wYXJhbXMuYnJhbmQpO1xuXG4gICAgLy/lj5blvpfliIbpoZ7os4foqIpcbiAgICBjb25zdCBnZXRDYXRlZ29yeSA9XG4gICAgICAgIFwiU0VMRUNUIGBJQ2AuYGl0ZW1DYXRlZ29yeUlkYCxgSUNgLmBpdGVtQ2F0ZWdvcnlOYW1lYCwgYElDYC5gaXRlbUNhdGVnb3J5QmFubmVyYCBGUk9NIGBpdGVtQ2F0ZWdvcmllc2AgQVMgYElDYCBXSEVSRSBgSUNgLmBpdGVtQ2F0ZWdvcnlDb2RlYD0gID8gXCI7XG5cbiAgICBjb25zdCBjYXRlZ29yeVJlc3BvbnNlID0gYXdhaXQgZGIucXVlcnkoZ2V0Q2F0ZWdvcnksIFtyZXEucGFyYW1zLmNhdGVnb3J5XSk7XG5cbiAgICAvL+S+neaTmuWIhumhnu+8jOmBuOWumuWVhuWTgVxuICAgIGNvbnN0IGdldEl0ZW1zID1cbiAgICAgICAgXCJTRUxFQ1QgYEl0ZW1zYC5gaXRlbUlkYCwgYEl0ZW1zYC5gaXRlbU5hbWVgLCBgSXRlbXNgLmBpdGVtSW1nYCxgSXRlbXNgLmBpdGVtUHJpY2VgLCBgSXRlbXNgLmBpdGVtUXR5YCwgYEl0ZW1DYXRlZ29yaWVzYC5gaXRlbUNhdGVnb3J5TmFtZWAgRlJPTSBgSXRlbXNgIElOTkVSIEpPSU4gYEl0ZW1DYXRlZ29yaWVzYCBPTiBgSXRlbXNgLmBpdGVtQ2F0ZWdvcnlJZGAgPSBgSXRlbUNhdGVnb3JpZXNgLmBpdGVtQ2F0ZWdvcnlJZGAgV0hFUkUgYEl0ZW1DYXRlZ29yaWVzYC5gaXRlbUNhdGVnb3J5Q29kZWA9ID8gXCI7XG5cbiAgICBjb25zdCBpdGVtc1Jlc3BvbnNlID0gYXdhaXQgZGIucXVlcnkoZ2V0SXRlbXMsIFtyZXEucGFyYW1zLmNhdGVnb3J5XSk7XG4gICAgcmVzLmpzb24oW2NhdGVnb3J5UmVzcG9uc2VbMF0sIGl0ZW1zUmVzcG9uc2VbMF1dKTtcbn0pO1xuXG5yb3V0ZXIuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuanNvbihcInRoaXMgaXMgaXRlbXNsaXN0XCIpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "itemlist.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "__dirname",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "console",
        "log",
        "params",
        "brand",
        "getBrand",
        "query",
        "brandResponse",
        "getItems",
        "itemsResponse",
        "json",
        "getCategory",
        "category",
        "categoryResponse",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAACE,SAAS,GAAG,aAAb,CAAlB;;AACA,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf,C,CAEA;AACA;;AACAD,MAAM,CAACE,GAAP,CAAW,gBAAX;AAAA,qEAA6B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB;AAEAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAJ,CAAWC,KAAvB,EAHyB,CAKzB;;AACMC,YAAAA,QANmB,GAOrB,gKAPqB;AAAA;AAAA,mBASGX,EAAE,CAACY,KAAH,CAASD,QAAT,EAAmB,CAACN,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAnB,CATH;;AAAA;AASnBG,YAAAA,aATmB;AAWzB;AACMC,YAAAA,QAZmB,GAarB,8MAbqB;AAAA;AAAA,mBAeGd,EAAE,CAACY,KAAH,CAASE,QAAT,EAAmB,CAACT,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAnB,CAfH;;AAAA;AAenBK,YAAAA,aAfmB;AAgBzBT,YAAAA,GAAG,CAACU,IAAJ,CAAS,CAACH,aAAa,CAAC,CAAD,CAAd,EAAmBE,aAAa,CAAC,CAAD,CAAhC,CAAT;;AAhByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA,K,CAmBA;;AACAb,MAAM,CAACE,GAAP,CAAW,sBAAX;AAAA,sEAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B;AAEAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAJ,CAAWC,KAAvB,EAH+B,CAK/B;;AACMO,YAAAA,WANyB,GAO3B,kJAP2B;AAAA;AAAA,mBASAjB,EAAE,CAACY,KAAH,CAASK,WAAT,EAAsB,CAACZ,GAAG,CAACI,MAAJ,CAAWS,QAAZ,CAAtB,CATA;;AAAA;AASzBC,YAAAA,gBATyB;AAW/B;AACML,YAAAA,QAZyB,GAa3B,mSAb2B;AAAA;AAAA,mBAeHd,EAAE,CAACY,KAAH,CAASE,QAAT,EAAmB,CAACT,GAAG,CAACI,MAAJ,CAAWS,QAAZ,CAAnB,CAfG;;AAAA;AAezBH,YAAAA,aAfyB;AAgB/BT,YAAAA,GAAG,CAACU,IAAJ,CAAS,CAACG,gBAAgB,CAAC,CAAD,CAAjB,EAAsBJ,aAAa,CAAC,CAAD,CAAnC,CAAT;;AAhB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;AAmBAb,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACU,IAAJ,CAAS,mBAAT;AACH,CAFD;AAIAI,MAAM,CAACC,OAAP,GAAiBnB,MAAjB",
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nconst router = express.Router();\n\n//商品分類\n//依品牌\nrouter.get(\"/brand/:brand?\", async (req, res) => {\n    //   res.json(req.params.brand)\n\n    console.log(req.params.brand);\n\n    //取得品牌資訊\n    const getBrand =\n        \"SELECT `Brand`.`brandId`, `Brand`.`brandName`, `Brand`.`brandBanner`,`Brand`.`brandDiscription`,`Brand`.`brandCode` FROM `Brand` WHERE `Brand`.`brandCode`= ? \";\n\n    const brandResponse = await db.query(getBrand, [req.params.brand]);\n\n    //依據品牌，選定商品\n    const getItems =\n        \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Items`.`brandId` = `Brand`.`brandId` WHERE `Brand`.`brandCode`= ?\";\n\n    const itemsResponse = await db.query(getItems, [req.params.brand]);\n    res.json([brandResponse[0], itemsResponse[0]]);\n});\n\n//依分類\nrouter.get(\"/category/:category?\", async (req, res) => {\n    //   res.json(req.params.brand)\n\n    console.log(req.params.brand);\n\n    //取得分類資訊\n    const getCategory =\n        \"SELECT `IC`.`itemCategoryId`,`IC`.`itemCategoryName`, `IC`.`itemCategoryBanner` FROM `itemCategories` AS `IC` WHERE `IC`.`itemCategoryCode`=  ? \";\n\n    const categoryResponse = await db.query(getCategory, [req.params.category]);\n\n    //依據分類，選定商品\n    const getItems =\n        \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`, `Items`.`itemQty`, `ItemCategories`.`itemCategoryName` FROM `Items` INNER JOIN `ItemCategories` ON `Items`.`itemCategoryId` = `ItemCategories`.`itemCategoryId` WHERE `ItemCategories`.`itemCategoryCode`= ? \";\n\n    const itemsResponse = await db.query(getItems, [req.params.category]);\n    res.json([categoryResponse[0], itemsResponse[0]]);\n});\n\nrouter.get(\"/\", (req, res) => {\n    res.json(\"this is itemslist\");\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592822004760
  },
  "{\"sourceRoot\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar router = express.Router(); //引入libraries中的函式\n\nvar makeFormatedId = require(__dirname + \"/../libraries/makeFormatedId\"); // 製作格式化的ID\n\n\nrouter.post(\"/registration\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var sqlAddUser, responseAddUser, sqlAddUserId, insertId, responseAddUserId;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // console.log(req.body)\n            //新增會員\n            sqlAddUser = \"INSERT INTO `Users` (`userAccount`, `userPassword`, `userFirstName`, `userLastName`, `userEmail`, `userGender`, `userCity`, `userDistrict`, `userAddress`, `userPostCode`, `userBirthday`) VALUES (?, ? ,?, ?, ?, ? , ?, ?, ?, ?, ?)\";\n            _context.next = 3;\n            return db.query(sqlAddUser, [req.body.email, req.body.password, req.body.firstName, req.body.lastName, req.body.email, req.body.gender, req.body.cities, req.body.districts, req.body.address, req.body.postCode, req.body.birthday]);\n\n          case 3:\n            responseAddUser = _context.sent;\n            sqlAddUserId = \"UPDATE `Users` SET `userId`= ? WHERE `id` = ?\"; //取得剛剛插入的id\n\n            insertId = responseAddUser[0].insertId.toString(); // console.log(insertId);\n            //插入userId\n\n            _context.next = 8;\n            return db.query(sqlAddUserId, [makeFormatedId(5, \"U\", insertId), insertId]);\n\n          case 8:\n            responseAddUserId = _context.sent;\n            res.json([responseAddUser, responseAddUserId]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n/* GET users listing. */\n\nrouter.get(\"/\", function (req, res, next) {\n  res.send(\"this is user page\");\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiZGIiLCJfX2Rpcm5hbWUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJtYWtlRm9ybWF0ZWRJZCIsInBvc3QiLCJyZXEiLCJyZXMiLCJzcWxBZGRVc2VyIiwicXVlcnkiLCJib2R5IiwiZW1haWwiLCJwYXNzd29yZCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiZ2VuZGVyIiwiY2l0aWVzIiwiZGlzdHJpY3RzIiwiYWRkcmVzcyIsInBvc3RDb2RlIiwiYmlydGhkYXkiLCJyZXNwb25zZUFkZFVzZXIiLCJzcWxBZGRVc2VySWQiLCJpbnNlcnRJZCIsInRvU3RyaW5nIiwicmVzcG9uc2VBZGRVc2VySWQiLCJqc29uIiwiZ2V0IiwibmV4dCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDRSxTQUFTLEdBQUcsYUFBYixDQUFsQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFiLEMsQ0FHQTs7QUFDQSxJQUFJQyxjQUFjLEdBQUdMLE9BQU8sQ0FBQ0UsU0FBUyxHQUFHLDhCQUFiLENBQTVCLEMsQ0FBMEU7OztBQUcxRUMsTUFBTSxDQUFDRyxJQUFQLENBQVksZUFBWjtBQUFBLHFFQUE2QixpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUMzQjtBQUVBO0FBQ01DLFlBQUFBLFVBSnFCLEdBS3pCLHNPQUx5QjtBQUFBO0FBQUEsbUJBT0dSLEVBQUUsQ0FBQ1MsS0FBSCxDQUFTRCxVQUFULEVBQXFCLENBQ2pERixHQUFHLENBQUNJLElBQUosQ0FBU0MsS0FEd0MsRUFFakRMLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRSxRQUZ3QyxFQUdqRE4sR0FBRyxDQUFDSSxJQUFKLENBQVNHLFNBSHdDLEVBSWpEUCxHQUFHLENBQUNJLElBQUosQ0FBU0ksUUFKd0MsRUFLakRSLEdBQUcsQ0FBQ0ksSUFBSixDQUFTQyxLQUx3QyxFQU1qREwsR0FBRyxDQUFDSSxJQUFKLENBQVNLLE1BTndDLEVBT2pEVCxHQUFHLENBQUNJLElBQUosQ0FBU00sTUFQd0MsRUFRakRWLEdBQUcsQ0FBQ0ksSUFBSixDQUFTTyxTQVJ3QyxFQVNqRFgsR0FBRyxDQUFDSSxJQUFKLENBQVNRLE9BVHdDLEVBVWpEWixHQUFHLENBQUNJLElBQUosQ0FBU1MsUUFWd0MsRUFXakRiLEdBQUcsQ0FBQ0ksSUFBSixDQUFTVSxRQVh3QyxDQUFyQixDQVBIOztBQUFBO0FBT3JCQyxZQUFBQSxlQVBxQjtBQXFCckJDLFlBQUFBLFlBckJxQixHQXFCTiwrQ0FyQk0sRUF1QjNCOztBQUNNQyxZQUFBQSxRQXhCcUIsR0F3QlZGLGVBQWUsQ0FBQyxDQUFELENBQWYsQ0FBbUJFLFFBQW5CLENBQTRCQyxRQUE1QixFQXhCVSxFQXlCM0I7QUFFQTs7QUEzQjJCO0FBQUEsbUJBNEJLeEIsRUFBRSxDQUFDUyxLQUFILENBQVNhLFlBQVQsRUFBdUIsQ0FDckRsQixjQUFjLENBQUMsQ0FBRCxFQUFJLEdBQUosRUFBU21CLFFBQVQsQ0FEdUMsRUFFckRBLFFBRnFELENBQXZCLENBNUJMOztBQUFBO0FBNEJyQkUsWUFBQUEsaUJBNUJxQjtBQWlDM0JsQixZQUFBQSxHQUFHLENBQUNtQixJQUFKLENBQVMsQ0FBQ0wsZUFBRCxFQUFrQkksaUJBQWxCLENBQVQ7O0FBakMyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUE3Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQW9DQTs7QUFDQXZCLE1BQU0sQ0FBQ3lCLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQVVyQixHQUFWLEVBQWVDLEdBQWYsRUFBb0JxQixJQUFwQixFQUEwQjtBQUN4Q3JCLEVBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxtQkFBVDtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCN0IsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL21hYy9Eb2N1bWVudHMvVlNfY29kZS9yZWFjdC9JblNlbnNlLW5vZGUvSW5TZW5zZV9Ob2RlL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKF9fZGlybmFtZSArIFwiL2RiX2Nvbm5lY3RcIik7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuXG4vL+W8leWFpWxpYnJhcmllc+S4reeahOWHveW8j1xudmFyIG1ha2VGb3JtYXRlZElkID0gcmVxdWlyZShfX2Rpcm5hbWUgKyBcIi8uLi9saWJyYXJpZXMvbWFrZUZvcm1hdGVkSWRcIik7IC8vIOijveS9nOagvOW8j+WMlueahElEXG5cblxucm91dGVyLnBvc3QoXCIvcmVnaXN0cmF0aW9uXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAvLyBjb25zb2xlLmxvZyhyZXEuYm9keSlcblxuICAvL+aWsOWinuacg+WToVxuICBjb25zdCBzcWxBZGRVc2VyID1cbiAgICBcIklOU0VSVCBJTlRPIGBVc2Vyc2AgKGB1c2VyQWNjb3VudGAsIGB1c2VyUGFzc3dvcmRgLCBgdXNlckZpcnN0TmFtZWAsIGB1c2VyTGFzdE5hbWVgLCBgdXNlckVtYWlsYCwgYHVzZXJHZW5kZXJgLCBgdXNlckNpdHlgLCBgdXNlckRpc3RyaWN0YCwgYHVzZXJBZGRyZXNzYCwgYHVzZXJQb3N0Q29kZWAsIGB1c2VyQmlydGhkYXlgKSBWQUxVRVMgKD8sID8gLD8sID8sID8sID8gLCA/LCA/LCA/LCA/LCA/KVwiO1xuXG4gIGNvbnN0IHJlc3BvbnNlQWRkVXNlciA9IGF3YWl0IGRiLnF1ZXJ5KHNxbEFkZFVzZXIsIFtcbiAgICByZXEuYm9keS5lbWFpbCxcbiAgICByZXEuYm9keS5wYXNzd29yZCxcbiAgICByZXEuYm9keS5maXJzdE5hbWUsXG4gICAgcmVxLmJvZHkubGFzdE5hbWUsXG4gICAgcmVxLmJvZHkuZW1haWwsXG4gICAgcmVxLmJvZHkuZ2VuZGVyLFxuICAgIHJlcS5ib2R5LmNpdGllcyxcbiAgICByZXEuYm9keS5kaXN0cmljdHMsXG4gICAgcmVxLmJvZHkuYWRkcmVzcyxcbiAgICByZXEuYm9keS5wb3N0Q29kZSxcbiAgICByZXEuYm9keS5iaXJ0aGRheVxuICBdKTtcblxuICBjb25zdCBzcWxBZGRVc2VySWQgPSBcIlVQREFURSBgVXNlcnNgIFNFVCBgdXNlcklkYD0gPyBXSEVSRSBgaWRgID0gP1wiO1xuXG4gIC8v5Y+W5b6X5Ymb5Ymb5o+S5YWl55qEaWRcbiAgY29uc3QgaW5zZXJ0SWQgPSByZXNwb25zZUFkZFVzZXJbMF0uaW5zZXJ0SWQudG9TdHJpbmcoKTtcbiAgLy8gY29uc29sZS5sb2coaW5zZXJ0SWQpO1xuXG4gIC8v5o+S5YWldXNlcklkXG4gIGNvbnN0IHJlc3BvbnNlQWRkVXNlcklkID0gYXdhaXQgZGIucXVlcnkoc3FsQWRkVXNlcklkLCBbXG4gICAgbWFrZUZvcm1hdGVkSWQoNSwgXCJVXCIsIGluc2VydElkKSxcbiAgICBpbnNlcnRJZCxcbiAgXSk7XG5cbiAgcmVzLmpzb24oW3Jlc3BvbnNlQWRkVXNlciwgcmVzcG9uc2VBZGRVc2VySWRdKTtcbn0pO1xuXG4vKiBHRVQgdXNlcnMgbGlzdGluZy4gKi9cbnJvdXRlci5nZXQoXCIvXCIsIGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xuICByZXMuc2VuZChcInRoaXMgaXMgdXNlciBwYWdlXCIpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "__dirname",
        "router",
        "Router",
        "makeFormatedId",
        "post",
        "req",
        "res",
        "sqlAddUser",
        "query",
        "body",
        "email",
        "password",
        "firstName",
        "lastName",
        "gender",
        "cities",
        "districts",
        "address",
        "postCode",
        "birthday",
        "responseAddUser",
        "sqlAddUserId",
        "insertId",
        "toString",
        "responseAddUserId",
        "json",
        "get",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAACE,SAAS,GAAG,aAAb,CAAlB;;AACA,IAAIC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAb,C,CAGA;;AACA,IAAIC,cAAc,GAAGL,OAAO,CAACE,SAAS,GAAG,8BAAb,CAA5B,C,CAA0E;;;AAG1EC,MAAM,CAACG,IAAP,CAAY,eAAZ;AAAA,qEAA6B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B;AAEA;AACMC,YAAAA,UAJqB,GAKzB,sOALyB;AAAA;AAAA,mBAOGR,EAAE,CAACS,KAAH,CAASD,UAAT,EAAqB,CACjDF,GAAG,CAACI,IAAJ,CAASC,KADwC,EAEjDL,GAAG,CAACI,IAAJ,CAASE,QAFwC,EAGjDN,GAAG,CAACI,IAAJ,CAASG,SAHwC,EAIjDP,GAAG,CAACI,IAAJ,CAASI,QAJwC,EAKjDR,GAAG,CAACI,IAAJ,CAASC,KALwC,EAMjDL,GAAG,CAACI,IAAJ,CAASK,MANwC,EAOjDT,GAAG,CAACI,IAAJ,CAASM,MAPwC,EAQjDV,GAAG,CAACI,IAAJ,CAASO,SARwC,EASjDX,GAAG,CAACI,IAAJ,CAASQ,OATwC,EAUjDZ,GAAG,CAACI,IAAJ,CAASS,QAVwC,EAWjDb,GAAG,CAACI,IAAJ,CAASU,QAXwC,CAArB,CAPH;;AAAA;AAOrBC,YAAAA,eAPqB;AAqBrBC,YAAAA,YArBqB,GAqBN,+CArBM,EAuB3B;;AACMC,YAAAA,QAxBqB,GAwBVF,eAAe,CAAC,CAAD,CAAf,CAAmBE,QAAnB,CAA4BC,QAA5B,EAxBU,EAyB3B;AAEA;;AA3B2B;AAAA,mBA4BKxB,EAAE,CAACS,KAAH,CAASa,YAAT,EAAuB,CACrDlB,cAAc,CAAC,CAAD,EAAI,GAAJ,EAASmB,QAAT,CADuC,EAErDA,QAFqD,CAAvB,CA5BL;;AAAA;AA4BrBE,YAAAA,iBA5BqB;AAiC3BlB,YAAAA,GAAG,CAACmB,IAAJ,CAAS,CAACL,eAAD,EAAkBI,iBAAlB,CAAT;;AAjC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;AAoCA;;AACAvB,MAAM,CAACyB,GAAP,CAAW,GAAX,EAAgB,UAAUrB,GAAV,EAAeC,GAAf,EAAoBqB,IAApB,EAA0B;AACxCrB,EAAAA,GAAG,CAACsB,IAAJ,CAAS,mBAAT;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiB7B,MAAjB",
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "var express = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nvar router = express.Router();\n\n\n//引入libraries中的函式\nvar makeFormatedId = require(__dirname + \"/../libraries/makeFormatedId\"); // 製作格式化的ID\n\n\nrouter.post(\"/registration\", async (req, res) => {\n  // console.log(req.body)\n\n  //新增會員\n  const sqlAddUser =\n    \"INSERT INTO `Users` (`userAccount`, `userPassword`, `userFirstName`, `userLastName`, `userEmail`, `userGender`, `userCity`, `userDistrict`, `userAddress`, `userPostCode`, `userBirthday`) VALUES (?, ? ,?, ?, ?, ? , ?, ?, ?, ?, ?)\";\n\n  const responseAddUser = await db.query(sqlAddUser, [\n    req.body.email,\n    req.body.password,\n    req.body.firstName,\n    req.body.lastName,\n    req.body.email,\n    req.body.gender,\n    req.body.cities,\n    req.body.districts,\n    req.body.address,\n    req.body.postCode,\n    req.body.birthday\n  ]);\n\n  const sqlAddUserId = \"UPDATE `Users` SET `userId`= ? WHERE `id` = ?\";\n\n  //取得剛剛插入的id\n  const insertId = responseAddUser[0].insertId.toString();\n  // console.log(insertId);\n\n  //插入userId\n  const responseAddUserId = await db.query(sqlAddUserId, [\n    makeFormatedId(5, \"U\", insertId),\n    insertId,\n  ]);\n\n  res.json([responseAddUser, responseAddUserId]);\n});\n\n/* GET users listing. */\nrouter.get(\"/\", function (req, res, next) {\n  res.send(\"this is user page\");\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592822004761
  },
  "{\"sourceRoot\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
        "sourceFileName": "makeFormatedId.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//製作userId\nvar makeFormatedId = function makeFormatedId(digit, formatHead, formatTail) {\n  var formatedId = \"\".concat(formatHead);\n  var zeroCount = digit - formatHead.toString().length - formatTail.toString().length;\n\n  for (var i = 0; i < zeroCount; i++) {\n    formatedId += \"0\";\n  }\n\n  formatedId += formatTail;\n  return formatedId;\n};\n\nmodule.exports = makeFormatedId;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VGb3JtYXRlZElkLmpzIl0sIm5hbWVzIjpbIm1ha2VGb3JtYXRlZElkIiwiZGlnaXQiLCJmb3JtYXRIZWFkIiwiZm9ybWF0VGFpbCIsImZvcm1hdGVkSWQiLCJ6ZXJvQ291bnQiLCJ0b1N0cmluZyIsImxlbmd0aCIsImkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBTUEsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFDQyxLQUFELEVBQVFDLFVBQVIsRUFBb0JDLFVBQXBCLEVBQW1DO0FBQ3hELE1BQUlDLFVBQVUsYUFBTUYsVUFBTixDQUFkO0FBQ0EsTUFBTUcsU0FBUyxHQUNiSixLQUFLLEdBQUdDLFVBQVUsQ0FBQ0ksUUFBWCxHQUFzQkMsTUFBOUIsR0FBdUNKLFVBQVUsQ0FBQ0csUUFBWCxHQUFzQkMsTUFEL0Q7O0FBRUEsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSCxTQUFwQixFQUErQkcsQ0FBQyxFQUFoQyxFQUFvQztBQUNsQ0osSUFBQUEsVUFBVSxJQUFJLEdBQWQ7QUFDRDs7QUFDREEsRUFBQUEsVUFBVSxJQUFJRCxVQUFkO0FBQ0EsU0FBT0MsVUFBUDtBQUNELENBVEQ7O0FBV0FLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsY0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL21hYy9Eb2N1bWVudHMvVlNfY29kZS9yZWFjdC9JblNlbnNlLW5vZGUvSW5TZW5zZV9Ob2RlL2xpYnJhcmllcy8iLCJzb3VyY2VzQ29udGVudCI6WyIvL+ijveS9nHVzZXJJZFxuY29uc3QgbWFrZUZvcm1hdGVkSWQgPSAoZGlnaXQsIGZvcm1hdEhlYWQsIGZvcm1hdFRhaWwpID0+IHtcbiAgbGV0IGZvcm1hdGVkSWQgPSBgJHtmb3JtYXRIZWFkfWA7XG4gIGNvbnN0IHplcm9Db3VudCA9XG4gICAgZGlnaXQgLSBmb3JtYXRIZWFkLnRvU3RyaW5nKCkubGVuZ3RoIC0gZm9ybWF0VGFpbC50b1N0cmluZygpLmxlbmd0aDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB6ZXJvQ291bnQ7IGkrKykge1xuICAgIGZvcm1hdGVkSWQgKz0gXCIwXCI7XG4gIH1cbiAgZm9ybWF0ZWRJZCArPSBmb3JtYXRUYWlsO1xuICByZXR1cm4gZm9ybWF0ZWRJZDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbWFrZUZvcm1hdGVkSWQ7XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "makeFormatedId.js"
      ],
      "names": [
        "makeFormatedId",
        "digit",
        "formatHead",
        "formatTail",
        "formatedId",
        "zeroCount",
        "toString",
        "length",
        "i",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,UAAR,EAAoBC,UAApB,EAAmC;AACxD,MAAIC,UAAU,aAAMF,UAAN,CAAd;AACA,MAAMG,SAAS,GACbJ,KAAK,GAAGC,UAAU,CAACI,QAAX,GAAsBC,MAA9B,GAAuCJ,UAAU,CAACG,QAAX,GAAsBC,MAD/D;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCJ,IAAAA,UAAU,IAAI,GAAd;AACD;;AACDA,EAAAA,UAAU,IAAID,UAAd;AACA,SAAOC,UAAP;AACD,CATD;;AAWAK,MAAM,CAACC,OAAP,GAAiBV,cAAjB",
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
      "sourcesContent": [
        "//製作userId\nconst makeFormatedId = (digit, formatHead, formatTail) => {\n  let formatedId = `${formatHead}`;\n  const zeroCount =\n    digit - formatHead.toString().length - formatTail.toString().length;\n  for (let i = 0; i < zeroCount; i++) {\n    formatedId += \"0\";\n  }\n  formatedId += formatTail;\n  return formatedId;\n};\n\nmodule.exports = makeFormatedId;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592822001990
  },
  "{\"sourceRoot\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "class.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar moment = require('moment');\n\nvar router = express.Router(); // class list query\n\nrouter.get('/', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var sql, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sql = 'SELECT `class`.`classId`,`class`.`className`,`class`.`classImg`,`class`.`classTime` from `Class`'; // const response = await db.query(sql, [req.params.brand]);\n\n            _context.next = 3;\n            return db.query(sql);\n\n          case 3:\n            response = _context.sent;\n            response[0].forEach(function (element) {\n              element.classTime = element.classTime.toLocaleDateString();\n              element.classTime = moment(element.classTime).format('YYYY-MM-DD').split('-').join('/');\n            });\n            res.json(response[0]);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // class detail list query\n\nrouter.get('/classdetail/:classid', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var sql, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            sql = 'SELECT `ClassDescription`.`classId`,`ClassDescription`.`classContent`,`ClassDescription`.`classContent1`,`ClassDescription`.`classContent2`,`ClassDescription`.`classContent3`, `ClassDescription`.`classContent4`, `Class`.`className`,`Class`.`classImg`, `Class`.`classPrice`, `Class`.`classTime`, `Shop`.`shopName`, `Shop`.`shopAddress`, `Shop`.`shopPhone`FROM`ClassDescription` INNER JOIN`Class`ON`ClassDescription`.`classId` = `Class`.`classId` INNER JOIN`Shop` ON`ClassDescription`.`shopId` = `Shop`.`shopId` WHERE`ClassDescription`.`classId` = ?';\n            _context2.next = 3;\n            return db.query(sql, [req.params.classid]);\n\n          case 3:\n            response = _context2.sent;\n            response[0].forEach(function (element) {\n              element.classTime = element.classTime.toLocaleDateString();\n              element.classTime = moment(element.classTime).format('YYYY-MM-DD').split('-').join('/');\n            });\n            res.json(response[0]);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYXNzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiZGIiLCJfX2Rpcm5hbWUiLCJtb21lbnQiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzcWwiLCJxdWVyeSIsInJlc3BvbnNlIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJjbGFzc1RpbWUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJmb3JtYXQiLCJzcGxpdCIsImpvaW4iLCJqc29uIiwicGFyYW1zIiwiY2xhc3NpZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUNFLFNBQVMsR0FBRyxhQUFiLENBQWxCOztBQUNBLElBQUlDLE1BQU0sR0FBR0gsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBQ0EsSUFBSUksTUFBTSxHQUFHTCxPQUFPLENBQUNNLE1BQVIsRUFBYixDLENBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVg7QUFBQSxxRUFBZ0IsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUkMsWUFBQUEsR0FEUSxHQUNGLGtHQURFLEVBRWQ7O0FBRmM7QUFBQSxtQkFHU1IsRUFBRSxDQUFDUyxLQUFILENBQVNELEdBQVQsQ0FIVDs7QUFBQTtBQUdSRSxZQUFBQSxRQUhRO0FBSWRBLFlBQUFBLFFBQVEsQ0FBQyxDQUFELENBQVIsQ0FBWUMsT0FBWixDQUFvQixVQUFBQyxPQUFPLEVBQUk7QUFDN0JBLGNBQUFBLE9BQU8sQ0FBQ0MsU0FBUixHQUFvQkQsT0FBTyxDQUFDQyxTQUFSLENBQWtCQyxrQkFBbEIsRUFBcEI7QUFDQUYsY0FBQUEsT0FBTyxDQUFDQyxTQUFSLEdBQW9CWCxNQUFNLENBQUNVLE9BQU8sQ0FBQ0MsU0FBVCxDQUFOLENBQTBCRSxNQUExQixDQUFpQyxZQUFqQyxFQUErQ0MsS0FBL0MsQ0FBcUQsR0FBckQsRUFBMERDLElBQTFELENBQStELEdBQS9ELENBQXBCO0FBQ0QsYUFIRDtBQUlBVixZQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBU1IsUUFBUSxDQUFDLENBQUQsQ0FBakI7O0FBUmM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBaEI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSyxDQVdBOztBQUNBUCxNQUFNLENBQUNFLEdBQVAsQ0FBVyx1QkFBWDtBQUFBLHNFQUFvQyxrQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUM1QkMsWUFBQUEsR0FENEIsR0FDdEIscWlCQURzQjtBQUFBO0FBQUEsbUJBR1hSLEVBQUUsQ0FBQ1MsS0FBSCxDQUFTRCxHQUFULEVBQWMsQ0FBQ0YsR0FBRyxDQUFDYSxNQUFKLENBQVdDLE9BQVosQ0FBZCxDQUhXOztBQUFBO0FBRzVCVixZQUFBQSxRQUg0QjtBQUlsQ0EsWUFBQUEsUUFBUSxDQUFDLENBQUQsQ0FBUixDQUFZQyxPQUFaLENBQW9CLFVBQUFDLE9BQU8sRUFBSTtBQUM3QkEsY0FBQUEsT0FBTyxDQUFDQyxTQUFSLEdBQW9CRCxPQUFPLENBQUNDLFNBQVIsQ0FBa0JDLGtCQUFsQixFQUFwQjtBQUNBRixjQUFBQSxPQUFPLENBQUNDLFNBQVIsR0FBb0JYLE1BQU0sQ0FBQ1UsT0FBTyxDQUFDQyxTQUFULENBQU4sQ0FBMEJFLE1BQTFCLENBQWlDLFlBQWpDLEVBQStDQyxLQUEvQyxDQUFxRCxHQUFyRCxFQUEwREMsSUFBMUQsQ0FBK0QsR0FBL0QsQ0FBcEI7QUFDRCxhQUhEO0FBSUFWLFlBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTUixRQUFRLENBQUMsQ0FBRCxDQUFqQjs7QUFSa0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBcEM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFVQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL21hYy9Eb2N1bWVudHMvVlNfY29kZS9yZWFjdC9JblNlbnNlLW5vZGUvSW5TZW5zZV9Ob2RlL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKF9fZGlybmFtZSArIFwiL2RiX2Nvbm5lY3RcIik7XG52YXIgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy8gY2xhc3MgbGlzdCBxdWVyeVxucm91dGVyLmdldCgnLycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBzcWwgPSAnU0VMRUNUIGBjbGFzc2AuYGNsYXNzSWRgLGBjbGFzc2AuYGNsYXNzTmFtZWAsYGNsYXNzYC5gY2xhc3NJbWdgLGBjbGFzc2AuYGNsYXNzVGltZWAgZnJvbSBgQ2xhc3NgJ1xuICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IGRiLnF1ZXJ5KHNxbCwgW3JlcS5wYXJhbXMuYnJhbmRdKTtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYi5xdWVyeShzcWwpXG4gIHJlc3BvbnNlWzBdLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgZWxlbWVudC5jbGFzc1RpbWUgPSBlbGVtZW50LmNsYXNzVGltZS50b0xvY2FsZURhdGVTdHJpbmcoKVxuICAgIGVsZW1lbnQuY2xhc3NUaW1lID0gbW9tZW50KGVsZW1lbnQuY2xhc3NUaW1lKS5mb3JtYXQoJ1lZWVktTU0tREQnKS5zcGxpdCgnLScpLmpvaW4oJy8nKTtcbiAgfSk7XG4gIHJlcy5qc29uKHJlc3BvbnNlWzBdKVxufSlcblxuLy8gY2xhc3MgZGV0YWlsIGxpc3QgcXVlcnlcbnJvdXRlci5nZXQoJy9jbGFzc2RldGFpbC86Y2xhc3NpZCcsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBzcWwgPSAnU0VMRUNUIGBDbGFzc0Rlc2NyaXB0aW9uYC5gY2xhc3NJZGAsYENsYXNzRGVzY3JpcHRpb25gLmBjbGFzc0NvbnRlbnRgLGBDbGFzc0Rlc2NyaXB0aW9uYC5gY2xhc3NDb250ZW50MWAsYENsYXNzRGVzY3JpcHRpb25gLmBjbGFzc0NvbnRlbnQyYCxgQ2xhc3NEZXNjcmlwdGlvbmAuYGNsYXNzQ29udGVudDNgLCBgQ2xhc3NEZXNjcmlwdGlvbmAuYGNsYXNzQ29udGVudDRgLCBgQ2xhc3NgLmBjbGFzc05hbWVgLGBDbGFzc2AuYGNsYXNzSW1nYCwgYENsYXNzYC5gY2xhc3NQcmljZWAsIGBDbGFzc2AuYGNsYXNzVGltZWAsIGBTaG9wYC5gc2hvcE5hbWVgLCBgU2hvcGAuYHNob3BBZGRyZXNzYCwgYFNob3BgLmBzaG9wUGhvbmVgRlJPTWBDbGFzc0Rlc2NyaXB0aW9uYCBJTk5FUiBKT0lOYENsYXNzYE9OYENsYXNzRGVzY3JpcHRpb25gLmBjbGFzc0lkYCA9IGBDbGFzc2AuYGNsYXNzSWRgIElOTkVSIEpPSU5gU2hvcGAgT05gQ2xhc3NEZXNjcmlwdGlvbmAuYHNob3BJZGAgPSBgU2hvcGAuYHNob3BJZGAgV0hFUkVgQ2xhc3NEZXNjcmlwdGlvbmAuYGNsYXNzSWRgID0gPydcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGRiLnF1ZXJ5KHNxbCwgW3JlcS5wYXJhbXMuY2xhc3NpZF0pXG4gIHJlc3BvbnNlWzBdLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgZWxlbWVudC5jbGFzc1RpbWUgPSBlbGVtZW50LmNsYXNzVGltZS50b0xvY2FsZURhdGVTdHJpbmcoKVxuICAgIGVsZW1lbnQuY2xhc3NUaW1lID0gbW9tZW50KGVsZW1lbnQuY2xhc3NUaW1lKS5mb3JtYXQoJ1lZWVktTU0tREQnKS5zcGxpdCgnLScpLmpvaW4oJy8nKTtcbiAgfSk7XG4gIHJlcy5qc29uKHJlc3BvbnNlWzBdKVxufSlcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "class.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "__dirname",
        "moment",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "sql",
        "query",
        "response",
        "forEach",
        "element",
        "classTime",
        "toLocaleDateString",
        "format",
        "split",
        "join",
        "json",
        "params",
        "classid",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAACE,SAAS,GAAG,aAAb,CAAlB;;AACA,IAAIC,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AACA,IAAII,MAAM,GAAGL,OAAO,CAACM,MAAR,EAAb,C,CAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,GADQ,GACF,kGADE,EAEd;;AAFc;AAAA,mBAGSR,EAAE,CAACS,KAAH,CAASD,GAAT,CAHT;;AAAA;AAGRE,YAAAA,QAHQ;AAIdA,YAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYC,OAAZ,CAAoB,UAAAC,OAAO,EAAI;AAC7BA,cAAAA,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAAR,CAAkBC,kBAAlB,EAApB;AACAF,cAAAA,OAAO,CAACC,SAAR,GAAoBX,MAAM,CAACU,OAAO,CAACC,SAAT,CAAN,CAA0BE,MAA1B,CAAiC,YAAjC,EAA+CC,KAA/C,CAAqD,GAArD,EAA0DC,IAA1D,CAA+D,GAA/D,CAApB;AACD,aAHD;AAIAV,YAAAA,GAAG,CAACW,IAAJ,CAASR,QAAQ,CAAC,CAAD,CAAjB;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,K,CAWA;;AACAP,MAAM,CAACE,GAAP,CAAW,uBAAX;AAAA,sEAAoC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,YAAAA,GAD4B,GACtB,qiBADsB;AAAA;AAAA,mBAGXR,EAAE,CAACS,KAAH,CAASD,GAAT,EAAc,CAACF,GAAG,CAACa,MAAJ,CAAWC,OAAZ,CAAd,CAHW;;AAAA;AAG5BV,YAAAA,QAH4B;AAIlCA,YAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYC,OAAZ,CAAoB,UAAAC,OAAO,EAAI;AAC7BA,cAAAA,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAAR,CAAkBC,kBAAlB,EAApB;AACAF,cAAAA,OAAO,CAACC,SAAR,GAAoBX,MAAM,CAACU,OAAO,CAACC,SAAT,CAAN,CAA0BE,MAA1B,CAAiC,YAAjC,EAA+CC,KAA/C,CAAqD,GAArD,EAA0DC,IAA1D,CAA+D,GAA/D,CAApB;AACD,aAHD;AAIAV,YAAAA,GAAG,CAACW,IAAJ,CAASR,QAAQ,CAAC,CAAD,CAAjB;;AARkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;AAUAW,MAAM,CAACC,OAAP,GAAiBnB,MAAjB",
      "sourceRoot": "/Users/mac/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "var express = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nvar moment = require('moment');\nvar router = express.Router();\n\n// class list query\nrouter.get('/', async (req, res) => {\n  const sql = 'SELECT `class`.`classId`,`class`.`className`,`class`.`classImg`,`class`.`classTime` from `Class`'\n  // const response = await db.query(sql, [req.params.brand]);\n  const response = await db.query(sql)\n  response[0].forEach(element => {\n    element.classTime = element.classTime.toLocaleDateString()\n    element.classTime = moment(element.classTime).format('YYYY-MM-DD').split('-').join('/');\n  });\n  res.json(response[0])\n})\n\n// class detail list query\nrouter.get('/classdetail/:classid', async (req, res) => {\n  const sql = 'SELECT `ClassDescription`.`classId`,`ClassDescription`.`classContent`,`ClassDescription`.`classContent1`,`ClassDescription`.`classContent2`,`ClassDescription`.`classContent3`, `ClassDescription`.`classContent4`, `Class`.`className`,`Class`.`classImg`, `Class`.`classPrice`, `Class`.`classTime`, `Shop`.`shopName`, `Shop`.`shopAddress`, `Shop`.`shopPhone`FROM`ClassDescription` INNER JOIN`Class`ON`ClassDescription`.`classId` = `Class`.`classId` INNER JOIN`Shop` ON`ClassDescription`.`shopId` = `Shop`.`shopId` WHERE`ClassDescription`.`classId` = ?'\n\n  const response = await db.query(sql, [req.params.classid])\n  response[0].forEach(element => {\n    element.classTime = element.classTime.toLocaleDateString()\n    element.classTime = moment(element.classTime).format('YYYY-MM-DD').split('-').join('/');\n  });\n  res.json(response[0])\n})\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1592822004758
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require(\"express\");\n\nvar app = express();\n\nvar cors = require(\"cors\");\n\nvar session = require(\"express-session\"); //MySql\n\n\nvar MysqlStore = require(\"express-mysql-session\")(session);\n\nvar db = require(__dirname + \"/db_connect\"); // const sessionFileStore = require(\"session-file-store\"); //暫時本地端存儲\n//Top-Level middleware\n//parse application/x-www-form-urlencoded\n\n\napp.use(express.urlencoded({\n  extended: false\n})); //parse application/json\n\napp.use(express.json()); //cors\n\nvar whitelist = [undefined, \"http://localhost:3000\", \"http://localhost:3001\", \"http://localhost:3030\", \"http://localhost:3002\", \"http://localhost:3003\", \"http://127.0.0.1:5500\"];\nvar corsOptions = {\n  credentials: true,\n  origin: function origin(_origin, cb) {\n    // console.log(origin);\n    if (whitelist.indexOf(_origin) !== -1) {\n      cb(null, true);\n    } else {\n      cb(null, false);\n    }\n  }\n};\napp.use(cors(corsOptions)); //Session\n// const FileStore = sessionFileStore(session); //暫時本地端存儲\n\nvar identityKey = \"skey\";\nvar sessionStore = new MysqlStore({}, db);\napp.use(session({\n  name: identityKey,\n  secret: \"SECRET\",\n  // 用來對session id相關的cookie進行簽名\n  store: sessionStore,\n  // store: new FileStore(), // 本地儲存session（純文字文件，也可以選擇其他store，例如redis的）\n  saveUninitialized: false,\n  // 是否自動儲存未初始化的會話，建議false\n  resave: false,\n  // 是否每次都重新儲存會話，建議false\n  cookie: {\n    maxAge: 1800000 // 30分鐘 有效期，單位是毫秒\n    // domain:\"localhost\"\n    // sameSite: false, // this may need to be false is you are accessing from another React app\n    // httpOnly: false, // this must be false if you want to access the cookie\n    // secure: process.env.NODE_ENV === \"production\",\n\n  }\n})); // //設定ejs路徑(暫時用不到)\n\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", __dirname + \"/../views\"); // ================================== //\n//各功能路由\n//商品\n\napp.use(\"/itemlist\", require(__dirname + \"/itemlist\"));\napp.use(\"/itemdetail\", require(__dirname + \"/itemdetail\")); //會員\n\napp.use(\"/users\", require(__dirname + \"/users\")); //課程\n\napp.use(\"/class\", require(__dirname + \"/class\")); //訂單\n\napp.use(\"/orders\", require(__dirname + \"/orders\")); //測試Post\n\napp.post(\"/echo\", function (req, res) {\n  // console.log(req.body)\n  // console.log(db);\n  req.session.my_var = req.session.my_var || 0;\n  req.session.my_var++; // res.cookie(\"test\", \"test\");\n\n  res.json(req.session);\n}); //測試Get\n\napp.get(\"/main\", function (req, res) {\n  res.render(\"test\");\n});\napp.get(\"/\", function (req, res) {\n  var output = {\n    text: \"ok from node\",\n    session: req.session\n  };\n  res.json(output);\n}); //靜態頁面\n\napp.use(express[\"static\"](\"public\")); //404\n\napp.use(function (req, res) {\n  res.type(\"text/html\");\n  res.status(404);\n  res.send(\"<h1>404</h1><h1>Not Found</h1>\");\n}); //設定Port號\n\napp.listen(3030, function () {\n  console.log(\"Server Started\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "session",
        "MysqlStore",
        "db",
        "__dirname",
        "use",
        "urlencoded",
        "extended",
        "json",
        "whitelist",
        "undefined",
        "corsOptions",
        "credentials",
        "origin",
        "cb",
        "indexOf",
        "identityKey",
        "sessionStore",
        "name",
        "secret",
        "store",
        "saveUninitialized",
        "resave",
        "cookie",
        "maxAge",
        "set",
        "post",
        "req",
        "res",
        "my_var",
        "get",
        "render",
        "output",
        "text",
        "type",
        "status",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst app = express();\nconst cors = require(\"cors\");\nconst session = require(\"express-session\");\n\n//MySql\nconst MysqlStore = require(\"express-mysql-session\")(session);\nconst db = require(__dirname + \"/db_connect\");\n\n// const sessionFileStore = require(\"session-file-store\"); //暫時本地端存儲\n\n//Top-Level middleware\n//parse application/x-www-form-urlencoded\napp.use(express.urlencoded({ extended: false }));\n\n//parse application/json\napp.use(express.json());\n\n//cors\nconst whitelist = [\n  undefined,\n  \"http://localhost:3000\",\n  \"http://localhost:3001\",\n  \"http://localhost:3030\",\n  \"http://localhost:3002\",\n  \"http://localhost:3003\",\n  \"http://127.0.0.1:5500\",\n];\nconst corsOptions = {\n  credentials: true,\n  origin: function (origin, cb) {\n    // console.log(origin);\n    if (whitelist.indexOf(origin) !== -1) {\n      cb(null, true);\n    } else {\n      cb(null, false);\n    }\n  },\n};\napp.use(cors(corsOptions));\n\n//Session\n// const FileStore = sessionFileStore(session); //暫時本地端存儲\nconst identityKey = \"skey\";\n\nconst sessionStore = new MysqlStore({}, db);\napp.use(\n  session({\n    name: identityKey,\n    secret: \"SECRET\", // 用來對session id相關的cookie進行簽名\n    store: sessionStore,\n    // store: new FileStore(), // 本地儲存session（純文字文件，也可以選擇其他store，例如redis的）\n    saveUninitialized: false, // 是否自動儲存未初始化的會話，建議false\n    resave: false, // 是否每次都重新儲存會話，建議false\n    cookie: {\n      maxAge: 1800000, // 30分鐘 有效期，單位是毫秒\n      // domain:\"localhost\"\n      // sameSite: false, // this may need to be false is you are accessing from another React app\n      // httpOnly: false, // this must be false if you want to access the cookie\n      // secure: process.env.NODE_ENV === \"production\",\n    },\n  })\n);\n\n// //設定ejs路徑(暫時用不到)\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", __dirname + \"/../views\");\n\n// ================================== //\n//各功能路由\n//商品\napp.use(\"/itemlist\", require(__dirname + \"/itemlist\"));\napp.use(\"/itemdetail\", require(__dirname + \"/itemdetail\"));\n//會員\napp.use(\"/users\", require(__dirname + \"/users\"));\n//課程\napp.use(\"/class\", require(__dirname + \"/class\"));\n\n//訂單\napp.use(\"/orders\", require(__dirname + \"/orders\"));\n\n//測試Post\napp.post(\"/echo\", (req, res) => {\n  // console.log(req.body)\n  // console.log(db);\n  req.session.my_var = req.session.my_var || 0;\n  req.session.my_var++;\n  // res.cookie(\"test\", \"test\");\n  res.json(req.session);\n});\n\n//測試Get\napp.get(\"/main\", (req, res) => {\n  res.render(\"test\");\n});\n\napp.get(\"/\", (req, res) => {\n  const output = {\n    text: \"ok from node\",\n    session: req.session,\n  };\n  res.json(output);\n});\n\n//靜態頁面\napp.use(express.static(\"public\"));\n\n//404\napp.use((req, res) => {\n  res.type(\"text/html\");\n  res.status(404);\n  res.send(\"<h1>404</h1><h1>Not Found</h1>\");\n});\n\n//設定Port號\napp.listen(3030, function () {\n  console.log(\"Server Started\");\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593345587374
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/db_connect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "db_connect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mysql = require(\"mysql2\");\n\nvar pool = mysql.createPool({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"use2@localhost\",\n  database: \"InSense\",\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0\n});\nmodule.exports = pool.promise();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiX2Nvbm5lY3QuanMiXSwibmFtZXMiOlsibXlzcWwiLCJyZXF1aXJlIiwicG9vbCIsImNyZWF0ZVBvb2wiLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJ3YWl0Rm9yQ29ubmVjdGlvbnMiLCJjb25uZWN0aW9uTGltaXQiLCJxdWV1ZUxpbWl0IiwibW9kdWxlIiwiZXhwb3J0cyIsInByb21pc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFyQjs7QUFFQSxJQUFNQyxJQUFJLEdBQUdGLEtBQUssQ0FBQ0csVUFBTixDQUFpQjtBQUMxQkMsRUFBQUEsSUFBSSxFQUFFLFdBRG9CO0FBRTFCQyxFQUFBQSxJQUFJLEVBQUUsTUFGb0I7QUFHMUJDLEVBQUFBLFFBQVEsRUFBRSxnQkFIZ0I7QUFJMUJDLEVBQUFBLFFBQVEsRUFBRSxTQUpnQjtBQUsxQkMsRUFBQUEsa0JBQWtCLEVBQUUsSUFMTTtBQU0xQkMsRUFBQUEsZUFBZSxFQUFFLEVBTlM7QUFPMUJDLEVBQUFBLFVBQVUsRUFBRTtBQVBjLENBQWpCLENBQWI7QUFVQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVixJQUFJLENBQUNXLE9BQUwsRUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BlZ2d5L0RvY3VtZW50cy9WU19jb2RlL3JlYWN0L0luU2Vuc2Utbm9kZS9JblNlbnNlX05vZGUvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG15c3FsID0gcmVxdWlyZShcIm15c3FsMlwiKTtcblxuY29uc3QgcG9vbCA9IG15c3FsLmNyZWF0ZVBvb2woe1xuICAgIGhvc3Q6IFwibG9jYWxob3N0XCIsXG4gICAgdXNlcjogXCJyb290XCIsXG4gICAgcGFzc3dvcmQ6IFwidXNlMkBsb2NhbGhvc3RcIixcbiAgICBkYXRhYmFzZTogXCJJblNlbnNlXCIsXG4gICAgd2FpdEZvckNvbm5lY3Rpb25zOiB0cnVlLFxuICAgIGNvbm5lY3Rpb25MaW1pdDogMTAsXG4gICAgcXVldWVMaW1pdDogMCxcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvb2wucHJvbWlzZSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "db_connect.js"
      ],
      "names": [
        "mysql",
        "require",
        "pool",
        "createPool",
        "host",
        "user",
        "password",
        "database",
        "waitForConnections",
        "connectionLimit",
        "queueLimit",
        "module",
        "exports",
        "promise"
      ],
      "mappings": ";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,IAAMC,IAAI,GAAGF,KAAK,CAACG,UAAN,CAAiB;AAC1BC,EAAAA,IAAI,EAAE,WADoB;AAE1BC,EAAAA,IAAI,EAAE,MAFoB;AAG1BC,EAAAA,QAAQ,EAAE,gBAHgB;AAI1BC,EAAAA,QAAQ,EAAE,SAJgB;AAK1BC,EAAAA,kBAAkB,EAAE,IALM;AAM1BC,EAAAA,eAAe,EAAE,EANS;AAO1BC,EAAAA,UAAU,EAAE;AAPc,CAAjB,CAAb;AAUAC,MAAM,CAACC,OAAP,GAAiBV,IAAI,CAACW,OAAL,EAAjB",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const mysql = require(\"mysql2\");\n\nconst pool = mysql.createPool({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"use2@localhost\",\n    database: \"InSense\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n});\n\nmodule.exports = pool.promise();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593255892178
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemlist.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "itemlist.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar router = express.Router(); //檢查登入狀態\n\nvar checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n//商品分類\n//依品牌\n\n\nrouter.get(\"/brand/:brand?\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var getBrand, brandResponse, getItems, itemsResponse;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //   res.json(req.params.brand)\n            console.log(req.params.brand); //取得品牌資訊\n\n            getBrand = \"SELECT `Brand`.`brandId`, `Brand`.`brandName`, `Brand`.`brandBanner`,`Brand`.`brandDiscription`,`Brand`.`brandCode` FROM `Brand` WHERE `Brand`.`brandCode`= ? \";\n            _context.next = 4;\n            return db.query(getBrand, [req.params.brand]);\n\n          case 4:\n            brandResponse = _context.sent;\n            //依據品牌，選定商品\n            getItems = \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Items`.`brandId` = `Brand`.`brandId` WHERE `Brand`.`brandCode`= ?\";\n            _context.next = 8;\n            return db.query(getItems, [req.params.brand]);\n\n          case 8:\n            itemsResponse = _context.sent;\n            res.json([brandResponse[0], itemsResponse[0]]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //依分類\n\nrouter.get(\"/category/:category?\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var getCategory, categoryResponse, getItems, itemsResponse;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //   res.json(req.params.brand)\n            // console.log(req.params.brand);\n            //取得分類資訊\n            getCategory = \"SELECT `IC`.`itemCategoryId`,`IC`.`itemCategoryName`, `IC`.`itemCategoryBanner` FROM `itemCategories` AS `IC` WHERE `IC`.`itemCategoryCode`=  ? \";\n            _context2.next = 3;\n            return db.query(getCategory, [req.params.category]);\n\n          case 3:\n            categoryResponse = _context2.sent;\n            //依據分類，選定商品\n            getItems = \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`, `Items`.`itemQty`, `ItemCategories`.`itemCategoryName` FROM `Items` INNER JOIN `ItemCategories` ON `Items`.`itemCategoryId` = `ItemCategories`.`itemCategoryId` WHERE `ItemCategories`.`itemCategoryCode`= ? \";\n            _context2.next = 7;\n            return db.query(getItems, [req.params.category]);\n\n          case 7:\n            itemsResponse = _context2.sent;\n            res.json([categoryResponse[0], itemsResponse[0]]);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //取得願望清單\n\nrouter.get(\"/wishlist/:brand/:brand\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var checkLogIn, output, getItems, itemsResponse, itemList, getWishList, wishListResponse, rawData, rawWishList, wishList;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context3.sent;\n            //使用checkLogin檢查\n            //統一的output格式\n            output = {\n              success: false,\n              body: req.body,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n            };\n            console.log(req.session.userEmail, req.session.userPassword, req.session.userId, output.logInStatus); // ================================== //\n            //如果有登入\n\n            if (!output.logInStatus) {\n              _context3.next = 16;\n              break;\n            }\n\n            //取得該品牌商品清單\n            getItems = \"SELECT `Items`.`itemId`,`Items`.`itemName`,`Items`.`itemImg`,`Items`.`itemPrice`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Items`.`brandId` = `Brand`.`brandId` WHERE `Brand`.`brandCode` = ?\";\n            _context3.next = 9;\n            return db.query(getItems, [req.params.brand]);\n\n          case 9:\n            itemsResponse = _context3.sent;\n            itemList = itemsResponse[0]; //取得該使用者wishlist\n\n            getWishList = \"SELECT `itemId` FROM `WishList` WHERE `userId` = ?\";\n            _context3.next = 14;\n            return db.query(getWishList, req.session.userId);\n\n          case 14:\n            wishListResponse = _context3.sent;\n\n            //確保已經有該會員的欄位\n            if (wishListResponse[0].length) {\n              rawData = wishListResponse[0][0].itemId; //清單裡面有東西才做\n\n              if (!!rawData && rawData.length > 2) {\n                rawWishList = JSON.parse(wishListResponse[0][0].itemId); //後端先處理一次wishList\b（丟回符合該品牌的id）\n\n                wishList = rawWishList.filter(function (wish, index) {\n                  var existence = itemList.findIndex(function (item, index) {\n                    return item.itemId === wish;\n                  }); // console.log(existence);\n\n                  return existence >= 0 ? true : false;\n                }); // console.log(\"wishList\", wishList);\n\n                output.success = true;\n                output.wishList = wishList;\n              }\n            }\n\n          case 16:\n            // ================================== //\n            res.json(output);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //default\n\nrouter.get(\"/\", function (req, res) {\n  res.json(\"this is itemslist\");\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "itemlist.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "__dirname",
        "router",
        "Router",
        "checkLogin",
        "get",
        "req",
        "res",
        "console",
        "log",
        "params",
        "brand",
        "getBrand",
        "query",
        "brandResponse",
        "getItems",
        "itemsResponse",
        "json",
        "getCategory",
        "category",
        "categoryResponse",
        "checkLogIn",
        "output",
        "success",
        "body",
        "logInStatus",
        "userInfo",
        "session",
        "userEmail",
        "userPassword",
        "userId",
        "itemList",
        "getWishList",
        "wishListResponse",
        "length",
        "rawData",
        "itemId",
        "rawWishList",
        "JSON",
        "parse",
        "wishList",
        "filter",
        "wish",
        "index",
        "existence",
        "findIndex",
        "item",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAACE,SAAS,GAAG,aAAb,CAAlB;;AACA,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf,C,CAEA;;AACA,IAAMC,UAAU,GAAGL,OAAO,CAACE,SAAS,GAAG,0BAAb,CAA1B,C,CAAoE;AAEpE;AACA;;;AACAC,MAAM,CAACG,GAAP,CAAW,gBAAX;AAAA,qEAA6B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B;AAEAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAJ,CAAWC,KAAvB,EAH2B,CAK3B;;AACMC,YAAAA,QANqB,GAOzB,gKAPyB;AAAA;AAAA,mBASCZ,EAAE,CAACa,KAAH,CAASD,QAAT,EAAmB,CAACN,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAnB,CATD;;AAAA;AASrBG,YAAAA,aATqB;AAW3B;AACMC,YAAAA,QAZqB,GAazB,8MAbyB;AAAA;AAAA,mBAeCf,EAAE,CAACa,KAAH,CAASE,QAAT,EAAmB,CAACT,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAnB,CAfD;;AAAA;AAerBK,YAAAA,aAfqB;AAgB3BT,YAAAA,GAAG,CAACU,IAAJ,CAAS,CAACH,aAAa,CAAC,CAAD,CAAd,EAAmBE,aAAa,CAAC,CAAD,CAAhC,CAAT;;AAhB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA,K,CAmBA;;AACAd,MAAM,CAACG,GAAP,CAAW,sBAAX;AAAA,sEAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjC;AAEA;AAEA;AACMW,YAAAA,WAN2B,GAO/B,kJAP+B;AAAA;AAAA,mBASFlB,EAAE,CAACa,KAAH,CAASK,WAAT,EAAsB,CAACZ,GAAG,CAACI,MAAJ,CAAWS,QAAZ,CAAtB,CATE;;AAAA;AAS3BC,YAAAA,gBAT2B;AAWjC;AACML,YAAAA,QAZ2B,GAa/B,mSAb+B;AAAA;AAAA,mBAeLf,EAAE,CAACa,KAAH,CAASE,QAAT,EAAmB,CAACT,GAAG,CAACI,MAAJ,CAAWS,QAAZ,CAAnB,CAfK;;AAAA;AAe3BH,YAAAA,aAf2B;AAgBjCT,YAAAA,GAAG,CAACU,IAAJ,CAAS,CAACG,gBAAgB,CAAC,CAAD,CAAjB,EAAsBJ,aAAa,CAAC,CAAD,CAAnC,CAAT;;AAhBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA,K,CAmBA;;AACAd,MAAM,CAACG,GAAP,CAAW,yBAAX;AAAA,sEAAsC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEXH,UAAU,CAACE,GAAD,CAFC;;AAAA;AAE9Be,YAAAA,UAF8B;AAEM;AAC1C;AACMC,YAAAA,MAJ8B,GAIrB;AACbC,cAAAA,OAAO,EAAE,KADI;AAEbC,cAAAA,IAAI,EAAElB,GAAG,CAACkB,IAFG;AAGbC,cAAAA,WAAW,EAAEJ,UAAU,CAACI,WAHX;AAIbC,cAAAA,QAAQ,EAAEL,UAAU,CAACK,QAAX,GAAsBL,UAAU,CAACK,QAAjC,GAA4C;AAJzC,aAJqB;AAWpClB,YAAAA,OAAO,CAACC,GAAR,CACEH,GAAG,CAACqB,OAAJ,CAAYC,SADd,EAEEtB,GAAG,CAACqB,OAAJ,CAAYE,YAFd,EAGEvB,GAAG,CAACqB,OAAJ,CAAYG,MAHd,EAIER,MAAM,CAACG,WAJT,EAXoC,CAiBpC;AACA;;AAlBoC,iBAmBhCH,MAAM,CAACG,WAnByB;AAAA;AAAA;AAAA;;AAoBlC;AAEMV,YAAAA,QAtB4B,GAuBhC,6MAvBgC;AAAA;AAAA,mBAyBNf,EAAE,CAACa,KAAH,CAASE,QAAT,EAAmB,CAACT,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAnB,CAzBM;;AAAA;AAyB5BK,YAAAA,aAzB4B;AA0B5Be,YAAAA,QA1B4B,GA0BjBf,aAAa,CAAC,CAAD,CA1BI,EA4BlC;;AACMgB,YAAAA,WA7B4B,GA6Bd,oDA7Bc;AAAA;AAAA,mBA8BHhC,EAAE,CAACa,KAAH,CAASmB,WAAT,EAAsB1B,GAAG,CAACqB,OAAJ,CAAYG,MAAlC,CA9BG;;AAAA;AA8B5BG,YAAAA,gBA9B4B;;AAgClC;AACA,gBAAIA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBC,MAAxB,EAAgC;AACxBC,cAAAA,OADwB,GACdF,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,EAAuBG,MADT,EAG9B;;AACA,kBAAI,CAAC,CAACD,OAAF,IAAaA,OAAO,CAACD,MAAR,GAAiB,CAAlC,EAAqC;AAC7BG,gBAAAA,WAD6B,GACfC,IAAI,CAACC,KAAL,CAAWN,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,CAApB,EAAuBG,MAAlC,CADe,EAGnC;;AACMI,gBAAAA,QAJ6B,GAIlBH,WAAW,CAACI,MAAZ,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACnD,sBAAMC,SAAS,GAAGb,QAAQ,CAACc,SAAT,CAAmB,UAACC,IAAD,EAAOH,KAAP,EAAiB;AACpD,2BAAOG,IAAI,CAACV,MAAL,KAAgBM,IAAvB;AACD,mBAFiB,CAAlB,CADmD,CAInD;;AACA,yBAAOE,SAAS,IAAI,CAAb,GAAiB,IAAjB,GAAwB,KAA/B;AACD,iBANgB,CAJkB,EAWnC;;AACAtB,gBAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,gBAAAA,MAAM,CAACkB,QAAP,GAAkBA,QAAlB;AACD;AACF;;AApDiC;AAsDpC;AAEAjC,YAAAA,GAAG,CAACU,IAAJ,CAASK,MAAT;;AAxDoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA,K,CA2DA;;AACApB,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,EAAAA,GAAG,CAACU,IAAJ,CAAS,mBAAT;AACD,CAFD;AAIA8B,MAAM,CAACC,OAAP,GAAiB9C,MAAjB",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nconst router = express.Router();\n\n//檢查登入狀態\nconst checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n\n//商品分類\n//依品牌\nrouter.get(\"/brand/:brand?\", async (req, res) => {\n  //   res.json(req.params.brand)\n\n  console.log(req.params.brand);\n\n  //取得品牌資訊\n  const getBrand =\n    \"SELECT `Brand`.`brandId`, `Brand`.`brandName`, `Brand`.`brandBanner`,`Brand`.`brandDiscription`,`Brand`.`brandCode` FROM `Brand` WHERE `Brand`.`brandCode`= ? \";\n\n  const brandResponse = await db.query(getBrand, [req.params.brand]);\n\n  //依據品牌，選定商品\n  const getItems =\n    \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Items`.`brandId` = `Brand`.`brandId` WHERE `Brand`.`brandCode`= ?\";\n\n  const itemsResponse = await db.query(getItems, [req.params.brand]);\n  res.json([brandResponse[0], itemsResponse[0]]);\n});\n\n//依分類\nrouter.get(\"/category/:category?\", async (req, res) => {\n  //   res.json(req.params.brand)\n\n  // console.log(req.params.brand);\n\n  //取得分類資訊\n  const getCategory =\n    \"SELECT `IC`.`itemCategoryId`,`IC`.`itemCategoryName`, `IC`.`itemCategoryBanner` FROM `itemCategories` AS `IC` WHERE `IC`.`itemCategoryCode`=  ? \";\n\n  const categoryResponse = await db.query(getCategory, [req.params.category]);\n\n  //依據分類，選定商品\n  const getItems =\n    \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemPrice`, `Items`.`itemQty`, `ItemCategories`.`itemCategoryName` FROM `Items` INNER JOIN `ItemCategories` ON `Items`.`itemCategoryId` = `ItemCategories`.`itemCategoryId` WHERE `ItemCategories`.`itemCategoryCode`= ? \";\n\n  const itemsResponse = await db.query(getItems, [req.params.category]);\n  res.json([categoryResponse[0], itemsResponse[0]]);\n});\n\n//取得願望清單\nrouter.get(\"/wishlist/:brand/:brand\", async (req, res) => {\n  //先檢查登入狀態，記得要有req引數 eg:http://localhost:3030/itemlist/wishlist/brand/byredo\n  const checkLogIn = await checkLogin(req); //使用checkLogin檢查\n  //統一的output格式\n  const output = {\n    success: false,\n    body: req.body,\n    logInStatus: checkLogIn.logInStatus,\n    userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n  };\n\n  console.log(\n    req.session.userEmail,\n    req.session.userPassword,\n    req.session.userId,\n    output.logInStatus\n  );\n  // ================================== //\n  //如果有登入\n  if (output.logInStatus) {\n    //取得該品牌商品清單\n\n    const getItems =\n      \"SELECT `Items`.`itemId`,`Items`.`itemName`,`Items`.`itemImg`,`Items`.`itemPrice`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Items`.`brandId` = `Brand`.`brandId` WHERE `Brand`.`brandCode` = ?\";\n\n    const itemsResponse = await db.query(getItems, [req.params.brand]);\n    const itemList = itemsResponse[0];\n\n    //取得該使用者wishlist\n    const getWishList = \"SELECT `itemId` FROM `WishList` WHERE `userId` = ?\";\n    const wishListResponse = await db.query(getWishList, req.session.userId);\n\n    //確保已經有該會員的欄位\n    if (wishListResponse[0].length) {\n      const rawData = wishListResponse[0][0].itemId;\n\n      //清單裡面有東西才做\n      if (!!rawData && rawData.length > 2) {\n        const rawWishList = JSON.parse(wishListResponse[0][0].itemId);\n\n        //後端先處理一次wishList\b（丟回符合該品牌的id）\n        const wishList = rawWishList.filter((wish, index) => {\n          const existence = itemList.findIndex((item, index) => {\n            return item.itemId === wish;\n          });\n          // console.log(existence);\n          return existence >= 0 ? true : false;\n        });\n        // console.log(\"wishList\", wishList);\n        output.success = true;\n        output.wishList = wishList;\n      }\n    }\n  }\n  // ================================== //\n\n  res.json(output);\n});\n\n//default\nrouter.get(\"/\", (req, res) => {\n  res.json(\"this is itemslist\");\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593395864809
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar _require = require(\"express\"),\n    response = _require.response;\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar router = express.Router();\n\nvar moment = require(\"moment\"); //引入libraries中的函式\n\n\nvar makeFormatedId = require(__dirname + \"/../libraries/makeFormatedId\"); // 製作格式化的ID\n\n\nvar checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n//註冊會員\n\n\nrouter.post(\"/registration\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var checkLogIn, output, sqlAddUser, responseAddUser, sqlAddUserId, insertId, responseAddUserId;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context.sent;\n            //使用checkLogin檢查\n            //統一的output格式\n            output = {\n              success: false,\n              body: req.body,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n            };\n            console.log(output); //無登入時，才可註冊會員\n\n            if (output.logInStatus) {\n              _context.next = 23;\n              break;\n            }\n\n            //新增會員sql\n            sqlAddUser = \"INSERT INTO `Users` (`userAccount`, `userPassword`, `userFirstName`, `userLastName`, `userEmail`, `userGender`, `userCity`, `userDistrict`, `userAddress`, `userPostCode`, `userBirthday`) VALUES (?, ? ,?, ?, ?, ? , ?, ?, ?, ?, ?)\";\n            _context.next = 9;\n            return db.query(sqlAddUser, [req.body.userEmail, req.body.userPassword, req.body.userFirstName, req.body.userLastName, req.body.userEmail, req.body.userGender, req.body.userCity, req.body.userDistrict, req.body.userAddress, req.body.userPostCode, req.body.userBirthday]);\n\n          case 9:\n            responseAddUser = _context.sent;\n\n            if (!(responseAddUser[0].affectedRows > 0)) {\n              _context.next = 23;\n              break;\n            }\n\n            //插入userId sql\n            sqlAddUserId = \"UPDATE `Users` SET `userId`= ? WHERE `id` = ?\"; //取得剛剛插入的id\n\n            insertId = responseAddUser[0].insertId.toString(); // console.log(insertId);\n            //插入userId\n\n            _context.next = 15;\n            return db.query(sqlAddUserId, [makeFormatedId(5, \"U\", insertId), insertId]);\n\n          case 15:\n            responseAddUserId = _context.sent;\n            //更改output\n            output.insertUserId = makeFormatedId(5, \"U\", insertId);\n            output.success = true;\n            output.userInfo = _objectSpread(_objectSpread({}, req.body), {}, {\n              userMobile: \"\"\n            });\n            output.logInStatus = true; //若註冊成功，則自動生成登入session\n\n            req.session.userEmail = req.body.userEmail;\n            req.session.userPassword = req.body.userPassword;\n            req.session.userId = output.insertUserId;\n\n          case 23:\n            //回傳值\n            res.json(output);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //會員資料修改\n\nrouter.patch(\"/infomodify\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var checkLogIn, output, sqlModifyUser, responseModifyUser;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context2.sent;\n            //使用checkLogin檢查\n            //統一的output格式\n            output = {\n              success: false,\n              body: req.body,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n            };\n\n            if (!output.logInStatus) {\n              _context2.next = 10;\n              break;\n            }\n\n            sqlModifyUser = \"UPDATE `Users` SET `userAccount`= ?, `userFirstName`= ?, `userLastName` = ?,`userMobile` = ?, `userEmail` = ?, `userGender` = ?, `userCity` = ?, `userDistrict` = ?, `userAddress` = ?, `userPostCode` = ?, `userBirthday` = ? WHERE `userId` = ?\";\n            _context2.next = 8;\n            return db.query(sqlModifyUser, [req.body.userEmail, req.body.userFirstName, req.body.userLastName, req.body.userMobile, req.body.userEmail, req.body.userGender, req.body.userCity, req.body.userDistrict, req.body.userAddress, req.body.userPostCode, req.body.userBirthday, req.session.userId]);\n\n          case 8:\n            responseModifyUser = _context2.sent;\n\n            // ================================== //\n            // console.log(responseModifyUser[0].changedRows);\n            //如果有修改資料\n            if (responseModifyUser[0].changedRows) {\n              //如果有更改email，要立即更改req.session.userEmail\n              req.session.userEmail !== req.body.userEmail ? req.session.userEmail = req.body.userEmail : \"\";\n              output.success = true;\n              output.userInfo = _objectSpread(_objectSpread({}, output.userInfo), req.body);\n            } else {\n              output.message = \"NO_CHANGE\";\n            } // ================================== //\n\n\n          case 10:\n            res.json(output);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //登入login\n\nrouter.post(\"/login\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var output, sqlLogIn, responseLogIn;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // console.log(\"req.body\", req.body);\n            output = {\n              success: false,\n              logInStatus: false,\n              body: req.body\n            };\n            sqlLogIn = \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n            _context3.next = 4;\n            return db.query(sqlLogIn, [req.body.userEmail, req.body.userPassword]);\n\n          case 4:\n            responseLogIn = _context3.sent;\n\n            // console.log(\"responseLogIn\", responseLogIn[0][0]);\n            // ================================== //\n            if (responseLogIn[0].length > 0) {\n              output.success = true;\n              output.userInfo = responseLogIn[0][0];\n              output.logInStatus = true; //紀錄帳密在Session\n\n              req.session.userEmail = req.body.userEmail;\n              req.session.userPassword = req.body.userPassword;\n              req.session.userId = responseLogIn[0][0].userId;\n            } else {\n              output.errorMessage = \"No_User_Found\";\n            } // ================================== //\n            // console.log(req.session);\n\n\n            res.json(output);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //密碼更改\n\nrouter.patch(\"/changepassword\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var checkLogIn, output, sqlChangePassword, responseChangePassword;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(req.body); //先檢查登入狀態，記得要有req引數\n\n            _context4.next = 3;\n            return checkLogin(req);\n\n          case 3:\n            checkLogIn = _context4.sent;\n            //使用checkLogin檢查\n            //統一的output格式\n            output = {\n              success: false,\n              body: req.body,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n            };\n\n            if (!output.logInStatus) {\n              _context4.next = 18;\n              break;\n            }\n\n            if (!(req.body.oldPassword === output.userInfo.userPassword)) {\n              _context4.next = 16;\n              break;\n            }\n\n            console.log(\"password correct\");\n            sqlChangePassword = \"UPDATE `Users` SET `userPassword` = ? WHERE `userId` = ? \";\n            _context4.next = 11;\n            return db.query(sqlChangePassword, [req.body.newPassword, req.session.userId]);\n\n          case 11:\n            responseChangePassword = _context4.sent;\n            console.log(responseChangePassword[0]);\n\n            if (responseChangePassword[0].affectedRows > 0) {\n              output.success = true;\n              output.userInfo = _objectSpread(_objectSpread({}, output.userInfo), {}, {\n                userPassword: req.body.userPassword\n              }); //更改session密碼\n\n              req.session.userPassword = req.body.newPassword;\n            } else {\n              output.errorMessage = \"NO_CHANGE\";\n            }\n\n            _context4.next = 18;\n            break;\n\n          case 16:\n            console.log(\"password incorrect\");\n            output.errorMessage = \"OLD_PASSWORD_INCORRECT\";\n\n          case 18:\n            res.json(output);\n\n          case 19:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //登入login\n\nrouter.post(\"/login\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var output, sqlLogIn, responseLogIn;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            // console.log(\"req.body\", req.body);\n            output = {\n              success: false,\n              logInStatus: false,\n              body: req.body\n            };\n            sqlLogIn = \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n            _context5.next = 4;\n            return db.query(sqlLogIn, [req.body.userEmail, req.body.userPassword]);\n\n          case 4:\n            responseLogIn = _context5.sent;\n\n            // console.log(\"responseLogIn\", responseLogIn[0][0]);\n            // ================================== //\n            if (responseLogIn[0].length > 0) {\n              output.success = true;\n              output.userInfo = responseLogIn[0][0];\n              output.logInStatus = true; //紀錄帳密在Session\n\n              req.session.userEmail = req.body.userEmail;\n              req.session.userPassword = req.body.userPassword;\n              req.session.userId = responseLogIn[0][0].userId;\n            } else {\n              output.errorMessage = \"No_User_Found\";\n            } // ================================== //\n            // console.log(req.session);\n\n\n            res.json(output);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //登出logout\n\nrouter.post(\"/logout\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var output;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            // console.log(\"req.body\", req.body);\n            delete req.session.userEmail;\n            delete req.session.userPassword;\n            delete req.session.userId;\n            output = {\n              success: true,\n              logOutStatus: req.session.userId ? false : true\n            };\n            res.json(output);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}()); //初始檢查有無登入\n\nrouter.post(\"/checklogin\", /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var output, sqlLogIn, responseLogIn;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            output = {\n              logInStatus: false\n            };\n\n            if (!(req.session.userEmail && req.session.userPassword)) {\n              _context7.next = 7;\n              break;\n            }\n\n            sqlLogIn = \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n            _context7.next = 5;\n            return db.query(sqlLogIn, [req.session.userEmail, req.session.userPassword]);\n\n          case 5:\n            responseLogIn = _context7.sent;\n\n            if (responseLogIn[0].length > 0) {\n              output.userInfo = responseLogIn[0][0];\n              output.logInStatus = true;\n            }\n\n          case 7:\n            res.json(output);\n\n          case 8:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}()); // GET user class list\n\nrouter.get(\"/classlist\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var date, userId, sql, data;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            date = new Date().toLocaleDateString();\n            userId = req.session.userId;\n            sql = \"SELECT `Book`.`bookId`,`Book`.`bookTime`,`Book`.`bookQty`,`Book`.`bookStatus`,`Class`.`classTime`,`Class`.`className`,`Class`.`classPrice`,`ClassCategory`.`classCategoryName` FROM `Book` INNER JOIN `Class` ON `Book`.`classId` = `Class`.`classId` INNER JOIN `ClassCategory` ON `Class`.`classCategoryId` = `ClassCategory`.`classCategoryId` WHERE `Book`.`userId` = ? AND `Class`.`classTime` > ?\";\n            _context8.next = 5;\n            return db.query(sql, [userId, date]);\n\n          case 5:\n            data = _context8.sent;\n            data[0].forEach(function (element) {\n              element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n            });\n            res.json(data[0]);\n\n          case 8:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}()); // PATCH book status\n\nrouter.patch('/classList', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var output, bookId, sql, data;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            output = {\n              success: false\n            }; // 取得傳來的預約編號\n\n            bookId = req.body.bookId;\n            sql = 'UPDATE `Book` SET `Book`.`bookStatus` = \"取消預約\" WHERE `Book`.`bookId` = ? ';\n            _context9.next = 5;\n            return db.query(sql, [bookId]);\n\n          case 5:\n            data = _context9.sent;\n\n            // 如果有更新則output增加success及data屬性\n            if (data[0].affectedRows > 0) {\n              output.success = true;\n              output.data = data[0];\n            }\n\n            res.json(output);\n\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}()); // GET user all class list\n\nrouter.get(\"/allclasslist\", /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var userId, sql, data;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            userId = req.session.userId;\n            sql = \"SELECT `Book`.`bookTime`,`Book`.`bookQty`,`Class`.`classTime`,`Class`.`className`,`Class`.`classPrice`,`ClassCategory`.`classCategoryName` FROM `Book` INNER JOIN `Class` ON `Book`.`classId` = `Class`.`classId` INNER JOIN `ClassCategory` ON `Class`.`classCategoryId` = `ClassCategory`.`classCategoryId` WHERE `Book`.`userId` = ? \";\n            _context10.next = 4;\n            return db.query(sql, [userId]);\n\n          case 4:\n            data = _context10.sent;\n            data[0].forEach(function (element) {\n              element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n            });\n            res.json(data[0]);\n\n          case 7:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}());\n/* GET users listing. */\n\nrouter.get(\"/\", function (req, res, next) {\n  res.send(\"this is user page\");\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicmVzcG9uc2UiLCJkYiIsIl9fZGlybmFtZSIsInJvdXRlciIsIlJvdXRlciIsIm1vbWVudCIsIm1ha2VGb3JtYXRlZElkIiwiY2hlY2tMb2dpbiIsInBvc3QiLCJyZXEiLCJyZXMiLCJjaGVja0xvZ0luIiwib3V0cHV0Iiwic3VjY2VzcyIsImJvZHkiLCJsb2dJblN0YXR1cyIsInVzZXJJbmZvIiwiY29uc29sZSIsImxvZyIsInNxbEFkZFVzZXIiLCJxdWVyeSIsInVzZXJFbWFpbCIsInVzZXJQYXNzd29yZCIsInVzZXJGaXJzdE5hbWUiLCJ1c2VyTGFzdE5hbWUiLCJ1c2VyR2VuZGVyIiwidXNlckNpdHkiLCJ1c2VyRGlzdHJpY3QiLCJ1c2VyQWRkcmVzcyIsInVzZXJQb3N0Q29kZSIsInVzZXJCaXJ0aGRheSIsInJlc3BvbnNlQWRkVXNlciIsImFmZmVjdGVkUm93cyIsInNxbEFkZFVzZXJJZCIsImluc2VydElkIiwidG9TdHJpbmciLCJyZXNwb25zZUFkZFVzZXJJZCIsImluc2VydFVzZXJJZCIsInVzZXJNb2JpbGUiLCJzZXNzaW9uIiwidXNlcklkIiwianNvbiIsInBhdGNoIiwic3FsTW9kaWZ5VXNlciIsInJlc3BvbnNlTW9kaWZ5VXNlciIsImNoYW5nZWRSb3dzIiwibWVzc2FnZSIsInNxbExvZ0luIiwicmVzcG9uc2VMb2dJbiIsImxlbmd0aCIsImVycm9yTWVzc2FnZSIsIm9sZFBhc3N3b3JkIiwic3FsQ2hhbmdlUGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsInJlc3BvbnNlQ2hhbmdlUGFzc3dvcmQiLCJsb2dPdXRTdGF0dXMiLCJnZXQiLCJkYXRlIiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInNxbCIsImRhdGEiLCJmb3JFYWNoIiwiZWxlbWVudCIsImNsYXNzVGltZSIsImZvcm1hdCIsImJvb2tJZCIsIm5leHQiLCJzZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJd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UyxtQkFBVDtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkUsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BlZ2d5L0RvY3VtZW50cy9WU19jb2RlL3JlYWN0L0luU2Vuc2Utbm9kZS9JblNlbnNlX05vZGUvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHsgcmVzcG9uc2UgfSA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKF9fZGlybmFtZSArIFwiL2RiX2Nvbm5lY3RcIik7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgbW9tZW50ID0gcmVxdWlyZShcIm1vbWVudFwiKTtcblxuLy/lvJXlhaVsaWJyYXJpZXPkuK3nmoTlh73lvI9cbmNvbnN0IG1ha2VGb3JtYXRlZElkID0gcmVxdWlyZShfX2Rpcm5hbWUgKyBcIi8uLi9saWJyYXJpZXMvbWFrZUZvcm1hdGVkSWRcIik7IC8vIOijveS9nOagvOW8j+WMlueahElEXG5jb25zdCBjaGVja0xvZ2luID0gcmVxdWlyZShfX2Rpcm5hbWUgKyBcIi8uLi9saWJyYXJpZXMvY2hlY2tMb2dpblwiKTsgLy8g5qqi5p+lbG9naW4g54uA5oWLXG5cbi8v6Ki75YaK5pyD5ZOhXG5yb3V0ZXIucG9zdChcIi9yZWdpc3RyYXRpb25cIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIC8vIGNvbnNvbGUubG9nKHJlcS5ib2R5KVxuXG4gIC8v5YWI5qqi5p+l55m75YWl54uA5oWL77yM6KiY5b6X6KaB5pyJcmVx5byV5pW4XG4gIGNvbnN0IGNoZWNrTG9nSW4gPSBhd2FpdCBjaGVja0xvZ2luKHJlcSk7IC8v5L2/55SoY2hlY2tMb2dpbuaqouafpVxuICAvL+e1seS4gOeahG91dHB1dOagvOW8j1xuICBjb25zdCBvdXRwdXQgPSB7XG4gICAgc3VjY2VzczogZmFsc2UsXG4gICAgYm9keTogcmVxLmJvZHksXG4gICAgbG9nSW5TdGF0dXM6IGNoZWNrTG9nSW4ubG9nSW5TdGF0dXMsXG4gICAgdXNlckluZm86IGNoZWNrTG9nSW4udXNlckluZm8gPyBjaGVja0xvZ0luLnVzZXJJbmZvIDogbnVsbCxcbiAgfTtcblxuICBjb25zb2xlLmxvZyhvdXRwdXQpO1xuXG4gIC8v54Sh55m75YWl5pmC77yM5omN5Y+v6Ki75YaK5pyD5ZOhXG4gIGlmICghb3V0cHV0LmxvZ0luU3RhdHVzKSB7XG4gICAgLy/mlrDlop7mnIPlk6FzcWxcbiAgICBjb25zdCBzcWxBZGRVc2VyID1cbiAgICAgIFwiSU5TRVJUIElOVE8gYFVzZXJzYCAoYHVzZXJBY2NvdW50YCwgYHVzZXJQYXNzd29yZGAsIGB1c2VyRmlyc3ROYW1lYCwgYHVzZXJMYXN0TmFtZWAsIGB1c2VyRW1haWxgLCBgdXNlckdlbmRlcmAsIGB1c2VyQ2l0eWAsIGB1c2VyRGlzdHJpY3RgLCBgdXNlckFkZHJlc3NgLCBgdXNlclBvc3RDb2RlYCwgYHVzZXJCaXJ0aGRheWApIFZBTFVFUyAoPywgPyAsPywgPywgPywgPyAsID8sID8sID8sID8sID8pXCI7XG5cbiAgICBjb25zdCByZXNwb25zZUFkZFVzZXIgPSBhd2FpdCBkYi5xdWVyeShzcWxBZGRVc2VyLCBbXG4gICAgICByZXEuYm9keS51c2VyRW1haWwsXG4gICAgICByZXEuYm9keS51c2VyUGFzc3dvcmQsXG4gICAgICByZXEuYm9keS51c2VyRmlyc3ROYW1lLFxuICAgICAgcmVxLmJvZHkudXNlckxhc3ROYW1lLFxuICAgICAgcmVxLmJvZHkudXNlckVtYWlsLFxuICAgICAgcmVxLmJvZHkudXNlckdlbmRlcixcbiAgICAgIHJlcS5ib2R5LnVzZXJDaXR5LFxuICAgICAgcmVxLmJvZHkudXNlckRpc3RyaWN0LFxuICAgICAgcmVxLmJvZHkudXNlckFkZHJlc3MsXG4gICAgICByZXEuYm9keS51c2VyUG9zdENvZGUsXG4gICAgICByZXEuYm9keS51c2VyQmlydGhkYXksXG4gICAgXSk7XG5cbiAgICAvLyBjb25zb2xlLmxvZyhcImFmZmVjdGVkUm93c1wiLCByZXNwb25zZUFkZFVzZXJbMF0uYWZmZWN0ZWRSb3dzKTtcblxuICAgIGlmIChyZXNwb25zZUFkZFVzZXJbMF0uYWZmZWN0ZWRSb3dzID4gMCkge1xuICAgICAgLy/mj5LlhaV1c2VySWQgc3FsXG4gICAgICBjb25zdCBzcWxBZGRVc2VySWQgPSBcIlVQREFURSBgVXNlcnNgIFNFVCBgdXNlcklkYD0gPyBXSEVSRSBgaWRgID0gP1wiO1xuXG4gICAgICAvL+WPluW+l+WJm+WJm+aPkuWFpeeahGlkXG4gICAgICBjb25zdCBpbnNlcnRJZCA9IHJlc3BvbnNlQWRkVXNlclswXS5pbnNlcnRJZC50b1N0cmluZygpO1xuICAgICAgLy8gY29uc29sZS5sb2coaW5zZXJ0SWQpO1xuXG4gICAgICAvL+aPkuWFpXVzZXJJZFxuICAgICAgY29uc3QgcmVzcG9uc2VBZGRVc2VySWQgPSBhd2FpdCBkYi5xdWVyeShzcWxBZGRVc2VySWQsIFtcbiAgICAgICAgbWFrZUZvcm1hdGVkSWQoNSwgXCJVXCIsIGluc2VydElkKSxcbiAgICAgICAgaW5zZXJ0SWQsXG4gICAgICBdKTtcblxuICAgICAgLy/mm7TmlLlvdXRwdXRcbiAgICAgIG91dHB1dC5pbnNlcnRVc2VySWQgPSBtYWtlRm9ybWF0ZWRJZCg1LCBcIlVcIiwgaW5zZXJ0SWQpO1xuICAgICAgb3V0cHV0LnN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgb3V0cHV0LnVzZXJJbmZvID0geyAuLi5yZXEuYm9keSwgdXNlck1vYmlsZTogXCJcIiB9O1xuICAgICAgb3V0cHV0LmxvZ0luU3RhdHVzID0gdHJ1ZTtcblxuICAgICAgLy/oi6XoqLvlhormiJDlip/vvIzliYfoh6rli5XnlJ/miJDnmbvlhaVzZXNzaW9uXG4gICAgICByZXEuc2Vzc2lvbi51c2VyRW1haWwgPSByZXEuYm9keS51c2VyRW1haWw7XG4gICAgICByZXEuc2Vzc2lvbi51c2VyUGFzc3dvcmQgPSByZXEuYm9keS51c2VyUGFzc3dvcmQ7XG4gICAgICByZXEuc2Vzc2lvbi51c2VySWQgPSBvdXRwdXQuaW5zZXJ0VXNlcklkO1xuICAgIH1cbiAgfVxuXG4gIC8v5Zue5YKz5YC8XG4gIHJlcy5qc29uKG91dHB1dCk7XG59KTtcblxuLy/mnIPlk6Hos4fmlpnkv67mlLlcbnJvdXRlci5wYXRjaChcIi9pbmZvbW9kaWZ5XCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAvL+WFiOaqouafpeeZu+WFpeeLgOaFi++8jOiomOW+l+imgeaciXJlceW8leaVuFxuICBjb25zdCBjaGVja0xvZ0luID0gYXdhaXQgY2hlY2tMb2dpbihyZXEpOyAvL+S9v+eUqGNoZWNrTG9naW7mqqLmn6VcbiAgLy/ntbHkuIDnmoRvdXRwdXTmoLzlvI9cbiAgY29uc3Qgb3V0cHV0ID0ge1xuICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgIGJvZHk6IHJlcS5ib2R5LFxuICAgIGxvZ0luU3RhdHVzOiBjaGVja0xvZ0luLmxvZ0luU3RhdHVzLFxuICAgIHVzZXJJbmZvOiBjaGVja0xvZ0luLnVzZXJJbmZvID8gY2hlY2tMb2dJbi51c2VySW5mbyA6IG51bGwsXG4gIH07XG5cbiAgaWYgKG91dHB1dC5sb2dJblN0YXR1cykge1xuICAgIGNvbnN0IHNxbE1vZGlmeVVzZXIgPVxuICAgICAgXCJVUERBVEUgYFVzZXJzYCBTRVQgYHVzZXJBY2NvdW50YD0gPywgYHVzZXJGaXJzdE5hbWVgPSA/LCBgdXNlckxhc3ROYW1lYCA9ID8sYHVzZXJNb2JpbGVgID0gPywgYHVzZXJFbWFpbGAgPSA/LCBgdXNlckdlbmRlcmAgPSA/LCBgdXNlckNpdHlgID0gPywgYHVzZXJEaXN0cmljdGAgPSA/LCBgdXNlckFkZHJlc3NgID0gPywgYHVzZXJQb3N0Q29kZWAgPSA/LCBgdXNlckJpcnRoZGF5YCA9ID8gV0hFUkUgYHVzZXJJZGAgPSA/XCI7XG4gICAgY29uc3QgcmVzcG9uc2VNb2RpZnlVc2VyID0gYXdhaXQgZGIucXVlcnkoc3FsTW9kaWZ5VXNlciwgW1xuICAgICAgcmVxLmJvZHkudXNlckVtYWlsLFxuICAgICAgcmVxLmJvZHkudXNlckZpcnN0TmFtZSxcbiAgICAgIHJlcS5ib2R5LnVzZXJMYXN0TmFtZSxcbiAgICAgIHJlcS5ib2R5LnVzZXJNb2JpbGUsXG4gICAgICByZXEuYm9keS51c2VyRW1haWwsXG4gICAgICByZXEuYm9keS51c2VyR2VuZGVyLFxuICAgICAgcmVxLmJvZHkudXNlckNpdHksXG4gICAgICByZXEuYm9keS51c2VyRGlzdHJpY3QsXG4gICAgICByZXEuYm9keS51c2VyQWRkcmVzcyxcbiAgICAgIHJlcS5ib2R5LnVzZXJQb3N0Q29kZSxcbiAgICAgIHJlcS5ib2R5LnVzZXJCaXJ0aGRheSxcbiAgICAgIHJlcS5zZXNzaW9uLnVzZXJJZCxcbiAgICBdKTtcblxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gLy9cbiAgICAvLyBjb25zb2xlLmxvZyhyZXNwb25zZU1vZGlmeVVzZXJbMF0uY2hhbmdlZFJvd3MpO1xuICAgIC8v5aaC5p6c5pyJ5L+u5pS56LOH5paZXG4gICAgaWYgKHJlc3BvbnNlTW9kaWZ5VXNlclswXS5jaGFuZ2VkUm93cykge1xuICAgICAgLy/lpoLmnpzmnInmm7TmlLllbWFpbO+8jOimgeeri+WNs+abtOaUuXJlcS5zZXNzaW9uLnVzZXJFbWFpbFxuICAgICAgcmVxLnNlc3Npb24udXNlckVtYWlsICE9PSByZXEuYm9keS51c2VyRW1haWxcbiAgICAgICAgPyAocmVxLnNlc3Npb24udXNlckVtYWlsID0gcmVxLmJvZHkudXNlckVtYWlsKVxuICAgICAgICA6IFwiXCI7XG5cbiAgICAgIG91dHB1dC5zdWNjZXNzID0gdHJ1ZTtcbiAgICAgIG91dHB1dC51c2VySW5mbyA9IHtcbiAgICAgICAgLi4ub3V0cHV0LnVzZXJJbmZvLFxuICAgICAgICAuLi5yZXEuYm9keSxcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dHB1dC5tZXNzYWdlID0gXCJOT19DSEFOR0VcIjtcbiAgICB9XG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAvL1xuICB9XG5cbiAgcmVzLmpzb24ob3V0cHV0KTtcbn0pO1xuXG4vL+eZu+WFpWxvZ2luXG5yb3V0ZXIucG9zdChcIi9sb2dpblwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgLy8gY29uc29sZS5sb2coXCJyZXEuYm9keVwiLCByZXEuYm9keSk7XG4gIGNvbnN0IG91dHB1dCA9IHtcbiAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICBsb2dJblN0YXR1czogZmFsc2UsXG4gICAgYm9keTogcmVxLmJvZHksXG4gIH07XG5cbiAgY29uc3Qgc3FsTG9nSW4gPVxuICAgIFwiU0VMRUNUICogRlJPTSBVc2VycyBXSEVSRSBgdXNlckFjY291bnRgID0gPyBBTkQgYHVzZXJQYXNzd29yZGAgPSA/XCI7XG5cbiAgY29uc3QgcmVzcG9uc2VMb2dJbiA9IGF3YWl0IGRiLnF1ZXJ5KHNxbExvZ0luLCBbXG4gICAgcmVxLmJvZHkudXNlckVtYWlsLFxuICAgIHJlcS5ib2R5LnVzZXJQYXNzd29yZCxcbiAgXSk7XG5cbiAgLy8gY29uc29sZS5sb2coXCJyZXNwb25zZUxvZ0luXCIsIHJlc3BvbnNlTG9nSW5bMF1bMF0pO1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IC8vXG5cbiAgaWYgKHJlc3BvbnNlTG9nSW5bMF0ubGVuZ3RoID4gMCkge1xuICAgIG91dHB1dC5zdWNjZXNzID0gdHJ1ZTtcbiAgICBvdXRwdXQudXNlckluZm8gPSByZXNwb25zZUxvZ0luWzBdWzBdO1xuICAgIG91dHB1dC5sb2dJblN0YXR1cyA9IHRydWU7XG5cbiAgICAvL+e0gOmMhOW4s+WvhuWcqFNlc3Npb25cbiAgICByZXEuc2Vzc2lvbi51c2VyRW1haWwgPSByZXEuYm9keS51c2VyRW1haWw7XG4gICAgcmVxLnNlc3Npb24udXNlclBhc3N3b3JkID0gcmVxLmJvZHkudXNlclBhc3N3b3JkO1xuICAgIHJlcS5zZXNzaW9uLnVzZXJJZCA9IHJlc3BvbnNlTG9nSW5bMF1bMF0udXNlcklkO1xuICB9IGVsc2Uge1xuICAgIG91dHB1dC5lcnJvck1lc3NhZ2UgPSBcIk5vX1VzZXJfRm91bmRcIjtcbiAgfVxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IC8vXG5cbiAgLy8gY29uc29sZS5sb2cocmVxLnNlc3Npb24pO1xuICByZXMuanNvbihvdXRwdXQpO1xufSk7XG5cbi8v5a+G56K85pu05pS5XG5yb3V0ZXIucGF0Y2goXCIvY2hhbmdlcGFzc3dvcmRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKHJlcS5ib2R5KTtcblxuICAvL+WFiOaqouafpeeZu+WFpeeLgOaFi++8jOiomOW+l+imgeaciXJlceW8leaVuFxuICBjb25zdCBjaGVja0xvZ0luID0gYXdhaXQgY2hlY2tMb2dpbihyZXEpOyAvL+S9v+eUqGNoZWNrTG9naW7mqqLmn6VcbiAgLy/ntbHkuIDnmoRvdXRwdXTmoLzlvI9cbiAgY29uc3Qgb3V0cHV0ID0ge1xuICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgIGJvZHk6IHJlcS5ib2R5LFxuICAgIGxvZ0luU3RhdHVzOiBjaGVja0xvZ0luLmxvZ0luU3RhdHVzLFxuICAgIHVzZXJJbmZvOiBjaGVja0xvZ0luLnVzZXJJbmZvID8gY2hlY2tMb2dJbi51c2VySW5mbyA6IG51bGwsXG4gIH07XG5cbiAgaWYgKG91dHB1dC5sb2dJblN0YXR1cykge1xuICAgIC8v5Yik5pa36IiK5a+G56K85piv5ZCm5q2j56K6XG4gICAgaWYgKHJlcS5ib2R5Lm9sZFBhc3N3b3JkID09PSBvdXRwdXQudXNlckluZm8udXNlclBhc3N3b3JkKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInBhc3N3b3JkIGNvcnJlY3RcIik7XG4gICAgICBjb25zdCBzcWxDaGFuZ2VQYXNzd29yZCA9XG4gICAgICAgIFwiVVBEQVRFIGBVc2Vyc2AgU0VUIGB1c2VyUGFzc3dvcmRgID0gPyBXSEVSRSBgdXNlcklkYCA9ID8gXCI7XG4gICAgICBjb25zdCByZXNwb25zZUNoYW5nZVBhc3N3b3JkID0gYXdhaXQgZGIucXVlcnkoc3FsQ2hhbmdlUGFzc3dvcmQsIFtcbiAgICAgICAgcmVxLmJvZHkubmV3UGFzc3dvcmQsXG4gICAgICAgIHJlcS5zZXNzaW9uLnVzZXJJZCxcbiAgICAgIF0pO1xuXG4gICAgICBjb25zb2xlLmxvZyhyZXNwb25zZUNoYW5nZVBhc3N3b3JkWzBdKTtcbiAgICAgIGlmIChyZXNwb25zZUNoYW5nZVBhc3N3b3JkWzBdLmFmZmVjdGVkUm93cyA+IDApIHtcbiAgICAgICAgb3V0cHV0LnN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICBvdXRwdXQudXNlckluZm8gPSB7XG4gICAgICAgICAgLi4ub3V0cHV0LnVzZXJJbmZvLFxuICAgICAgICAgIHVzZXJQYXNzd29yZDogcmVxLmJvZHkudXNlclBhc3N3b3JkLFxuICAgICAgICB9O1xuICAgICAgICAvL+abtOaUuXNlc3Npb27lr4bnorxcbiAgICAgICAgcmVxLnNlc3Npb24udXNlclBhc3N3b3JkID0gcmVxLmJvZHkubmV3UGFzc3dvcmQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXRwdXQuZXJyb3JNZXNzYWdlID0gXCJOT19DSEFOR0VcIjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coXCJwYXNzd29yZCBpbmNvcnJlY3RcIik7XG4gICAgICBvdXRwdXQuZXJyb3JNZXNzYWdlID0gXCJPTERfUEFTU1dPUkRfSU5DT1JSRUNUXCI7XG4gICAgfVxuICB9XG5cbiAgcmVzLmpzb24ob3V0cHV0KTtcbn0pO1xuXG4vL+eZu+WFpWxvZ2luXG5yb3V0ZXIucG9zdChcIi9sb2dpblwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgLy8gY29uc29sZS5sb2coXCJyZXEuYm9keVwiLCByZXEuYm9keSk7XG4gIGNvbnN0IG91dHB1dCA9IHtcbiAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICBsb2dJblN0YXR1czogZmFsc2UsXG4gICAgYm9keTogcmVxLmJvZHksXG4gIH07XG5cbiAgY29uc3Qgc3FsTG9nSW4gPVxuICAgIFwiU0VMRUNUICogRlJPTSBVc2VycyBXSEVSRSBgdXNlckFjY291bnRgID0gPyBBTkQgYHVzZXJQYXNzd29yZGAgPSA/XCI7XG5cbiAgY29uc3QgcmVzcG9uc2VMb2dJbiA9IGF3YWl0IGRiLnF1ZXJ5KHNxbExvZ0luLCBbXG4gICAgcmVxLmJvZHkudXNlckVtYWlsLFxuICAgIHJlcS5ib2R5LnVzZXJQYXNzd29yZCxcbiAgXSk7XG5cbiAgLy8gY29uc29sZS5sb2coXCJyZXNwb25zZUxvZ0luXCIsIHJlc3BvbnNlTG9nSW5bMF1bMF0pO1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IC8vXG5cbiAgaWYgKHJlc3BvbnNlTG9nSW5bMF0ubGVuZ3RoID4gMCkge1xuICAgIG91dHB1dC5zdWNjZXNzID0gdHJ1ZTtcbiAgICBvdXRwdXQudXNlckluZm8gPSByZXNwb25zZUxvZ0luWzBdWzBdO1xuICAgIG91dHB1dC5sb2dJblN0YXR1cyA9IHRydWU7XG5cbiAgICAvL+e0gOmMhOW4s+WvhuWcqFNlc3Npb25cbiAgICByZXEuc2Vzc2lvbi51c2VyRW1haWwgPSByZXEuYm9keS51c2VyRW1haWw7XG4gICAgcmVxLnNlc3Npb24udXNlclBhc3N3b3JkID0gcmVxLmJvZHkudXNlclBhc3N3b3JkO1xuICAgIHJlcS5zZXNzaW9uLnVzZXJJZCA9IHJlc3BvbnNlTG9nSW5bMF1bMF0udXNlcklkO1xuICB9IGVsc2Uge1xuICAgIG91dHB1dC5lcnJvck1lc3NhZ2UgPSBcIk5vX1VzZXJfRm91bmRcIjtcbiAgfVxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IC8vXG5cbiAgLy8gY29uc29sZS5sb2cocmVxLnNlc3Npb24pO1xuXG4gIHJlcy5qc29uKG91dHB1dCk7XG59KTtcblxuLy/nmbvlh7psb2dvdXRcbnJvdXRlci5wb3N0KFwiL2xvZ291dFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgLy8gY29uc29sZS5sb2coXCJyZXEuYm9keVwiLCByZXEuYm9keSk7XG4gIGRlbGV0ZSByZXEuc2Vzc2lvbi51c2VyRW1haWw7XG4gIGRlbGV0ZSByZXEuc2Vzc2lvbi51c2VyUGFzc3dvcmQ7XG4gIGRlbGV0ZSByZXEuc2Vzc2lvbi51c2VySWQ7XG5cbiAgY29uc3Qgb3V0cHV0ID0ge1xuICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgbG9nT3V0U3RhdHVzOiByZXEuc2Vzc2lvbi51c2VySWQgPyBmYWxzZSA6IHRydWUsXG4gIH07XG5cbiAgcmVzLmpzb24ob3V0cHV0KTtcbn0pO1xuXG4vL+WIneWni+aqouafpeacieeEoeeZu+WFpVxucm91dGVyLnBvc3QoXCIvY2hlY2tsb2dpblwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qgb3V0cHV0ID0ge1xuICAgIGxvZ0luU3RhdHVzOiBmYWxzZSxcbiAgfTtcblxuICBpZiAocmVxLnNlc3Npb24udXNlckVtYWlsICYmIHJlcS5zZXNzaW9uLnVzZXJQYXNzd29yZCkge1xuICAgIGNvbnN0IHNxbExvZ0luID1cbiAgICAgIFwiU0VMRUNUICogRlJPTSBVc2VycyBXSEVSRSBgdXNlckFjY291bnRgID0gPyBBTkQgYHVzZXJQYXNzd29yZGAgPSA/XCI7XG5cbiAgICBjb25zdCByZXNwb25zZUxvZ0luID0gYXdhaXQgZGIucXVlcnkoc3FsTG9nSW4sIFtcbiAgICAgIHJlcS5zZXNzaW9uLnVzZXJFbWFpbCxcbiAgICAgIHJlcS5zZXNzaW9uLnVzZXJQYXNzd29yZCxcbiAgICBdKTtcblxuICAgIGlmIChyZXNwb25zZUxvZ0luWzBdLmxlbmd0aCA+IDApIHtcbiAgICAgIG91dHB1dC51c2VySW5mbyA9IHJlc3BvbnNlTG9nSW5bMF1bMF07XG4gICAgICBvdXRwdXQubG9nSW5TdGF0dXMgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJlcy5qc29uKG91dHB1dCk7XG59KTtcblxuLy8gR0VUIHVzZXIgY2xhc3MgbGlzdFxucm91dGVyLmdldChcIi9jbGFzc2xpc3RcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygpO1xuICBjb25zdCB1c2VySWQgPSByZXEuc2Vzc2lvbi51c2VySWQ7XG4gIGNvbnN0IHNxbCA9IFwiU0VMRUNUIGBCb29rYC5gYm9va0lkYCxgQm9va2AuYGJvb2tUaW1lYCxgQm9va2AuYGJvb2tRdHlgLGBCb29rYC5gYm9va1N0YXR1c2AsYENsYXNzYC5gY2xhc3NUaW1lYCxgQ2xhc3NgLmBjbGFzc05hbWVgLGBDbGFzc2AuYGNsYXNzUHJpY2VgLGBDbGFzc0NhdGVnb3J5YC5gY2xhc3NDYXRlZ29yeU5hbWVgIEZST00gYEJvb2tgIElOTkVSIEpPSU4gYENsYXNzYCBPTiBgQm9va2AuYGNsYXNzSWRgID0gYENsYXNzYC5gY2xhc3NJZGAgSU5ORVIgSk9JTiBgQ2xhc3NDYXRlZ29yeWAgT04gYENsYXNzYC5gY2xhc3NDYXRlZ29yeUlkYCA9IGBDbGFzc0NhdGVnb3J5YC5gY2xhc3NDYXRlZ29yeUlkYCBXSEVSRSBgQm9va2AuYHVzZXJJZGAgPSA/IEFORCBgQ2xhc3NgLmBjbGFzc1RpbWVgID4gP1wiO1xuXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBkYi5xdWVyeShzcWwsIFt1c2VySWQsIGRhdGVdKTtcbiAgZGF0YVswXS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgZWxlbWVudC5jbGFzc1RpbWUgPSBtb21lbnQoZWxlbWVudC5jbGFzc1RpbWUpLmZvcm1hdChcIllZWVkvTU0vRERcIik7XG4gIH0pO1xuICByZXMuanNvbihkYXRhWzBdKTtcbn0pO1xuXG5cbi8vIFBBVENIIGJvb2sgc3RhdHVzXG5yb3V0ZXIucGF0Y2goJy9jbGFzc0xpc3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qgb3V0cHV0ID0ge1xuICAgIHN1Y2Nlc3M6IGZhbHNlXG4gIH1cbiAgLy8g5Y+W5b6X5YKz5L6G55qE6aCQ57SE57eo6JmfXG4gIGNvbnN0IGJvb2tJZCA9IHJlcS5ib2R5LmJvb2tJZFxuICBjb25zdCBzcWwgPSAnVVBEQVRFIGBCb29rYCBTRVQgYEJvb2tgLmBib29rU3RhdHVzYCA9IFwi5Y+W5raI6aCQ57SEXCIgV0hFUkUgYEJvb2tgLmBib29rSWRgID0gPyAnXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBkYi5xdWVyeShzcWwsIFtib29rSWRdKVxuICAvLyDlpoLmnpzmnInmm7TmlrDliYdvdXRwdXTlop7liqBzdWNjZXNz5Y+KZGF0YeWxrOaAp1xuICBpZiAoZGF0YVswXS5hZmZlY3RlZFJvd3MgPiAwKSB7XG4gICAgb3V0cHV0LnN1Y2Nlc3MgPSB0cnVlXG4gICAgb3V0cHV0LmRhdGEgPSBkYXRhWzBdXG4gIH1cbiAgcmVzLmpzb24ob3V0cHV0KVxufSlcblxuLy8gR0VUIHVzZXIgYWxsIGNsYXNzIGxpc3RcbnJvdXRlci5nZXQoXCIvYWxsY2xhc3NsaXN0XCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB1c2VySWQgPSByZXEuc2Vzc2lvbi51c2VySWQ7XG4gIGNvbnN0IHNxbCA9XG4gICAgXCJTRUxFQ1QgYEJvb2tgLmBib29rVGltZWAsYEJvb2tgLmBib29rUXR5YCxgQ2xhc3NgLmBjbGFzc1RpbWVgLGBDbGFzc2AuYGNsYXNzTmFtZWAsYENsYXNzYC5gY2xhc3NQcmljZWAsYENsYXNzQ2F0ZWdvcnlgLmBjbGFzc0NhdGVnb3J5TmFtZWAgRlJPTSBgQm9va2AgSU5ORVIgSk9JTiBgQ2xhc3NgIE9OIGBCb29rYC5gY2xhc3NJZGAgPSBgQ2xhc3NgLmBjbGFzc0lkYCBJTk5FUiBKT0lOIGBDbGFzc0NhdGVnb3J5YCBPTiBgQ2xhc3NgLmBjbGFzc0NhdGVnb3J5SWRgID0gYENsYXNzQ2F0ZWdvcnlgLmBjbGFzc0NhdGVnb3J5SWRgIFdIRVJFIGBCb29rYC5gdXNlcklkYCA9ID8gXCI7XG5cbiAgY29uc3QgZGF0YSA9IGF3YWl0IGRiLnF1ZXJ5KHNxbCwgW3VzZXJJZF0pO1xuICBkYXRhWzBdLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICBlbGVtZW50LmNsYXNzVGltZSA9IG1vbWVudChlbGVtZW50LmNsYXNzVGltZSkuZm9ybWF0KFwiWVlZWS9NTS9ERFwiKTtcbiAgfSk7XG4gIHJlcy5qc29uKGRhdGFbMF0pO1xufSk7XG5cblxuLyogR0VUIHVzZXJzIGxpc3RpbmcuICovXG5yb3V0ZXIuZ2V0KFwiL1wiLCBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnNlbmQoXCJ0aGlzIGlzIHVzZXIgcGFnZVwiKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "response",
        "db",
        "__dirname",
        "router",
        "Router",
        "moment",
        "makeFormatedId",
        "checkLogin",
        "post",
        "req",
        "res",
        "checkLogIn",
        "output",
        "success",
        "body",
        "logInStatus",
        "userInfo",
        "console",
        "log",
        "sqlAddUser",
        "query",
        "userEmail",
        "userPassword",
        "userFirstName",
        "userLastName",
        "userGender",
        "userCity",
        "userDistrict",
        "userAddress",
        "userPostCode",
        "userBirthday",
        "responseAddUser",
        "affectedRows",
        "sqlAddUserId",
        "insertId",
        "toString",
        "responseAddUserId",
        "insertUserId",
        "userMobile",
        "session",
        "userId",
        "json",
        "patch",
        "sqlModifyUser",
        "responseModifyUser",
        "changedRows",
        "message",
        "sqlLogIn",
        "responseLogIn",
        "length",
        "errorMessage",
        "oldPassword",
        "sqlChangePassword",
        "newPassword",
        "responseChangePassword",
        "logOutStatus",
        "get",
        "date",
        "Date",
        "toLocaleDateString",
        "sql",
        "data",
        "forEach",
        "element",
        "classTime",
        "format",
        "bookId",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst { response } = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nconst router = express.Router();\nconst moment = require(\"moment\");\n\n//引入libraries中的函式\nconst makeFormatedId = require(__dirname + \"/../libraries/makeFormatedId\"); // 製作格式化的ID\nconst checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n\n//註冊會員\nrouter.post(\"/registration\", async (req, res) => {\n  // console.log(req.body)\n\n  //先檢查登入狀態，記得要有req引數\n  const checkLogIn = await checkLogin(req); //使用checkLogin檢查\n  //統一的output格式\n  const output = {\n    success: false,\n    body: req.body,\n    logInStatus: checkLogIn.logInStatus,\n    userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n  };\n\n  console.log(output);\n\n  //無登入時，才可註冊會員\n  if (!output.logInStatus) {\n    //新增會員sql\n    const sqlAddUser =\n      \"INSERT INTO `Users` (`userAccount`, `userPassword`, `userFirstName`, `userLastName`, `userEmail`, `userGender`, `userCity`, `userDistrict`, `userAddress`, `userPostCode`, `userBirthday`) VALUES (?, ? ,?, ?, ?, ? , ?, ?, ?, ?, ?)\";\n\n    const responseAddUser = await db.query(sqlAddUser, [\n      req.body.userEmail,\n      req.body.userPassword,\n      req.body.userFirstName,\n      req.body.userLastName,\n      req.body.userEmail,\n      req.body.userGender,\n      req.body.userCity,\n      req.body.userDistrict,\n      req.body.userAddress,\n      req.body.userPostCode,\n      req.body.userBirthday,\n    ]);\n\n    // console.log(\"affectedRows\", responseAddUser[0].affectedRows);\n\n    if (responseAddUser[0].affectedRows > 0) {\n      //插入userId sql\n      const sqlAddUserId = \"UPDATE `Users` SET `userId`= ? WHERE `id` = ?\";\n\n      //取得剛剛插入的id\n      const insertId = responseAddUser[0].insertId.toString();\n      // console.log(insertId);\n\n      //插入userId\n      const responseAddUserId = await db.query(sqlAddUserId, [\n        makeFormatedId(5, \"U\", insertId),\n        insertId,\n      ]);\n\n      //更改output\n      output.insertUserId = makeFormatedId(5, \"U\", insertId);\n      output.success = true;\n      output.userInfo = { ...req.body, userMobile: \"\" };\n      output.logInStatus = true;\n\n      //若註冊成功，則自動生成登入session\n      req.session.userEmail = req.body.userEmail;\n      req.session.userPassword = req.body.userPassword;\n      req.session.userId = output.insertUserId;\n    }\n  }\n\n  //回傳值\n  res.json(output);\n});\n\n//會員資料修改\nrouter.patch(\"/infomodify\", async (req, res) => {\n  //先檢查登入狀態，記得要有req引數\n  const checkLogIn = await checkLogin(req); //使用checkLogin檢查\n  //統一的output格式\n  const output = {\n    success: false,\n    body: req.body,\n    logInStatus: checkLogIn.logInStatus,\n    userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n  };\n\n  if (output.logInStatus) {\n    const sqlModifyUser =\n      \"UPDATE `Users` SET `userAccount`= ?, `userFirstName`= ?, `userLastName` = ?,`userMobile` = ?, `userEmail` = ?, `userGender` = ?, `userCity` = ?, `userDistrict` = ?, `userAddress` = ?, `userPostCode` = ?, `userBirthday` = ? WHERE `userId` = ?\";\n    const responseModifyUser = await db.query(sqlModifyUser, [\n      req.body.userEmail,\n      req.body.userFirstName,\n      req.body.userLastName,\n      req.body.userMobile,\n      req.body.userEmail,\n      req.body.userGender,\n      req.body.userCity,\n      req.body.userDistrict,\n      req.body.userAddress,\n      req.body.userPostCode,\n      req.body.userBirthday,\n      req.session.userId,\n    ]);\n\n    // ================================== //\n    // console.log(responseModifyUser[0].changedRows);\n    //如果有修改資料\n    if (responseModifyUser[0].changedRows) {\n      //如果有更改email，要立即更改req.session.userEmail\n      req.session.userEmail !== req.body.userEmail\n        ? (req.session.userEmail = req.body.userEmail)\n        : \"\";\n\n      output.success = true;\n      output.userInfo = {\n        ...output.userInfo,\n        ...req.body,\n      };\n    } else {\n      output.message = \"NO_CHANGE\";\n    }\n    // ================================== //\n  }\n\n  res.json(output);\n});\n\n//登入login\nrouter.post(\"/login\", async (req, res) => {\n  // console.log(\"req.body\", req.body);\n  const output = {\n    success: false,\n    logInStatus: false,\n    body: req.body,\n  };\n\n  const sqlLogIn =\n    \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n\n  const responseLogIn = await db.query(sqlLogIn, [\n    req.body.userEmail,\n    req.body.userPassword,\n  ]);\n\n  // console.log(\"responseLogIn\", responseLogIn[0][0]);\n  // ================================== //\n\n  if (responseLogIn[0].length > 0) {\n    output.success = true;\n    output.userInfo = responseLogIn[0][0];\n    output.logInStatus = true;\n\n    //紀錄帳密在Session\n    req.session.userEmail = req.body.userEmail;\n    req.session.userPassword = req.body.userPassword;\n    req.session.userId = responseLogIn[0][0].userId;\n  } else {\n    output.errorMessage = \"No_User_Found\";\n  }\n  // ================================== //\n\n  // console.log(req.session);\n  res.json(output);\n});\n\n//密碼更改\nrouter.patch(\"/changepassword\", async (req, res) => {\n  console.log(req.body);\n\n  //先檢查登入狀態，記得要有req引數\n  const checkLogIn = await checkLogin(req); //使用checkLogin檢查\n  //統一的output格式\n  const output = {\n    success: false,\n    body: req.body,\n    logInStatus: checkLogIn.logInStatus,\n    userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n  };\n\n  if (output.logInStatus) {\n    //判斷舊密碼是否正確\n    if (req.body.oldPassword === output.userInfo.userPassword) {\n      console.log(\"password correct\");\n      const sqlChangePassword =\n        \"UPDATE `Users` SET `userPassword` = ? WHERE `userId` = ? \";\n      const responseChangePassword = await db.query(sqlChangePassword, [\n        req.body.newPassword,\n        req.session.userId,\n      ]);\n\n      console.log(responseChangePassword[0]);\n      if (responseChangePassword[0].affectedRows > 0) {\n        output.success = true;\n        output.userInfo = {\n          ...output.userInfo,\n          userPassword: req.body.userPassword,\n        };\n        //更改session密碼\n        req.session.userPassword = req.body.newPassword;\n      } else {\n        output.errorMessage = \"NO_CHANGE\";\n      }\n    } else {\n      console.log(\"password incorrect\");\n      output.errorMessage = \"OLD_PASSWORD_INCORRECT\";\n    }\n  }\n\n  res.json(output);\n});\n\n//登入login\nrouter.post(\"/login\", async (req, res) => {\n  // console.log(\"req.body\", req.body);\n  const output = {\n    success: false,\n    logInStatus: false,\n    body: req.body,\n  };\n\n  const sqlLogIn =\n    \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n\n  const responseLogIn = await db.query(sqlLogIn, [\n    req.body.userEmail,\n    req.body.userPassword,\n  ]);\n\n  // console.log(\"responseLogIn\", responseLogIn[0][0]);\n  // ================================== //\n\n  if (responseLogIn[0].length > 0) {\n    output.success = true;\n    output.userInfo = responseLogIn[0][0];\n    output.logInStatus = true;\n\n    //紀錄帳密在Session\n    req.session.userEmail = req.body.userEmail;\n    req.session.userPassword = req.body.userPassword;\n    req.session.userId = responseLogIn[0][0].userId;\n  } else {\n    output.errorMessage = \"No_User_Found\";\n  }\n  // ================================== //\n\n  // console.log(req.session);\n\n  res.json(output);\n});\n\n//登出logout\nrouter.post(\"/logout\", async (req, res) => {\n  // console.log(\"req.body\", req.body);\n  delete req.session.userEmail;\n  delete req.session.userPassword;\n  delete req.session.userId;\n\n  const output = {\n    success: true,\n    logOutStatus: req.session.userId ? false : true,\n  };\n\n  res.json(output);\n});\n\n//初始檢查有無登入\nrouter.post(\"/checklogin\", async (req, res) => {\n  const output = {\n    logInStatus: false,\n  };\n\n  if (req.session.userEmail && req.session.userPassword) {\n    const sqlLogIn =\n      \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n\n    const responseLogIn = await db.query(sqlLogIn, [\n      req.session.userEmail,\n      req.session.userPassword,\n    ]);\n\n    if (responseLogIn[0].length > 0) {\n      output.userInfo = responseLogIn[0][0];\n      output.logInStatus = true;\n    }\n  }\n\n  res.json(output);\n});\n\n// GET user class list\nrouter.get(\"/classlist\", async (req, res) => {\n  const date = new Date().toLocaleDateString();\n  const userId = req.session.userId;\n  const sql = \"SELECT `Book`.`bookId`,`Book`.`bookTime`,`Book`.`bookQty`,`Book`.`bookStatus`,`Class`.`classTime`,`Class`.`className`,`Class`.`classPrice`,`ClassCategory`.`classCategoryName` FROM `Book` INNER JOIN `Class` ON `Book`.`classId` = `Class`.`classId` INNER JOIN `ClassCategory` ON `Class`.`classCategoryId` = `ClassCategory`.`classCategoryId` WHERE `Book`.`userId` = ? AND `Class`.`classTime` > ?\";\n\n  const data = await db.query(sql, [userId, date]);\n  data[0].forEach((element) => {\n    element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n  });\n  res.json(data[0]);\n});\n\n\n// PATCH book status\nrouter.patch('/classList', async (req, res) => {\n  const output = {\n    success: false\n  }\n  // 取得傳來的預約編號\n  const bookId = req.body.bookId\n  const sql = 'UPDATE `Book` SET `Book`.`bookStatus` = \"取消預約\" WHERE `Book`.`bookId` = ? '\n  const data = await db.query(sql, [bookId])\n  // 如果有更新則output增加success及data屬性\n  if (data[0].affectedRows > 0) {\n    output.success = true\n    output.data = data[0]\n  }\n  res.json(output)\n})\n\n// GET user all class list\nrouter.get(\"/allclasslist\", async (req, res) => {\n  const userId = req.session.userId;\n  const sql =\n    \"SELECT `Book`.`bookTime`,`Book`.`bookQty`,`Class`.`classTime`,`Class`.`className`,`Class`.`classPrice`,`ClassCategory`.`classCategoryName` FROM `Book` INNER JOIN `Class` ON `Book`.`classId` = `Class`.`classId` INNER JOIN `ClassCategory` ON `Class`.`classCategoryId` = `ClassCategory`.`classCategoryId` WHERE `Book`.`userId` = ? \";\n\n  const data = await db.query(sql, [userId]);\n  data[0].forEach((element) => {\n    element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n  });\n  res.json(data[0]);\n});\n\n\n/* GET users listing. */\nrouter.get(\"/\", function (req, res, next) {\n  res.send(\"this is user page\");\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593345559387
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/makeFormatedId.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
        "sourceFileName": "makeFormatedId.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//製作userId\nvar makeFormatedId = function makeFormatedId(digit, formatHead, formatTail) {\n  var formatedId = \"\".concat(formatHead);\n  var zeroCount = digit - formatHead.toString().length - formatTail.toString().length;\n\n  for (var i = 0; i < zeroCount; i++) {\n    formatedId += \"0\";\n  }\n\n  formatedId += formatTail;\n  return formatedId;\n};\n\nmodule.exports = makeFormatedId;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VGb3JtYXRlZElkLmpzIl0sIm5hbWVzIjpbIm1ha2VGb3JtYXRlZElkIiwiZGlnaXQiLCJmb3JtYXRIZWFkIiwiZm9ybWF0VGFpbCIsImZvcm1hdGVkSWQiLCJ6ZXJvQ291bnQiLCJ0b1N0cmluZyIsImxlbmd0aCIsImkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0EsSUFBTUEsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFDQyxLQUFELEVBQVFDLFVBQVIsRUFBb0JDLFVBQXBCLEVBQW1DO0FBQ3hELE1BQUlDLFVBQVUsYUFBTUYsVUFBTixDQUFkO0FBQ0EsTUFBTUcsU0FBUyxHQUNiSixLQUFLLEdBQUdDLFVBQVUsQ0FBQ0ksUUFBWCxHQUFzQkMsTUFBOUIsR0FBdUNKLFVBQVUsQ0FBQ0csUUFBWCxHQUFzQkMsTUFEL0Q7O0FBRUEsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSCxTQUFwQixFQUErQkcsQ0FBQyxFQUFoQyxFQUFvQztBQUNsQ0osSUFBQUEsVUFBVSxJQUFJLEdBQWQ7QUFDRDs7QUFDREEsRUFBQUEsVUFBVSxJQUFJRCxVQUFkO0FBQ0EsU0FBT0MsVUFBUDtBQUNELENBVEQ7O0FBV0FLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsY0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BlZ2d5L0RvY3VtZW50cy9WU19jb2RlL3JlYWN0L0luU2Vuc2Utbm9kZS9JblNlbnNlX05vZGUvbGlicmFyaWVzLyIsInNvdXJjZXNDb250ZW50IjpbIi8v6KO95L2cdXNlcklkXG5jb25zdCBtYWtlRm9ybWF0ZWRJZCA9IChkaWdpdCwgZm9ybWF0SGVhZCwgZm9ybWF0VGFpbCkgPT4ge1xuICBsZXQgZm9ybWF0ZWRJZCA9IGAke2Zvcm1hdEhlYWR9YDtcbiAgY29uc3QgemVyb0NvdW50ID1cbiAgICBkaWdpdCAtIGZvcm1hdEhlYWQudG9TdHJpbmcoKS5sZW5ndGggLSBmb3JtYXRUYWlsLnRvU3RyaW5nKCkubGVuZ3RoO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHplcm9Db3VudDsgaSsrKSB7XG4gICAgZm9ybWF0ZWRJZCArPSBcIjBcIjtcbiAgfVxuICBmb3JtYXRlZElkICs9IGZvcm1hdFRhaWw7XG4gIHJldHVybiBmb3JtYXRlZElkO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBtYWtlRm9ybWF0ZWRJZDtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "makeFormatedId.js"
      ],
      "names": [
        "makeFormatedId",
        "digit",
        "formatHead",
        "formatTail",
        "formatedId",
        "zeroCount",
        "toString",
        "length",
        "i",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,UAAR,EAAoBC,UAApB,EAAmC;AACxD,MAAIC,UAAU,aAAMF,UAAN,CAAd;AACA,MAAMG,SAAS,GACbJ,KAAK,GAAGC,UAAU,CAACI,QAAX,GAAsBC,MAA9B,GAAuCJ,UAAU,CAACG,QAAX,GAAsBC,MAD/D;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCJ,IAAAA,UAAU,IAAI,GAAd;AACD;;AACDA,EAAAA,UAAU,IAAID,UAAd;AACA,SAAOC,UAAP;AACD,CATD;;AAWAK,MAAM,CAACC,OAAP,GAAiBV,cAAjB",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
      "sourcesContent": [
        "//製作userId\nconst makeFormatedId = (digit, formatHead, formatTail) => {\n  let formatedId = `${formatHead}`;\n  const zeroCount =\n    digit - formatHead.toString().length - formatTail.toString().length;\n  for (let i = 0; i < zeroCount; i++) {\n    formatedId += \"0\";\n  }\n  formatedId += formatTail;\n  return formatedId;\n};\n\nmodule.exports = makeFormatedId;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592822001990
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/class.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "class.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar moment = require(\"moment\");\n\nvar e = require(\"express\");\n\nvar router = express.Router();\n\nvar makeFormatedId = require(__dirname + \"/../libraries/makeFormatedId\"); // 製作格式化的ID\n\n\nvar checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n// class list query\n\n\nrouter.get(\"/\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var checkLogIn, output, sql, bookSql, response, bookSqlRes, booked;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context.sent;\n            output = {\n              success: false,\n              logInStatus: checkLogIn.logInStatus\n            };\n            sql = \"SELECT `class`.`classPeopleLimit`,`class`.`classId`,`class`.`className`,`class`.`classImg`,`class`.`classTime` from `Class`\";\n            bookSql = \"SELECT `Book`.`bookQty`,`Book`.`classId`,`Book`.`bookStatus`,`Book`.`userId` from `Book`\";\n            _context.next = 8;\n            return db.query(sql);\n\n          case 8:\n            response = _context.sent;\n            _context.next = 11;\n            return db.query(bookSql);\n\n          case 11:\n            bookSqlRes = _context.sent;\n            response[0].forEach(function (element) {\n              element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n            }); // ====================================================================================================== //\n            // 確定課程剩餘人數\n\n            response[0].forEach(function (resp) {\n              resp.remainingPeople = +res.classPeopleLimit;\n              resp.countPeople = 0;\n              bookSqlRes[0].forEach(function (book) {\n                if (book.bookStatus === \"預約成功\") {\n                  if (resp.classId === book.classId) {\n                    resp.countPeople += +book.bookQty;\n                  }\n                }\n\n                resp.remainingPeople = +resp.classPeopleLimit - resp.countPeople;\n              });\n            }); // ====================================================================================================== //\n            // 找到book userId 與 session userId 相等\n\n            booked = bookSqlRes[0].filter(function (i) {\n              return i.userId === req.session.userId;\n            }); // 若登入,output.logInStatus則改變\n\n            if (checkLogIn.logInStatus) {\n              output.logInStatus = checkLogIn.logInStatus;\n            } // 若得到課程,則把課程資訊及訂單資訊加到output\n\n\n            if (response[0].length > 0) {\n              output.classInfo = response[0];\n              output.bookInfo = booked;\n              output.success = true;\n            }\n\n            console.log(output);\n            res.json(output);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); // class detail query\n\nrouter.get(\"/classdetail/:classid\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var sql, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            sql = \"SELECT `ClassDescription`.`classId`,`ClassDescription`.`classContent`,`ClassDescription`.`classContent1`,`ClassDescription`.`classContent2`,`ClassDescription`.`classContent3`, `ClassDescription`.`classContent4`, `Class`.`className`,`Class`.`classImg`, `Class`.`classPrice`, `Class`.`classTime`, `Shop`.`shopName`, `Shop`.`shopAddress`, `Shop`.`shopPhone`FROM`ClassDescription` INNER JOIN`Class`ON`ClassDescription`.`classId` = `Class`.`classId` INNER JOIN`Shop` ON`ClassDescription`.`shopId` = `Shop`.`shopId` WHERE`ClassDescription`.`classId` = ? \";\n            _context2.next = 3;\n            return db.query(sql, [req.params.classid]);\n\n          case 3:\n            response = _context2.sent;\n            response[0].forEach(function (element) {\n              element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n            });\n            res.json(response[0]);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // class detail popup\n\nrouter.post(\"/classdetail/:classid\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var checkLogIn, output, data, nowPeople, limitPeople, bookPeople, resLimitPeople, resBookPeople, sql, response, sqlBookId, insertId;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context3.sent;\n            output = {\n              success: false,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n            }; // 判斷登入狀態\n\n            if (!output.logInStatus) {\n              _context3.next = 31;\n              break;\n            }\n\n            data = {\n              bookQty: req.body.bookQty,\n              bookTime: req.body.bookTime,\n              userId: req.session.userId,\n              classId: req.body.classId,\n              bookStatus: \"預約成功\",\n              bookTotalPrice: req.body.bookTotalPrice\n            }; // ================================== //\n            // 情況1:課程人數已滿\n\n            if (!(data.bookQty && data.bookTime)) {\n              _context3.next = 18;\n              break;\n            }\n\n            nowPeople = 0; // 取課程最大人數\n\n            limitPeople = \"SELECT `Class`.`classPeopleLimit` FROM Class WHERE `Class`.`classId` = ?\"; // 取得預約人數\n\n            bookPeople = \"SELECT `Book`.`bookQty`,`Book`.`bookStatus` FROM Book WHERE `Book`.`classId` = ?\";\n            _context3.next = 12;\n            return db.query(limitPeople, [data.classId]);\n\n          case 12:\n            resLimitPeople = _context3.sent;\n            _context3.next = 15;\n            return db.query(bookPeople, [data.classId]);\n\n          case 15:\n            resBookPeople = _context3.sent;\n            // 預約人數加總\n            resBookPeople[0].forEach(function (item) {\n              if (item.bookStatus === \"預約成功\") nowPeople += +item.bookQty;\n            }); // 如果人數大於課程最大人數,output新增error屬性\n\n            if (+data.bookQty + nowPeople > resLimitPeople[0][0].classPeopleLimit) {\n              output.error = \"人數超過上限\";\n            }\n\n          case 18:\n            // ================================== //\n            // 情況2:沒選時間\n            if (!data.bookTime) output.error = \"請選擇時間\"; // ================================== //\n            //  情況3:沒選人數\n\n            if (!data.bookQty) output.error = \"請選擇人數\"; // ================================== //\n            // 如果error不存在 則增加book\n\n            if (output.error) {\n              _context3.next = 31;\n              break;\n            }\n\n            // 增加book Id\n            sql = \"INSERT INTO Book SET ?\";\n            _context3.next = 24;\n            return db.query(sql, [data]);\n\n          case 24:\n            response = _context3.sent;\n\n            if (!(response[0].affectedRows > 0)) {\n              _context3.next = 31;\n              break;\n            }\n\n            sqlBookId = \"UPDATE Book SET `bookId`= ? WHERE id = ?\";\n            insertId = response[0].insertId.toString();\n            _context3.next = 30;\n            return db.query(sqlBookId, [makeFormatedId(6, \"B_\", insertId), insertId]);\n\n          case 30:\n            output.success = true;\n\n          case 31:\n            res.json(output);\n\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "class.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "__dirname",
        "moment",
        "e",
        "router",
        "Router",
        "makeFormatedId",
        "checkLogin",
        "get",
        "req",
        "res",
        "checkLogIn",
        "output",
        "success",
        "logInStatus",
        "sql",
        "bookSql",
        "query",
        "response",
        "bookSqlRes",
        "forEach",
        "element",
        "classTime",
        "format",
        "resp",
        "remainingPeople",
        "classPeopleLimit",
        "countPeople",
        "book",
        "bookStatus",
        "classId",
        "bookQty",
        "booked",
        "filter",
        "i",
        "userId",
        "session",
        "length",
        "classInfo",
        "bookInfo",
        "console",
        "log",
        "json",
        "params",
        "classid",
        "post",
        "userInfo",
        "data",
        "body",
        "bookTime",
        "bookTotalPrice",
        "nowPeople",
        "limitPeople",
        "bookPeople",
        "resLimitPeople",
        "resBookPeople",
        "item",
        "error",
        "affectedRows",
        "sqlBookId",
        "insertId",
        "toString",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "var express = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nvar moment = require(\"moment\");\nconst e = require(\"express\");\nvar router = express.Router();\n\nconst makeFormatedId = require(__dirname + \"/../libraries/makeFormatedId\"); // 製作格式化的ID\nconst checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n\n// class list query\nrouter.get(\"/\", async (req, res) => {\n  const checkLogIn = await checkLogin(req);\n  const output = {\n    success: false,\n    logInStatus: checkLogIn.logInStatus,\n  };\n  const sql =\n    \"SELECT `class`.`classPeopleLimit`,`class`.`classId`,`class`.`className`,`class`.`classImg`,`class`.`classTime` from `Class`\";\n  const bookSql =\n    \"SELECT `Book`.`bookQty`,`Book`.`classId`,`Book`.`bookStatus`,`Book`.`userId` from `Book`\";\n  const response = await db.query(sql);\n  const bookSqlRes = await db.query(bookSql);\n\n  response[0].forEach((element) => {\n    element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n  });\n  // ====================================================================================================== //\n  // 確定課程剩餘人數\n  response[0].forEach((resp) => {\n    resp.remainingPeople = +res.classPeopleLimit;\n    resp.countPeople = 0;\n    bookSqlRes[0].forEach((book) => {\n      if (book.bookStatus === \"預約成功\") {\n        if (resp.classId === book.classId) {\n          resp.countPeople += +book.bookQty;\n        }\n      }\n      resp.remainingPeople = +resp.classPeopleLimit - resp.countPeople;\n    });\n  });\n  // ====================================================================================================== //\n\n  // 找到book userId 與 session userId 相等\n  const booked = bookSqlRes[0].filter((i) => i.userId === req.session.userId);\n\n  // 若登入,output.logInStatus則改變\n  if (checkLogIn.logInStatus) {\n    output.logInStatus = checkLogIn.logInStatus;\n  }\n\n  // 若得到課程,則把課程資訊及訂單資訊加到output\n  if (response[0].length > 0) {\n    output.classInfo = response[0];\n    output.bookInfo = booked;\n    output.success = true;\n  }\n  console.log(output);\n  res.json(output);\n});\n\n// class detail query\nrouter.get(\"/classdetail/:classid\", async (req, res) => {\n  const sql =\n    \"SELECT `ClassDescription`.`classId`,`ClassDescription`.`classContent`,`ClassDescription`.`classContent1`,`ClassDescription`.`classContent2`,`ClassDescription`.`classContent3`, `ClassDescription`.`classContent4`, `Class`.`className`,`Class`.`classImg`, `Class`.`classPrice`, `Class`.`classTime`, `Shop`.`shopName`, `Shop`.`shopAddress`, `Shop`.`shopPhone`FROM`ClassDescription` INNER JOIN`Class`ON`ClassDescription`.`classId` = `Class`.`classId` INNER JOIN`Shop` ON`ClassDescription`.`shopId` = `Shop`.`shopId` WHERE`ClassDescription`.`classId` = ? \";\n\n  const response = await db.query(sql, [req.params.classid]);\n  response[0].forEach((element) => {\n    element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n  });\n  res.json(response[0]);\n});\n// class detail popup\nrouter.post(\"/classdetail/:classid\", async (req, res) => {\n  const checkLogIn = await checkLogin(req);\n  const output = {\n    success: false,\n    logInStatus: checkLogIn.logInStatus,\n    userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n  };\n\n  // 判斷登入狀態\n  if (output.logInStatus) {\n    const data = {\n      bookQty: req.body.bookQty,\n      bookTime: req.body.bookTime,\n      userId: req.session.userId,\n      classId: req.body.classId,\n      bookStatus: \"預約成功\",\n      bookTotalPrice: req.body.bookTotalPrice,\n    };\n    // ================================== //\n    // 情況1:課程人數已滿\n    if (data.bookQty && data.bookTime) {\n      let nowPeople = 0;\n      // 取課程最大人數\n      const limitPeople =\n        \"SELECT `Class`.`classPeopleLimit` FROM Class WHERE `Class`.`classId` = ?\";\n      // 取得預約人數\n      const bookPeople =\n        \"SELECT `Book`.`bookQty`,`Book`.`bookStatus` FROM Book WHERE `Book`.`classId` = ?\";\n      const resLimitPeople = await db.query(limitPeople, [data.classId]);\n      const resBookPeople = await db.query(bookPeople, [data.classId]);\n      // 預約人數加總\n      resBookPeople[0].forEach((item) => {\n        if (item.bookStatus === \"預約成功\") nowPeople += +item.bookQty;\n      });\n      // 如果人數大於課程最大人數,output新增error屬性\n      if (+data.bookQty + nowPeople > resLimitPeople[0][0].classPeopleLimit) {\n        output.error = \"人數超過上限\";\n      }\n    }\n    // ================================== //\n\n    // 情況2:沒選時間\n    if (!data.bookTime) output.error = \"請選擇時間\";\n    // ================================== //\n    //  情況3:沒選人數\n    if (!data.bookQty) output.error = \"請選擇人數\";\n    // ================================== //\n\n    // 如果error不存在 則增加book\n    if (!output.error) {\n      // 增加book Id\n      const sql = \"INSERT INTO Book SET ?\";\n      const response = await db.query(sql, [data]);\n      if (response[0].affectedRows > 0) {\n        const sqlBookId = \"UPDATE Book SET `bookId`= ? WHERE id = ?\";\n        const insertId = response[0].insertId.toString();\n        await db.query(sqlBookId, [\n          makeFormatedId(6, \"B_\", insertId),\n          insertId,\n        ]);\n        output.success = true;\n      }\n    }\n  }\n  res.json(output);\n});\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593533863856
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemdetail.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemdetail.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemdetail.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/itemdetail.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "itemdetail.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar router = express.Router(); //檢查登入狀態\n\nvar checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n//商品詳細資訊\n\n\nrouter.get(\"/:itemId?\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var getItemDetail, itemsDetailResponse;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //商品\n            getItemDetail = \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemImg2`,`Items`.`itemSize`,`Items`.`itemPrice`,`Items`.`itemQty`,`Items`.`discription`,`Items`.`fragranceDetails`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Brand`.`brandId` = `Items`.`brandId`WHERE  `Items`.`itemId`=  ?\";\n            _context.next = 3;\n            return db.query(getItemDetail, [req.params.itemId]);\n\n          case 3:\n            itemsDetailResponse = _context.sent;\n            res.json(itemsDetailResponse[0]);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //取得願望清單\n\nrouter.get(\"/wishlist/:itemId\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var checkLogIn, output, getWishList, wishListResponse, rawData, rawWishList, existence;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context2.sent;\n            //使用checkLogin檢查\n            //統一的output格式\n            output = {\n              success: false,\n              body: req.body,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n              itemWish: false\n            };\n            console.log(req.session.userEmail, req.session.userPassword, req.session.userId, output.logInStatus); // ================================== //\n            //如果有登入\n\n            if (!output.logInStatus) {\n              _context2.next = 11;\n              break;\n            }\n\n            //取得該使用者wishlist\n            getWishList = \"SELECT `itemId` FROM `WishList` WHERE `userId` = ?\";\n            _context2.next = 9;\n            return db.query(getWishList, req.session.userId);\n\n          case 9:\n            wishListResponse = _context2.sent;\n\n            //確保已經有該會員的欄位\n            if (wishListResponse[0].length) {\n              rawData = wishListResponse[0][0].itemId; //清單裡面有東西才做\n\n              if (!!rawData && rawData.length > 2) {\n                rawWishList = JSON.parse(wishListResponse[0][0].itemId); // console.log(\"rawWishList\", rawWishList);\n                //後端先處理一次wishList\b（丟回符合該品牌的id）\n\n                existence = rawWishList.findIndex(function (item, index) {\n                  return item === req.params.itemId;\n                }); // console.log(\"existence\", existence);\n\n                output.success = true; //若有找到\n\n                if (existence >= 0) {\n                  output.itemWish = true;\n                }\n              }\n            }\n\n          case 11:\n            // ================================== //\n            res.json(output);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //toggle bookmark\n\nrouter.patch(\"/togglebookmark\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var checkLogIn, output, getWishList, wishListResponse, wish, rawData, rawWishList, existence, updateWishList, newWishList, newWishListResponse, _newWishList, _newWishListResponse;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context4.sent;\n            //使用checkLogin檢查\n            //統一的output格式\n            output = {\n              success: false,\n              body: req.body,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n            };\n\n            if (!output.logInStatus) {\n              _context4.next = 30;\n              break;\n            }\n\n            //取得該使用者wishlist\n            getWishList = \"SELECT `itemId` FROM `WishList` WHERE `userId` = ?\";\n            _context4.next = 8;\n            return db.query(getWishList, req.session.userId);\n\n          case 8:\n            wishListResponse = _context4.sent;\n\n            if (!wishListResponse[0].length) {\n              _context4.next = 30;\n              break;\n            }\n\n            wish = req.body.itemId;\n            rawData = wishListResponse[0][0].itemId;\n            rawWishList = JSON.parse(wishListResponse[0][0].itemId); // console.log(\"rawWishList:\", rawWishList);\n\n            existence = rawWishList.findIndex(function (el) {\n              return el === wish;\n            }); // console.log(existence);\n            //改變願望清單function\n\n            updateWishList = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(newWishList) {\n                var newWishListString, updateWish, newWishListResponse;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        newWishListString = JSON.stringify(newWishList);\n                        updateWish = \"UPDATE `WishList` SET `itemId`= ? WHERE `userId`= ?\";\n                        _context3.next = 4;\n                        return db.query(updateWish, [newWishListString, req.session.userId]);\n\n                      case 4:\n                        newWishListResponse = _context3.sent;\n                        return _context3.abrupt(\"return\", newWishListResponse);\n\n                      case 6:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function updateWishList(_x7) {\n                return _ref4.apply(this, arguments);\n              };\n            }(); //若願望清單已有，則去除，反之增加\n\n\n            if (!(existence >= 0)) {\n              _context4.next = 24;\n              break;\n            }\n\n            newWishList = rawWishList.filter(function (el) {\n              return el !== wish;\n            });\n            _context4.next = 19;\n            return updateWishList(newWishList);\n\n          case 19:\n            newWishListResponse = _context4.sent;\n            console.log(newWishListResponse);\n\n            if (newWishListResponse[0].affectedRows) {\n              output.success = true;\n              output.message = \"WISH_REMOVE\";\n            }\n\n            _context4.next = 30;\n            break;\n\n          case 24:\n            _newWishList = [].concat(_toConsumableArray(rawWishList), [wish]);\n            _context4.next = 27;\n            return updateWishList(_newWishList);\n\n          case 27:\n            _newWishListResponse = _context4.sent;\n            console.log(_newWishListResponse);\n\n            if (_newWishListResponse[0].affectedRows) {\n              output.success = true;\n              output.message = \"WISH_ADD\";\n            }\n\n          case 30:\n            res.json(output);\n\n          case 31:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //default\n\nrouter.get(\"/\", function (req, res) {\n  res.json(\"this is itemdetail\");\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "itemdetail.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "__dirname",
        "router",
        "Router",
        "checkLogin",
        "get",
        "req",
        "res",
        "getItemDetail",
        "query",
        "params",
        "itemId",
        "itemsDetailResponse",
        "json",
        "checkLogIn",
        "output",
        "success",
        "body",
        "logInStatus",
        "userInfo",
        "itemWish",
        "console",
        "log",
        "session",
        "userEmail",
        "userPassword",
        "userId",
        "getWishList",
        "wishListResponse",
        "length",
        "rawData",
        "rawWishList",
        "JSON",
        "parse",
        "existence",
        "findIndex",
        "item",
        "index",
        "patch",
        "wish",
        "el",
        "updateWishList",
        "newWishList",
        "newWishListString",
        "stringify",
        "updateWish",
        "newWishListResponse",
        "filter",
        "affectedRows",
        "message",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nconst router = express.Router();\n\n//檢查登入狀態\nconst checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n\n//商品詳細資訊\nrouter.get(\"/:itemId?\", async (req, res) => {\n    //商品\n    const getItemDetail =\n        \"SELECT `Items`.`itemId`, `Items`.`itemName`, `Items`.`itemImg`,`Items`.`itemImg2`,`Items`.`itemSize`,`Items`.`itemPrice`,`Items`.`itemQty`,`Items`.`discription`,`Items`.`fragranceDetails`,`Brand`.`brandName` FROM `Items` INNER JOIN `Brand` ON `Brand`.`brandId` = `Items`.`brandId`WHERE  `Items`.`itemId`=  ?\";\n\n    const itemsDetailResponse = await db.query(getItemDetail, [\n        req.params.itemId,\n    ]);\n    res.json(itemsDetailResponse[0]);\n});\n\n//取得願望清單\nrouter.get(\"/wishlist/:itemId\", async (req, res) => {\n    //先檢查登入狀態，記得要有req引數\n    const checkLogIn = await checkLogin(req); //使用checkLogin檢查\n    //統一的output格式\n    const output = {\n        success: false,\n        body: req.body,\n        logInStatus: checkLogIn.logInStatus,\n        userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n        itemWish: false,\n    };\n\n    console.log(\n        req.session.userEmail,\n        req.session.userPassword,\n        req.session.userId,\n        output.logInStatus\n    );\n    // ================================== //\n    //如果有登入\n    if (output.logInStatus) {\n        //取得該使用者wishlist\n        const getWishList =\n            \"SELECT `itemId` FROM `WishList` WHERE `userId` = ?\";\n        const wishListResponse = await db.query(\n            getWishList,\n            req.session.userId\n        );\n        //確保已經有該會員的欄位\n        if (wishListResponse[0].length) {\n            const rawData = wishListResponse[0][0].itemId;\n\n            //清單裡面有東西才做\n            if (!!rawData && rawData.length > 2) {\n                const rawWishList = JSON.parse(wishListResponse[0][0].itemId);\n                // console.log(\"rawWishList\", rawWishList);\n\n                //後端先處理一次wishList\b（丟回符合該品牌的id）\n                const existence = rawWishList.findIndex((item, index) => {\n                    return item === req.params.itemId;\n                });\n                // console.log(\"existence\", existence);\n\n                output.success = true;\n\n                //若有找到\n                if (existence >= 0) {\n                    output.itemWish = true;\n                }\n            }\n        }\n    }\n    // ================================== //\n\n    res.json(output);\n});\n\n//toggle bookmark\nrouter.patch(\"/togglebookmark\", async (req, res) => {\n    // console.log(req.body);\n    //先檢查登入狀態，記得要有req引數\n    const checkLogIn = await checkLogin(req); //使用checkLogin檢查\n    //統一的output格式\n    const output = {\n        success: false,\n        body: req.body,\n        logInStatus: checkLogIn.logInStatus,\n        userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null,\n    };\n    if (output.logInStatus) {\n        //取得該使用者wishlist\n        const getWishList =\n            \"SELECT `itemId` FROM `WishList` WHERE `userId` = ?\";\n        const wishListResponse = await db.query(\n            getWishList,\n            req.session.userId\n        );\n        // console.log(wishListResponse);\n\n        //如果已有欄位，才進行\n        if (wishListResponse[0].length) {\n            const wish = req.body.itemId;\n            const rawData = wishListResponse[0][0].itemId;\n            const rawWishList = JSON.parse(wishListResponse[0][0].itemId);\n            // console.log(\"rawWishList:\", rawWishList);\n\n            const existence = rawWishList.findIndex((el) => {\n                return el === wish;\n            });\n            // console.log(existence);\n\n            //改變願望清單function\n            const updateWishList = async (newWishList) => {\n                const newWishListString = JSON.stringify(newWishList);\n                const updateWish =\n                    \"UPDATE `WishList` SET `itemId`= ? WHERE `userId`= ?\";\n                const newWishListResponse = await db.query(updateWish, [\n                    newWishListString,\n                    req.session.userId,\n                ]);\n                return newWishListResponse;\n            };\n\n            //若願望清單已有，則去除，反之增加\n            if (existence >= 0) {\n                const newWishList = rawWishList.filter((el) => {\n                    return el !== wish;\n                });\n                const newWishListResponse = await updateWishList(newWishList);\n                console.log(newWishListResponse);\n                if (newWishListResponse[0].affectedRows) {\n                    output.success = true;\n                    output.message = \"WISH_REMOVE\";\n                }\n            } else {\n                const newWishList = [...rawWishList, wish];\n                const newWishListResponse = await updateWishList(newWishList);\n                console.log(newWishListResponse);\n                if (newWishListResponse[0].affectedRows) {\n                    output.success = true;\n                    output.message = \"WISH_ADD\";\n                }\n            }\n        }\n    }\n    res.json(output);\n});\n\n//default\nrouter.get(\"/\", (req, res) => {\n    res.json(\"this is itemdetail\");\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593259007759
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/checkLogin.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/checkLogin.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/checkLogin.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/checkLogin.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
        "sourceFileName": "checkLogin.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar db = require(__dirname + \"/../routes/db_connect\"); //每次向後端請求時，需驗證登入狀態\n\n\nvar checkLogin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req) {\n    var output, sqlLogIn, responseLogIn;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            output = {\n              logInStatus: false\n            }; // console.log(req.session);\n\n            if (!(req.session.userEmail && req.session.userPassword)) {\n              _context.next = 7;\n              break;\n            }\n\n            sqlLogIn = \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n            _context.next = 5;\n            return db.query(sqlLogIn, [req.session.userEmail, req.session.userPassword]);\n\n          case 5:\n            responseLogIn = _context.sent;\n\n            //若存在該使用者\n            if (responseLogIn[0].length > 0) {\n              output.userInfo = responseLogIn[0][0];\n              output.logInStatus = true;\n            } else {\n              //若發生找不到該使用者\n              delete req.session.userEmail;\n              delete req.session.userPassword;\n              delete req.session.userId;\n            }\n\n          case 7:\n            return _context.abrupt(\"return\", output);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function checkLogin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = checkLogin;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrTG9naW4uanMiXSwibmFtZXMiOlsiZGIiLCJyZXF1aXJlIiwiX19kaXJuYW1lIiwiY2hlY2tMb2dpbiIsInJlcSIsIm91dHB1dCIsImxvZ0luU3RhdHVzIiwic2Vzc2lvbiIsInVzZXJFbWFpbCIsInVzZXJQYXNzd29yZCIsInNxbExvZ0luIiwicXVlcnkiLCJyZXNwb25zZUxvZ0luIiwibGVuZ3RoIiwidXNlckluZm8iLCJ1c2VySWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQ0MsU0FBUyxHQUFHLHVCQUFiLENBQWxCLEMsQ0FFQTs7O0FBQ0EsSUFBTUMsVUFBVTtBQUFBLHFFQUFHLGlCQUFPQyxHQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNYQyxZQUFBQSxNQURXLEdBQ0Y7QUFDYkMsY0FBQUEsV0FBVyxFQUFFO0FBREEsYUFERSxFQUtqQjs7QUFMaUIsa0JBTWJGLEdBQUcsQ0FBQ0csT0FBSixDQUFZQyxTQUFaLElBQXlCSixHQUFHLENBQUNHLE9BQUosQ0FBWUUsWUFOeEI7QUFBQTtBQUFBO0FBQUE7O0FBT1RDLFlBQUFBLFFBUFMsR0FRYixvRUFSYTtBQUFBO0FBQUEsbUJBVWFWLEVBQUUsQ0FBQ1csS0FBSCxDQUFTRCxRQUFULEVBQW1CLENBQzdDTixHQUFHLENBQUNHLE9BQUosQ0FBWUMsU0FEaUMsRUFFN0NKLEdBQUcsQ0FBQ0csT0FBSixDQUFZRSxZQUZpQyxDQUFuQixDQVZiOztBQUFBO0FBVVRHLFlBQUFBLGFBVlM7O0FBZWY7QUFDQSxnQkFBSUEsYUFBYSxDQUFDLENBQUQsQ0FBYixDQUFpQkMsTUFBakIsR0FBMEIsQ0FBOUIsRUFBaUM7QUFDL0JSLGNBQUFBLE1BQU0sQ0FBQ1MsUUFBUCxHQUFrQkYsYUFBYSxDQUFDLENBQUQsQ0FBYixDQUFpQixDQUFqQixDQUFsQjtBQUNBUCxjQUFBQSxNQUFNLENBQUNDLFdBQVAsR0FBcUIsSUFBckI7QUFDRCxhQUhELE1BR087QUFDTDtBQUNBLHFCQUFPRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsU0FBbkI7QUFDQSxxQkFBT0osR0FBRyxDQUFDRyxPQUFKLENBQVlFLFlBQW5CO0FBQ0EscUJBQU9MLEdBQUcsQ0FBQ0csT0FBSixDQUFZUSxNQUFuQjtBQUNEOztBQXhCYztBQUFBLDZDQTJCVlYsTUEzQlU7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBVkYsVUFBVTtBQUFBO0FBQUE7QUFBQSxHQUFoQjs7QUE4QkFhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsVUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BlZ2d5L0RvY3VtZW50cy9WU19jb2RlL3JlYWN0L0luU2Vuc2Utbm9kZS9JblNlbnNlX05vZGUvbGlicmFyaWVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRiID0gcmVxdWlyZShfX2Rpcm5hbWUgKyBcIi8uLi9yb3V0ZXMvZGJfY29ubmVjdFwiKTtcblxuLy/mr4/mrKHlkJHlvoznq6/oq4vmsYLmmYLvvIzpnIDpqZforYnnmbvlhaXni4DmhYtcbmNvbnN0IGNoZWNrTG9naW4gPSBhc3luYyAocmVxKSA9PiB7XG4gIGNvbnN0IG91dHB1dCA9IHtcbiAgICBsb2dJblN0YXR1czogZmFsc2UsXG4gIH07XG5cbiAgLy8gY29uc29sZS5sb2cocmVxLnNlc3Npb24pO1xuICBpZiAocmVxLnNlc3Npb24udXNlckVtYWlsICYmIHJlcS5zZXNzaW9uLnVzZXJQYXNzd29yZCkge1xuICAgIGNvbnN0IHNxbExvZ0luID1cbiAgICAgIFwiU0VMRUNUICogRlJPTSBVc2VycyBXSEVSRSBgdXNlckFjY291bnRgID0gPyBBTkQgYHVzZXJQYXNzd29yZGAgPSA/XCI7XG5cbiAgICBjb25zdCByZXNwb25zZUxvZ0luID0gYXdhaXQgZGIucXVlcnkoc3FsTG9nSW4sIFtcbiAgICAgIHJlcS5zZXNzaW9uLnVzZXJFbWFpbCxcbiAgICAgIHJlcS5zZXNzaW9uLnVzZXJQYXNzd29yZCxcbiAgICBdKTtcblxuICAgIC8v6Iul5a2Y5Zyo6Kmy5L2/55So6ICFXG4gICAgaWYgKHJlc3BvbnNlTG9nSW5bMF0ubGVuZ3RoID4gMCkge1xuICAgICAgb3V0cHV0LnVzZXJJbmZvID0gcmVzcG9uc2VMb2dJblswXVswXTtcbiAgICAgIG91dHB1dC5sb2dJblN0YXR1cyA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8v6Iul55m855Sf5om+5LiN5Yiw6Kmy5L2/55So6ICFXG4gICAgICBkZWxldGUgcmVxLnNlc3Npb24udXNlckVtYWlsO1xuICAgICAgZGVsZXRlIHJlcS5zZXNzaW9uLnVzZXJQYXNzd29yZDtcbiAgICAgIGRlbGV0ZSByZXEuc2Vzc2lvbi51c2VySWQ7XG4gICAgfVxuICB9XG4gIC8vIGNvbnNvbGUubG9nKG91dHB1dClcbiAgcmV0dXJuIG91dHB1dDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY2hlY2tMb2dpbjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "checkLogin.js"
      ],
      "names": [
        "db",
        "require",
        "__dirname",
        "checkLogin",
        "req",
        "output",
        "logInStatus",
        "session",
        "userEmail",
        "userPassword",
        "sqlLogIn",
        "query",
        "responseLogIn",
        "length",
        "userInfo",
        "userId",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAACC,SAAS,GAAG,uBAAb,CAAlB,C,CAEA;;;AACA,IAAMC,UAAU;AAAA,qEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,MADW,GACF;AACbC,cAAAA,WAAW,EAAE;AADA,aADE,EAKjB;;AALiB,kBAMbF,GAAG,CAACG,OAAJ,CAAYC,SAAZ,IAAyBJ,GAAG,CAACG,OAAJ,CAAYE,YANxB;AAAA;AAAA;AAAA;;AAOTC,YAAAA,QAPS,GAQb,oEARa;AAAA;AAAA,mBAUaV,EAAE,CAACW,KAAH,CAASD,QAAT,EAAmB,CAC7CN,GAAG,CAACG,OAAJ,CAAYC,SADiC,EAE7CJ,GAAG,CAACG,OAAJ,CAAYE,YAFiC,CAAnB,CAVb;;AAAA;AAUTG,YAAAA,aAVS;;AAef;AACA,gBAAIA,aAAa,CAAC,CAAD,CAAb,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BR,cAAAA,MAAM,CAACS,QAAP,GAAkBF,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAlB;AACAP,cAAAA,MAAM,CAACC,WAAP,GAAqB,IAArB;AACD,aAHD,MAGO;AACL;AACA,qBAAOF,GAAG,CAACG,OAAJ,CAAYC,SAAnB;AACA,qBAAOJ,GAAG,CAACG,OAAJ,CAAYE,YAAnB;AACA,qBAAOL,GAAG,CAACG,OAAJ,CAAYQ,MAAnB;AACD;;AAxBc;AAAA,6CA2BVV,MA3BU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVF,UAAU;AAAA;AAAA;AAAA,GAAhB;;AA8BAa,MAAM,CAACC,OAAP,GAAiBd,UAAjB",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/libraries/",
      "sourcesContent": [
        "const db = require(__dirname + \"/../routes/db_connect\");\n\n//每次向後端請求時，需驗證登入狀態\nconst checkLogin = async (req) => {\n  const output = {\n    logInStatus: false,\n  };\n\n  // console.log(req.session);\n  if (req.session.userEmail && req.session.userPassword) {\n    const sqlLogIn =\n      \"SELECT * FROM Users WHERE `userAccount` = ? AND `userPassword` = ?\";\n\n    const responseLogIn = await db.query(sqlLogIn, [\n      req.session.userEmail,\n      req.session.userPassword,\n    ]);\n\n    //若存在該使用者\n    if (responseLogIn[0].length > 0) {\n      output.userInfo = responseLogIn[0][0];\n      output.logInStatus = true;\n    } else {\n      //若發生找不到該使用者\n      delete req.session.userEmail;\n      delete req.session.userPassword;\n      delete req.session.userId;\n    }\n  }\n  // console.log(output)\n  return output;\n};\n\nmodule.exports = checkLogin;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593090514851
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/orders.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/orders.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/orders.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/orders.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "orders.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar db = require(__dirname + \"/db_connect\"); // //404頁面\n// const HttpError = require(\"../models/http-error\");\n\n\nvar express = require(\"express\");\n\nvar router = express.Router();\n\nvar moment = require(\"moment\"); //history order required\n\n\nvar GetApi = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req) {\n    var perPage, page, output, _yield$db$query, _yield$db$query2, r1, sql, _yield$db$query3, _yield$db$query4, r2, _iterator, _step, i;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            perPage = 5;\n            page = parseInt(req.params.page) || 1;\n            output = {\n              // page: page,\n              perPage: perPage,\n              totalRows: 0,\n              // 總共有幾筆資料\n              totalPages: 0,\n              //總共有幾頁\n              rows: []\n            };\n            _context.next = 5;\n            return db.query(\"SELECT COUNT(1) num FROM orders\");\n\n          case 5:\n            _yield$db$query = _context.sent;\n            _yield$db$query2 = _slicedToArray(_yield$db$query, 1);\n            r1 = _yield$db$query2[0];\n            output.totalRows = r1[0].num;\n            output.totalPages = Math.ceil(output.totalRows / perPage);\n            if (page < 1) page = 1;\n            if (page > output.totalPages) page = output.totalPages;\n            if (output.totalPages === 0) page = 0;\n            output.page = page;\n\n            if (output.page) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", output);\n\n          case 16:\n            sql = \"SELECT * FROM `orderitemlist` INNER JOIN `orders` WHERE `orders`.`created_at` = `orderitemlist`.`create_time`\";\n            _context.next = 19;\n            return db.query(sql);\n\n          case 19:\n            _yield$db$query3 = _context.sent;\n            _yield$db$query4 = _slicedToArray(_yield$db$query3, 1);\n            r2 = _yield$db$query4[0];\n            if (r2) output.rows = r2;\n            _iterator = _createForOfIteratorHelper(r2);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                i = _step.value;\n                // console.log(i.created_at)\n                i.created_at = moment(i.created_at).format(\"YYYY-MM-DD\");\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            return _context.abrupt(\"return\", output);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GetApi(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //test route\n\n\nrouter.get(\"/test\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var output, sql;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(req.body);\n            output = {\n              success: false\n            };\n            sql = \"SELECT * FROM `OrderTb`\";\n            db.query(sql).then(function (_ref3) {\n              var _ref4 = _slicedToArray(_ref3, 1),\n                  r = _ref4[0];\n\n              output.results = r;\n\n              if (r.affectedRows && r.insertId) {\n                output.success = true;\n              }\n\n              res.json(output);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.post(\"/orderList\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var orderId, sql, _yield$db$query5, _yield$db$query6, data;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            orderId = req.session.orderId;\n            sql = \"INSERT INTO `OrderTb` set ?\";\n            _context3.next = 4;\n            return db.query(sql, [req.body]);\n\n          case 4:\n            _yield$db$query5 = _context3.sent;\n            _yield$db$query6 = _slicedToArray(_yield$db$query5, 1);\n            data = _yield$db$query6[0];\n            // data[0].forEach((element) => {\n            //   element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n            // });\n            res.json(data);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVycy5qcyJdLCJuYW1lcyI6WyJkYiIsInJlcXVpcmUiLCJfX2Rpcm5hbWUiLCJleHByZXNzIiwicm91dGVyIiwiUm91dGVyIiwibW9tZW50IiwiR2V0QXBpIiwicmVxIiwicGVyUGFnZSIsInBhZ2UiLCJwYXJzZUludCIsInBhcmFtcyIsIm91dHB1dCIsInRvdGFsUm93cyIsInRvdGFsUGFnZXMiLCJyb3dzIiwicXVlcnkiLCJyMSIsIm51bSIsIk1hdGgiLCJjZWlsIiwic3FsIiwicjIiLCJpIiwiY3JlYXRlZF9hdCIsImZvcm1hdCIsImdldCIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJib2R5Iiwic3VjY2VzcyIsInRoZW4iLCJyIiwicmVzdWx0cyIsImFmZmVjdGVkUm93cyIsImluc2VydElkIiwianNvbiIsInBvc3QiLCJvcmRlcklkIiwic2Vzc2lvbiIsImRhdGEiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDQyxTQUFTLEdBQUcsYUFBYixDQUFsQixDLENBQ0E7QUFDQTs7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHRixPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNRyxNQUFNLEdBQUdELE9BQU8sQ0FBQ0UsTUFBUixFQUFmOztBQUNBLElBQU1DLE1BQU0sR0FBR0wsT0FBTyxDQUFDLFFBQUQsQ0FBdEIsQyxDQUVBOzs7QUFDQSxJQUFNTSxNQUFNO0FBQUEscUVBQUcsaUJBQU9DLEdBQVA7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNQQyxZQUFBQSxPQURPLEdBQ0csQ0FESDtBQUVUQyxZQUFBQSxJQUZTLEdBRUZDLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDSSxNQUFKLENBQVdGLElBQVosQ0FBUixJQUE2QixDQUYzQjtBQUdQRyxZQUFBQSxNQUhPLEdBR0U7QUFDYjtBQUNBSixjQUFBQSxPQUFPLEVBQUVBLE9BRkk7QUFHYkssY0FB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RGtCLEdBQ1JoQyxHQUFHLENBQUNpQyxPQUFKLENBQVlELE9BREo7QUFFbEJsQixZQUFBQSxHQUZrQixHQUVaLDZCQUZZO0FBQUE7QUFBQSxtQkFHSHRCLEVBQUUsQ0FBQ2lCLEtBQUgsQ0FBU0ssR0FBVCxFQUFjLENBQUNkLEdBQUcsQ0FBQ3VCLElBQUwsQ0FBZCxDQUhHOztBQUFBO0FBQUE7QUFBQTtBQUdqQlcsWUFBQUEsSUFIaUI7QUFJeEI7QUFDQTtBQUNBO0FBQ0FkLFlBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTSSxJQUFUOztBQVB3QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUExQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcGVnZ3kvRG9jdW1lbnRzL1ZTX2NvZGUvcmVhY3QvSW5TZW5zZS1ub2RlL0luU2Vuc2VfTm9kZS9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGIgPSByZXF1aXJlKF9fZGlybmFtZSArIFwiL2RiX2Nvbm5lY3RcIik7XG4vLyAvLzQwNOmggemdolxuLy8gY29uc3QgSHR0cEVycm9yID0gcmVxdWlyZShcIi4uL21vZGVscy9odHRwLWVycm9yXCIpO1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IG1vbWVudCA9IHJlcXVpcmUoXCJtb21lbnRcIik7XG5cbi8vaGlzdG9yeSBvcmRlciByZXF1aXJlZFxuY29uc3QgR2V0QXBpID0gYXN5bmMgKHJlcSkgPT4ge1xuICBjb25zdCBwZXJQYWdlID0gNTtcbiAgbGV0IHBhZ2UgPSBwYXJzZUludChyZXEucGFyYW1zLnBhZ2UpIHx8IDE7XG4gIGNvbnN0IG91dHB1dCA9IHtcbiAgICAvLyBwYWdlOiBwYWdlLFxuICAgIHBlclBhZ2U6IHBlclBhZ2UsXG4gICAgdG90YWxSb3dzOiAwLCAvLyDnuL3lhbHmnInlub7nrYbos4fmlplcbiAgICB0b3RhbFBhZ2VzOiAwLCAvL+e4veWFseacieW5vumggVxuICAgIHJvd3M6IFtdLFxuICB9O1xuICBjb25zdCBbcjFdID0gYXdhaXQgZGIucXVlcnkoXCJTRUxFQ1QgQ09VTlQoMSkgbnVtIEZST00gb3JkZXJzXCIpO1xuICBvdXRwdXQudG90YWxSb3dzID0gcjFbMF0ubnVtO1xuICBvdXRwdXQudG90YWxQYWdlcyA9IE1hdGguY2VpbChvdXRwdXQudG90YWxSb3dzIC8gcGVyUGFnZSk7XG4gIGlmIChwYWdlIDwgMSkgcGFnZSA9IDE7XG4gIGlmIChwYWdlID4gb3V0cHV0LnRvdGFsUGFnZXMpIHBhZ2UgPSBvdXRwdXQudG90YWxQYWdlcztcbiAgaWYgKG91dHB1dC50b3RhbFBhZ2VzID09PSAwKSBwYWdlID0gMDtcbiAgb3V0cHV0LnBhZ2UgPSBwYWdlO1xuXG4gIGlmICghb3V0cHV0LnBhZ2UpIHtcbiAgICByZXR1cm4gb3V0cHV0O1xuICB9XG4gIGNvbnN0IHNxbCA9XG4gICAgXCJTRUxFQ1QgKiBGUk9NIGBvcmRlcml0ZW1saXN0YCBJTk5FUiBKT0lOIGBvcmRlcnNgIFdIRVJFIGBvcmRlcnNgLmBjcmVhdGVkX2F0YCA9IGBvcmRlcml0ZW1saXN0YC5gY3JlYXRlX3RpbWVgXCI7XG5cbiAgY29uc3QgW3IyXSA9IGF3YWl0IGRiLnF1ZXJ5KHNxbCk7XG4gIGlmIChyMikgb3V0cHV0LnJvd3MgPSByMjtcbiAgZm9yIChsZXQgaSBvZiByMikge1xuICAgIC8vIGNvbnNvbGUubG9nKGkuY3JlYXRlZF9hdClcbiAgICBpLmNyZWF0ZWRfYXQgPSBtb21lbnQoaS5jcmVhdGVkX2F0KS5mb3JtYXQoXCJZWVlZLU1NLUREXCIpO1xuICB9XG4gIHJldHVybiBvdXRwdXQ7XG59O1xuXG4vL3Rlc3Qgcm91dGVcbnJvdXRlci5nZXQoXCIvdGVzdFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuICBjb25zdCBvdXRwdXQgPSB7XG4gICAgc3VjY2VzczogZmFsc2UsXG4gIH07XG4gIGNvbnN0IHNxbCA9IFwiU0VMRUNUICogRlJPTSBgT3JkZXJUYmBcIjtcbiAgZGIucXVlcnkoc3FsKS50aGVuKChbcl0pID0+IHtcbiAgICBvdXRwdXQucmVzdWx0cyA9IHI7XG4gICAgaWYgKHIuYWZmZWN0ZWRSb3dzICYmIHIuaW5zZXJ0SWQpIHtcbiAgICAgIG91dHB1dC5zdWNjZXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgcmVzLmpzb24ob3V0cHV0KTtcbiAgfSk7XG59KTtcblxucm91dGVyLnBvc3QoXCIvb3JkZXJMaXN0XCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBvcmRlcklkID0gcmVxLnNlc3Npb24ub3JkZXJJZDtcbiAgY29uc3Qgc3FsID0gXCJJTlNFUlQgSU5UTyBgT3JkZXJUYmAgc2V0ID9cIjtcbiAgY29uc3QgW2RhdGFdID0gYXdhaXQgZGIucXVlcnkoc3FsLCBbcmVxLmJvZHldKTtcbiAgLy8gZGF0YVswXS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gIC8vICAgZWxlbWVudC5jbGFzc1RpbWUgPSBtb21lbnQoZWxlbWVudC5jbGFzc1RpbWUpLmZvcm1hdChcIllZWVkvTU0vRERcIik7XG4gIC8vIH0pO1xuICByZXMuanNvbihkYXRhKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "orders.js"
      ],
      "names": [
        "db",
        "require",
        "__dirname",
        "express",
        "router",
        "Router",
        "moment",
        "GetApi",
        "req",
        "perPage",
        "page",
        "parseInt",
        "params",
        "output",
        "totalRows",
        "totalPages",
        "rows",
        "query",
        "r1",
        "num",
        "Math",
        "ceil",
        "sql",
        "r2",
        "i",
        "created_at",
        "format",
        "get",
        "res",
        "console",
        "log",
        "body",
        "success",
        "then",
        "r",
        "results",
        "affectedRows",
        "insertId",
        "json",
        "post",
        "orderId",
        "session",
        "data",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "const db = require(__dirname + \"/db_connect\");\n// //404頁面\n// const HttpError = require(\"../models/http-error\");\nconst express = require(\"express\");\nconst router = express.Router();\nconst moment = require(\"moment\");\n\n//history order required\nconst GetApi = async (req) => {\n  const perPage = 5;\n  let page = parseInt(req.params.page) || 1;\n  const output = {\n    // page: page,\n    perPage: perPage,\n    totalRows: 0, // 總共有幾筆資料\n    totalPages: 0, //總共有幾頁\n    rows: [],\n  };\n  const [r1] = await db.query(\"SELECT COUNT(1) num FROM orders\");\n  output.totalRows = r1[0].num;\n  output.totalPages = Math.ceil(output.totalRows / perPage);\n  if (page < 1) page = 1;\n  if (page > output.totalPages) page = output.totalPages;\n  if (output.totalPages === 0) page = 0;\n  output.page = page;\n\n  if (!output.page) {\n    return output;\n  }\n  const sql =\n    \"SELECT * FROM `orderitemlist` INNER JOIN `orders` WHERE `orders`.`created_at` = `orderitemlist`.`create_time`\";\n\n  const [r2] = await db.query(sql);\n  if (r2) output.rows = r2;\n  for (let i of r2) {\n    // console.log(i.created_at)\n    i.created_at = moment(i.created_at).format(\"YYYY-MM-DD\");\n  }\n  return output;\n};\n\n//test route\nrouter.get(\"/test\", async (req, res) => {\n  console.log(req.body);\n  const output = {\n    success: false,\n  };\n  const sql = \"SELECT * FROM `OrderTb`\";\n  db.query(sql).then(([r]) => {\n    output.results = r;\n    if (r.affectedRows && r.insertId) {\n      output.success = true;\n    }\n    res.json(output);\n  });\n});\n\nrouter.post(\"/orderList\", async (req, res) => {\n  const orderId = req.session.orderId;\n  const sql = \"INSERT INTO `OrderTb` set ?\";\n  const [data] = await db.query(sql, [req.body]);\n  // data[0].forEach((element) => {\n  //   element.classTime = moment(element.classTime).format(\"YYYY/MM/DD\");\n  // });\n  res.json(data);\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593259201933
  },
  "{\"sourceRoot\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"filename\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/order.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar db = require(__dirname + \"/db_connect\");\n\nvar router = express.Router();\n\nvar checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n\n\nrouter.get('/', function (req, res) {\n  console.log('1111');\n});\nrouter.post('/', function (req, res) {\n  var sql = 'INSERT INTO `OrderTb` SET ?';\n});\nrouter.get('/ordersdetail', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var checkLogIn, output, sql, response, data;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return checkLogin(req);\n\n          case 2:\n            checkLogIn = _context.sent;\n            console.log(req.session);\n            output = {\n              success: false,\n              logInStatus: checkLogIn.logInStatus,\n              userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n            };\n\n            if (!output.logInStatus) {\n              _context.next = 13;\n              break;\n            }\n\n            sql = 'SELECT `OrderTb`.`orderId`,`OrderTb`.`orderStatus`,`OrderTb`.`itemInfo`,`users`.`userFirstName`,`users`.`userLastName`,`users`.`userPostCode`,`users`.`userCity`,`users`.`userDistrict`,`users`.`userAddress` FROM `OrderTb` INNER JOIN `users` ON `OrderTb`.`userId` = `users`.`userId`';\n            _context.next = 9;\n            return db.query(sql);\n\n          case 9:\n            response = _context.sent;\n            data = _objectSpread(_objectSpread({}, response[0][0]), {}, {\n              \"itemInfo\": JSON.parse(response[0][0].itemInfo)\n            });\n            output.success = true;\n            output.data = data;\n\n          case 13:\n            console.log(output);\n            res.json(output);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiZGIiLCJfX2Rpcm5hbWUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJjaGVja0xvZ2luIiwiZ2V0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsInBvc3QiLCJzcWwiLCJjaGVja0xvZ0luIiwic2Vzc2lvbiIsIm91dHB1dCIsInN1Y2Nlc3MiLCJsb2dJblN0YXR1cyIsInVzZXJJbmZvIiwicXVlcnkiLCJyZXNwb25zZSIsImRhdGEiLCJKU09OIiwicGFyc2UiLCJpdGVtSW5mbyIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDRSxTQUFTLEdBQUcsYUFBYixDQUFsQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFiOztBQUNBLElBQU1DLFVBQVUsR0FBR0wsT0FBTyxDQUFDRSxTQUFTLEdBQUcsMEJBQWIsQ0FBMUIsQyxDQUFvRTs7O0FBR3BFQyxNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzVCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxNQUFaO0FBQ0QsQ0FGRDtBQUdBUCxNQUFNLENBQUNRLElBQVAsQ0FBWSxHQUFaLEVBQWlCLFVBQUNKLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBRTdCLE1BQU1JLEdBQUcsR0FBRyw2QkFBWjtBQUNELENBSEQ7QUFLQVQsTUFBTSxDQUFDRyxHQUFQLENBQVcsZUFBWDtBQUFBLHFFQUE0QixpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBRURILFVBQVUsQ0FBQ0UsR0FBRCxDQUZUOztBQUFBO0FBRXBCTSxZQUFBQSxVQUZvQjtBQUcxQkosWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQUcsQ0FBQ08sT0FBaEI7QUFDTUMsWUFBQUEsTUFKb0IsR0FJWDtBQUNiQyxjQUFBQSxPQUFPLEVBQUUsS0FESTtBQUViQyxjQUFBQSxXQUFXLEVBQUVKLFVBQVUsQ0FBQ0ksV0FGWDtBQUdiQyxjQUFBQSxRQUFRLEVBQUVMLFVBQVUsQ0FBQ0ssUUFBWCxHQUFzQkwsVUFBVSxDQUFDSyxRQUFqQyxHQUE0QztBQUh6QyxhQUpXOztBQUFBLGlCQVN0QkgsTUFBTSxDQUFDRSxXQVRlO0FBQUE7QUFBQTtBQUFBOztBQVVsQkwsWUFBQUEsR0FWa0IsR0FVWiwwUkFWWTtBQUFBO0FBQUEsbUJBWURYLEVBQUUsQ0FBQ2tCLEtBQUgsQ0FBU1AsR0FBVCxDQVpDOztBQUFBO0FBWWxCUSxZQUFBQSxRQVprQjtBQWFsQkMsWUFBQUEsSUFia0IsbUNBYU5ELFFBQVEsQ0FBQyxDQUFELENBQVIsQ0FBWSxDQUFaLENBYk07QUFhVSwwQkFBWUUsSUFBSSxDQUFDQyxLQUFMLENBQVdILFFBQVEsQ0FBQyxDQUFELENBQVIsQ0FBWSxDQUFaLEVBQWVJLFFBQTFCO0FBYnRCO0FBY3hCVCxZQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsSUFBakI7QUFDQUQsWUFBQUEsTUFBTSxDQUFDTSxJQUFQLEdBQWNBLElBQWQ7O0FBZndCO0FBaUIxQlosWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlLLE1BQVo7QUFDQVAsWUFBQUEsR0FBRyxDQUFDaUIsSUFBSixDQUFTVixNQUFUOztBQWxCMEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBNUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFzQkFXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnhCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wZWdneS9Eb2N1bWVudHMvVlNfY29kZS9yZWFjdC9JblNlbnNlLW5vZGUvSW5TZW5zZV9Ob2RlL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgZGIgPSByZXF1aXJlKF9fZGlybmFtZSArIFwiL2RiX2Nvbm5lY3RcIik7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGNoZWNrTG9naW4gPSByZXF1aXJlKF9fZGlybmFtZSArIFwiLy4uL2xpYnJhcmllcy9jaGVja0xvZ2luXCIpOyAvLyDmqqLmn6Vsb2dpbiDni4DmhYtcblxuXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKCcxMTExJylcbn0pXG5yb3V0ZXIucG9zdCgnLycsIChyZXEsIHJlcykgPT4ge1xuXG4gIGNvbnN0IHNxbCA9ICdJTlNFUlQgSU5UTyBgT3JkZXJUYmAgU0VUID8nXG59KVxuXG5yb3V0ZXIuZ2V0KCcvb3JkZXJzZGV0YWlsJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cbiAgY29uc3QgY2hlY2tMb2dJbiA9IGF3YWl0IGNoZWNrTG9naW4ocmVxKTtcbiAgY29uc29sZS5sb2cocmVxLnNlc3Npb24pXG4gIGNvbnN0IG91dHB1dCA9IHtcbiAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICBsb2dJblN0YXR1czogY2hlY2tMb2dJbi5sb2dJblN0YXR1cyxcbiAgICB1c2VySW5mbzogY2hlY2tMb2dJbi51c2VySW5mbyA/IGNoZWNrTG9nSW4udXNlckluZm8gOiBudWxsXG4gIH1cbiAgaWYgKG91dHB1dC5sb2dJblN0YXR1cykge1xuICAgIGNvbnN0IHNxbCA9ICdTRUxFQ1QgYE9yZGVyVGJgLmBvcmRlcklkYCxgT3JkZXJUYmAuYG9yZGVyU3RhdHVzYCxgT3JkZXJUYmAuYGl0ZW1JbmZvYCxgdXNlcnNgLmB1c2VyRmlyc3ROYW1lYCxgdXNlcnNgLmB1c2VyTGFzdE5hbWVgLGB1c2Vyc2AuYHVzZXJQb3N0Q29kZWAsYHVzZXJzYC5gdXNlckNpdHlgLGB1c2Vyc2AuYHVzZXJEaXN0cmljdGAsYHVzZXJzYC5gdXNlckFkZHJlc3NgIEZST00gYE9yZGVyVGJgIElOTkVSIEpPSU4gYHVzZXJzYCBPTiBgT3JkZXJUYmAuYHVzZXJJZGAgPSBgdXNlcnNgLmB1c2VySWRgJ1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYi5xdWVyeShzcWwpXG4gICAgY29uc3QgZGF0YSA9IHsgLi4ucmVzcG9uc2VbMF1bMF0sIFwiaXRlbUluZm9cIjogSlNPTi5wYXJzZShyZXNwb25zZVswXVswXS5pdGVtSW5mbykgfVxuICAgIG91dHB1dC5zdWNjZXNzID0gdHJ1ZVxuICAgIG91dHB1dC5kYXRhID0gZGF0YVxuICB9XG4gIGNvbnNvbGUubG9nKG91dHB1dClcbiAgcmVzLmpzb24ob3V0cHV0KVxufSlcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "__dirname",
        "router",
        "Router",
        "checkLogin",
        "get",
        "req",
        "res",
        "console",
        "log",
        "post",
        "sql",
        "checkLogIn",
        "session",
        "output",
        "success",
        "logInStatus",
        "userInfo",
        "query",
        "response",
        "data",
        "JSON",
        "parse",
        "itemInfo",
        "json",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAACE,SAAS,GAAG,aAAb,CAAlB;;AACA,IAAIC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAb;;AACA,IAAMC,UAAU,GAAGL,OAAO,CAACE,SAAS,GAAG,0BAAb,CAA1B,C,CAAoE;;;AAGpEC,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,CAFD;AAGAP,MAAM,CAACQ,IAAP,CAAY,GAAZ,EAAiB,UAACJ,GAAD,EAAMC,GAAN,EAAc;AAE7B,MAAMI,GAAG,GAAG,6BAAZ;AACD,CAHD;AAKAT,MAAM,CAACG,GAAP,CAAW,eAAX;AAAA,qEAA4B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEDH,UAAU,CAACE,GAAD,CAFT;;AAAA;AAEpBM,YAAAA,UAFoB;AAG1BJ,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACO,OAAhB;AACMC,YAAAA,MAJoB,GAIX;AACbC,cAAAA,OAAO,EAAE,KADI;AAEbC,cAAAA,WAAW,EAAEJ,UAAU,CAACI,WAFX;AAGbC,cAAAA,QAAQ,EAAEL,UAAU,CAACK,QAAX,GAAsBL,UAAU,CAACK,QAAjC,GAA4C;AAHzC,aAJW;;AAAA,iBAStBH,MAAM,CAACE,WATe;AAAA;AAAA;AAAA;;AAUlBL,YAAAA,GAVkB,GAUZ,0RAVY;AAAA;AAAA,mBAYDX,EAAE,CAACkB,KAAH,CAASP,GAAT,CAZC;;AAAA;AAYlBQ,YAAAA,QAZkB;AAalBC,YAAAA,IAbkB,mCAaND,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAbM;AAaU,0BAAYE,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,EAAeI,QAA1B;AAbtB;AAcxBT,YAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,YAAAA,MAAM,CAACM,IAAP,GAAcA,IAAd;;AAfwB;AAiB1BZ,YAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAP,YAAAA,GAAG,CAACiB,IAAJ,CAASV,MAAT;;AAlB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAsBAW,MAAM,CAACC,OAAP,GAAiBxB,MAAjB",
      "sourceRoot": "/Users/peggy/Documents/VS_code/react/InSense-node/InSense_Node/routes/",
      "sourcesContent": [
        "var express = require(\"express\");\nconst db = require(__dirname + \"/db_connect\");\nvar router = express.Router();\nconst checkLogin = require(__dirname + \"/../libraries/checkLogin\"); // 檢查login 狀態\n\n\nrouter.get('/', (req, res) => {\n  console.log('1111')\n})\nrouter.post('/', (req, res) => {\n\n  const sql = 'INSERT INTO `OrderTb` SET ?'\n})\n\nrouter.get('/ordersdetail', async (req, res) => {\n\n  const checkLogIn = await checkLogin(req);\n  console.log(req.session)\n  const output = {\n    success: false,\n    logInStatus: checkLogIn.logInStatus,\n    userInfo: checkLogIn.userInfo ? checkLogIn.userInfo : null\n  }\n  if (output.logInStatus) {\n    const sql = 'SELECT `OrderTb`.`orderId`,`OrderTb`.`orderStatus`,`OrderTb`.`itemInfo`,`users`.`userFirstName`,`users`.`userLastName`,`users`.`userPostCode`,`users`.`userCity`,`users`.`userDistrict`,`users`.`userAddress` FROM `OrderTb` INNER JOIN `users` ON `OrderTb`.`userId` = `users`.`userId`'\n\n    const response = await db.query(sql)\n    const data = { ...response[0][0], \"itemInfo\": JSON.parse(response[0][0].itemInfo) }\n    output.success = true\n    output.data = data\n  }\n  console.log(output)\n  res.json(output)\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1593259007760
  }
}